[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "The lecture materials will be provided at this website\n\n\n\n\nOctober 1st, 2024, Tuesday 4-7pm, ONLINE\nContents: Introduction about the lecture\n\n\n\nOctober 8th, 2024, Tuesday 4-7pm, ONLINE\nContents: Latex link for lecture materials\n\n\n\nOctober 15th, 2024, Tuesday 4-7pm, ONLINE\nContents: Latex at Overleaf link for lecture materials\n\n\n\nOctober 22th, 2024, Tuesday 4-7pm, ONLINE\nContents: Introduction to algoritms link for lecture material and Excel link for lecture material\n\n\n\nNovember 5th, 2024, Tuesday 4-7pm, ONLINE\nContents: Excel Part2 link for lecture material\n\n\n\nNovember 12th, 2024, Tuesday 4-7pm, ONLINE\nContents: Excel Pivot tables and charts link for lecture material\n\n\n\nNovember 26th, 2024, Tuesday 4-7pm, ONLINE\nContents: Python part1 link for lecture material\n\n\n\nDecember 3rd, 2024, Tuesday 4-7pm, ONLINE\nContents: Python part2 link for lecture material\n\n\n\nDecember 10th, 2024, Tuesday 4-7pm, ONLINE\nContents: SPSS Part1 link for lecture material, html_version. Derste kullanılan dosyalar: mtcars.sav"
  },
  {
    "objectID": "index.html#resources",
    "href": "index.html#resources",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "The lecture materials will be provided at this website"
  },
  {
    "objectID": "index.html#lecture1",
    "href": "index.html#lecture1",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "October 1st, 2024, Tuesday 4-7pm, ONLINE\nContents: Introduction about the lecture"
  },
  {
    "objectID": "index.html#lecture2",
    "href": "index.html#lecture2",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "October 8th, 2024, Tuesday 4-7pm, ONLINE\nContents: Latex link for lecture materials"
  },
  {
    "objectID": "index.html#lecture3",
    "href": "index.html#lecture3",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "October 15th, 2024, Tuesday 4-7pm, ONLINE\nContents: Latex at Overleaf link for lecture materials"
  },
  {
    "objectID": "index.html#lecture4",
    "href": "index.html#lecture4",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "October 22th, 2024, Tuesday 4-7pm, ONLINE\nContents: Introduction to algoritms link for lecture material and Excel link for lecture material"
  },
  {
    "objectID": "index.html#lecture5",
    "href": "index.html#lecture5",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "November 5th, 2024, Tuesday 4-7pm, ONLINE\nContents: Excel Part2 link for lecture material"
  },
  {
    "objectID": "index.html#lecture6",
    "href": "index.html#lecture6",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "November 12th, 2024, Tuesday 4-7pm, ONLINE\nContents: Excel Pivot tables and charts link for lecture material"
  },
  {
    "objectID": "index.html#lecture7",
    "href": "index.html#lecture7",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "November 26th, 2024, Tuesday 4-7pm, ONLINE\nContents: Python part1 link for lecture material"
  },
  {
    "objectID": "index.html#lecture8",
    "href": "index.html#lecture8",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "December 3rd, 2024, Tuesday 4-7pm, ONLINE\nContents: Python part2 link for lecture material"
  },
  {
    "objectID": "index.html#lecture9",
    "href": "index.html#lecture9",
    "title": "FEF1002 Introduction to Basic Computer Technologies",
    "section": "",
    "text": "December 10th, 2024, Tuesday 4-7pm, ONLINE\nContents: SPSS Part1 link for lecture material, html_version. Derste kullanılan dosyalar: mtcars.sav"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "FEF1002 Lecture Materials",
    "section": "",
    "text": "Lecture materials for FEF1002 for 2024 FALL semester at YTU Faculty of Science and Letters\n\n\n\nWhat are the midterm topics?\n\nThe midterm will cover all topics up to and including Excel\n\nIs the midterm exam classical or multiple choice?\n\nThe exam will be (most likely) multiple choice"
  },
  {
    "objectID": "about.html#frequently-asked-questions",
    "href": "about.html#frequently-asked-questions",
    "title": "FEF1002 Lecture Materials",
    "section": "",
    "text": "What are the midterm topics?\n\nThe midterm will cover all topics up to and including Excel\n\nIs the midterm exam classical or multiple choice?\n\nThe exam will be (most likely) multiple choice"
  },
  {
    "objectID": "week6-excel-part3.html",
    "href": "week6-excel-part3.html",
    "title": "Excel - Part3",
    "section": "",
    "text": "This module will cover the following concepts:\n\nTables and Charts in Excel\n\n\n\n\n\nExcel Pivot table is a method used to quickly create reports from list-formatted data and compare data. Pivot Tables, one of Excel’s most frequently used features, are extensively used in creating Reporting screens.\nPivot Tables, where we can create reports by dragging and dropping table headers into row and column areas, have become an even more powerful and indispensable Excel feature with the features developed with new Excel versions. Pivot Tables have a very wide usage area, from comparing monthly sales values of salespeople to reporting monthly expenses of vehicles, and are an indispensable tool in managers’ Excel usage.\nThere are certain conditions for creating a Pivot Table from Excel data:\n\nYour data must be listed downward in columns.\nShould not contain empty rows or columns.\nWhen you create a Pivot Table from a table with continuous data entry, when you add a new row and refresh the data, your Pivot Table automatically updates.\nData types in columns should be of the same type. For example, if a column has a date header, that column should only contain date values.\n\nLet’s look at the following example\n\nYou can use file ornek4.xlsx for the following examples\n\n\nResearch Question: How many sales were made in each region?\nInsert–&gt;Pivot Table–&gt;Select Table/Range option and select all data range.\n\nWhen you select the desired information from the Pivot Table fields on the right side, the pivot table appears.\n\nIn this pivot table, for example, 125 sales were made in Adana. If you click on 125, you can see the details of the sales on a separate page.\n\nResearch Question: How many sales were made by region and month, and what is the total amount?\n\nYou can choose the row and column yourself. For example, we click on the brand on the right and drag it to row instead, so it separates by brands. When you select brand and price, a table like below can be created.\n\n\n\n\nThere are three basic chart types you can create in Excel, and they’re all very suitable for specific data types:\nLine - Displays one or more data sets using vertical bars. Can be used to list changes over time or compare two similar data sets\nColumn - Displays one or more data sets using horizontal lines. Can be used to show growth or decline in data over time\nPie - Displays a data set as parts of a whole. Can be used to show the visual distribution of data\nLet’s consider the following data set. We can create a chart by selecting all data and using the Insert–&gt;Recommended Charts tab.\n\nYou can use file ornek5.xlsx for the following examples\n\n\n\n\nFrom chart elements, adjustments can be made to the chart.\n\n\nLet’s try a different chart for the example above.\nSelect and copy the row containing dates and paste it to a different area using special paste–&gt;transpose\nRepeat the same process by selecting the apple row.\nAfterward, we can select the pie chart and modify the data labels as desired."
  },
  {
    "objectID": "week6-excel-part3.html#tables-and-charts-in-excel",
    "href": "week6-excel-part3.html#tables-and-charts-in-excel",
    "title": "Excel - Part3",
    "section": "",
    "text": "Excel Pivot table is a method used to quickly create reports from list-formatted data and compare data. Pivot Tables, one of Excel’s most frequently used features, are extensively used in creating Reporting screens.\nPivot Tables, where we can create reports by dragging and dropping table headers into row and column areas, have become an even more powerful and indispensable Excel feature with the features developed with new Excel versions. Pivot Tables have a very wide usage area, from comparing monthly sales values of salespeople to reporting monthly expenses of vehicles, and are an indispensable tool in managers’ Excel usage.\nThere are certain conditions for creating a Pivot Table from Excel data:\n\nYour data must be listed downward in columns.\nShould not contain empty rows or columns.\nWhen you create a Pivot Table from a table with continuous data entry, when you add a new row and refresh the data, your Pivot Table automatically updates.\nData types in columns should be of the same type. For example, if a column has a date header, that column should only contain date values.\n\nLet’s look at the following example\n\nYou can use file ornek4.xlsx for the following examples\n\n\nResearch Question: How many sales were made in each region?\nInsert–&gt;Pivot Table–&gt;Select Table/Range option and select all data range.\n\nWhen you select the desired information from the Pivot Table fields on the right side, the pivot table appears.\n\nIn this pivot table, for example, 125 sales were made in Adana. If you click on 125, you can see the details of the sales on a separate page.\n\nResearch Question: How many sales were made by region and month, and what is the total amount?\n\nYou can choose the row and column yourself. For example, we click on the brand on the right and drag it to row instead, so it separates by brands. When you select brand and price, a table like below can be created.\n\n\n\n\nThere are three basic chart types you can create in Excel, and they’re all very suitable for specific data types:\nLine - Displays one or more data sets using vertical bars. Can be used to list changes over time or compare two similar data sets\nColumn - Displays one or more data sets using horizontal lines. Can be used to show growth or decline in data over time\nPie - Displays a data set as parts of a whole. Can be used to show the visual distribution of data\nLet’s consider the following data set. We can create a chart by selecting all data and using the Insert–&gt;Recommended Charts tab.\n\nYou can use file ornek5.xlsx for the following examples\n\n\n\n\nFrom chart elements, adjustments can be made to the chart.\n\n\nLet’s try a different chart for the example above.\nSelect and copy the row containing dates and paste it to a different area using special paste–&gt;transpose\nRepeat the same process by selecting the apple row.\nAfterward, we can select the pie chart and modify the data labels as desired."
  },
  {
    "objectID": "latex-lecture2-en.html",
    "href": "latex-lecture2-en.html",
    "title": "Compiling LaTeX content",
    "section": "",
    "text": "LaTeX content needs compiling so if you’d like to compile files in your own computer you need to install LaTeX software on your own computer.\nAfter installation, you need to install required LaTeX packages. Long story short, installing and using LaTeX locally in your own computer is a hassle."
  },
  {
    "objectID": "latex-lecture2-en.html#overleaf",
    "href": "latex-lecture2-en.html#overleaf",
    "title": "Compiling LaTeX content",
    "section": "Overleaf",
    "text": "Overleaf\nOverleaf provides an online environment where LaTeX and all necessary packages installed so you don’t need to install anything.\nIn order to register for an account, please head over to Registration page at Overleaf"
  },
  {
    "objectID": "latex-lecture2-en.html#creating-different-document-types-in-the-overleaf-environment",
    "href": "latex-lecture2-en.html#creating-different-document-types-in-the-overleaf-environment",
    "title": "Compiling LaTeX content",
    "section": "Creating different document types in the Overleaf environment",
    "text": "Creating different document types in the Overleaf environment\nThe Overleaf platform can be used to create various types of documents such as articles, theses, presentations, posters, CV/Resume. For this purpose, a wide variety of ready-made templates can be found on the Overleaf site. You can visit the “Templates” link to search and try different types of templates.\nLet’s create examples for the following document types respectively.\n\nCV\nPoster\nPresentation (Beamer)\nArticle\nThesis (with YTÜ Template)"
  },
  {
    "objectID": "latex-lecture2-en.html#preparing-a-cv",
    "href": "latex-lecture2-en.html#preparing-a-cv",
    "title": "Compiling LaTeX content",
    "section": "Preparing a CV",
    "text": "Preparing a CV\nAfter clicking the Resume/CV templates link, you can select a sample CV template, fill it with your own information, compile it, and create a PDF CV. Click here for the AltaCV template."
  },
  {
    "objectID": "latex-lecture2-en.html#preparing-a-poster",
    "href": "latex-lecture2-en.html#preparing-a-poster",
    "title": "Compiling LaTeX content",
    "section": "Preparing a Poster",
    "text": "Preparing a Poster\nWith Poster templates, you can prepare PDF documents in poster size, in vertical or horizontal format."
  },
  {
    "objectID": "latex-lecture2-en.html#beamer-presentation-title-slide",
    "href": "latex-lecture2-en.html#beamer-presentation-title-slide",
    "title": "Compiling LaTeX content",
    "section": "Beamer: presentation title slide",
    "text": "Beamer: presentation title slide\nInformation such as title, subtitle, author name, institution name, conference name, and logo can be added to the title slide\n\\title[About Beamer] %optional\n{About the Beamer class in presentation making}\n\\subtitle{A short story}\n\\author[Arthur, Doe] % (optional, for multiple authors)\n{A.~B.~Arthur\\inst{1} \\and J.~Doe\\inst{2}}\n\\institute[VFU] % (optional)\n{\n  \\inst{1}%\n  Faculty of Physics\\\\\n  Very Famous University\n  \\and\n  \\inst{2}%\n  Faculty of Chemistry\\\\\n  Very Famous University\n}\n\\date[VLC 2021] % (optional)\n{Very Large Conference, April 2021}\n\\logo{\\includegraphics[height=1cm]{overleaf-logo}}\nThe output will be obtained as follows:"
  },
  {
    "objectID": "latex-lecture2-en.html#beamer-marking-important-words-and-sentences",
    "href": "latex-lecture2-en.html#beamer-marking-important-words-and-sentences",
    "title": "Compiling LaTeX content",
    "section": "Beamer: marking important words and sentences",
    "text": "Beamer: marking important words and sentences\nYou can mark parts of text\n\\begin{frame}\n\\frametitle{Sample frame title}\nIn this slide, some important text will be\n\\alert{highlighted} because it's important.\nPlease, don't abuse it.\n\\begin{block}{Remark}\nSample text\n\\end{block}\n\\begin{alertblock}{Important theorem}\nSample text in red box\n\\end{alertblock}\n\\begin{examples}\nSample text in green box. The title of the block is ``Examples\".\n\\end{examples}\n\\end{frame}\nThe output will look like this:"
  },
  {
    "objectID": "latex-lecture2-en.html#beamer-themes",
    "href": "latex-lecture2-en.html#beamer-themes",
    "title": "Compiling LaTeX content",
    "section": "Beamer: themes",
    "text": "Beamer: themes\nYou can see a list of beamer themes on the Overleaf beamer page.\nSelect one of the presentation templates prepared with Beamer from the Overleaf Templates page, modify it, compile it, and prepare a PDF presentation file."
  },
  {
    "objectID": "latex-lecture2-en.html#ytu-thesis-template",
    "href": "latex-lecture2-en.html#ytu-thesis-template",
    "title": "Compiling LaTeX content",
    "section": "YTU Thesis Template",
    "text": "YTU Thesis Template\nPlease visit the Thesis Writing Rules page and then download the zip file under the “Latex-Thesis Template” heading.\nAfter downloading, you should have a file named *YTU_Thesis_Latex_Template__08_05_2024.zip* in your folder."
  },
  {
    "objectID": "latex-lecture2-en.html#uploading-ytu-thesis-template-to-overleaf",
    "href": "latex-lecture2-en.html#uploading-ytu-thesis-template-to-overleaf",
    "title": "Compiling LaTeX content",
    "section": "Uploading YTU Thesis Template to Overleaf",
    "text": "Uploading YTU Thesis Template to Overleaf\n\nBefore uploading the YTU thesis template to Overleaf, you should register and log in to Overleaf. After logging in to Overleaf, click on “New Project” and then select “Project from Archive”.\n\n\nThen you can drag and drop the zip file you just downloaded from the YTU website, or click on “Select a .zip file” and choose the zip file from your local folders.  When all these steps are completed, you should see the YTU Thesis template in Overleaf like this:"
  },
  {
    "objectID": "latex-lecture2-en.html#the-power-of-latex",
    "href": "latex-lecture2-en.html#the-power-of-latex",
    "title": "Compiling LaTeX content",
    "section": "The Power of LaTeX",
    "text": "The Power of LaTeX\nLet’s see the power of LaTeX. In the main.tex file, update the following line:\n\\usepackage[tr, phd]{ytuthesis}\nto:\n\\usepackage[eng, phd]{ytuthesis}\nAs soon as you save the document (Ctrl + s), the entire thesis document will be compiled and the language of the thesis will be English. Observe the changes in the right pane (compiled PDF file)."
  },
  {
    "objectID": "latex-lecture2-en.html#document-structure",
    "href": "latex-lecture2-en.html#document-structure",
    "title": "Compiling LaTeX content",
    "section": "Document Structure",
    "text": "Document Structure\nAt the beginning of the main.tex file, you’ll see that the preamble part is quite short: (comment lines have been removed)\n\\documentclass[a4paper,12pt,oneside,openany]{book}\n\\usepackage[tr, phd]{ytuthesis}\n\\addbibresource{references.bib} \nHere, the ytuthesis.sty file, which is the YTU Thesis style file, is being used. This file contains YTU Thesis style rules (margins, font types, font sizes, line spacing, spaces after figures, etc.). Do not modify this file unless you know what you’re doing.\nAnd the references.bib file contains the references. This is actually a plain text file, open it in Overleaf and observe its content and style.\nAnd here’s the \\begin{document} - \\end{document} part:\n\\begin{document}\n\\input {frontPages.tex}\n\\input {thesisChapters/1-chapter.tex}\n\\input {thesisChapters/2-chapter.tex}\n\\input {thesisChapters/3-chapter.tex}\n\\input {thesisChapters/4-chapter.tex}\n\\newpage\n\\addcontentsline{toc}{chapter}{\\bibName}\n\\singlespacing\n\\printbibliography[title={\\bibName}]\n\\newpage\\appendix\n\\input {thesisChapters/A-appendix.tex}\n\\ifnum\\tmc=0\n\\newpage\n\\addcontentsline{toc}{chapter}{\\cvpub}\n\\input {publications.tex}\n\\fi\n\\end{document}\nAs you may recall, we said that LaTeX is like a programming language. Here, you can notice the \\input command, which can be used to include external files, which is useful when working with large documents. Also, the \\ifnum command checks the content of a variable (in this case tmc) and conditionally adds the publications.tex file to the thesis."
  },
  {
    "objectID": "latex-lecture2-en.html#variables",
    "href": "latex-lecture2-en.html#variables",
    "title": "Compiling LaTeX content",
    "section": "Variables",
    "text": "Variables\nFor small documents, it might be appropriate to work on a single main.tex file. However, for larger contents, keeping sections as separate files, collecting styles in a single file, and keeping variables in a separate file allows you to manage the writing process more easily.\nIn the case of the YTU thesis, the frontPages.tex file contains certain variables and we shouldn’t modify this file. However, the information.tex file contains variables related to the thesis and you need to update variables such as thesis title, advisor, etc. in this file.\nIf you want to update the thesis title, please open the information.tex file and update fields 1 and 2, then save the file (Ctrl + s)."
  },
  {
    "objectID": "latex-lecture2-en.html#your-turn",
    "href": "latex-lecture2-en.html#your-turn",
    "title": "Compiling LaTeX content",
    "section": "Your Turn",
    "text": "Your Turn\nFill in the information in the information.tex file as much as possible and observe the PDF file generated as a result of compilation in the right panel as you save the file.\nThen, try adding a figure, a table, and a citation to the 3rd chapter of the thesis (thesisChapters/3-chapter.tex)."
  },
  {
    "objectID": "1_SPSS.html",
    "href": "1_SPSS.html",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "",
    "text": "Bu haftada yer alan ders içeriği ana konuları aşağıdaki gibidir."
  },
  {
    "objectID": "1_SPSS.html#temel-kavramlar",
    "href": "1_SPSS.html#temel-kavramlar",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "TEMEL KAVRAMLAR",
    "text": "TEMEL KAVRAMLAR\n\nAnakütle - Popülasyon - Kitle - Evren\nAnakütle: Hakkında bilgi edinilmek istenen ve biçimsel homojenliğe sahip (belirli bir tanıma uyan) birimlerin oluşturduğu topluluğa denir.\n\nAnakütleyi, bir çalışmayla ilgili verilerin ve ya ölçme sonuçlarının tümünün oluşturduğu küme olarak tanımlayabiliriz.\n\n2019 yılında LGS’ye giren 1.2 milyon öğrencinin puanları LGS Puanları için evrendir.\nAralık 2019 izleme sınavını tüm ildeki 5. sınıf öğrencilere uygulanması, o il için izleme sınav puanının evrenidir.\n\n\nÖrneklem: Bir anakütleden, ana kütlenin özelliklerini belirlemek için seçilen birimlerden oluşan bir anakütle parçasına örneklem denir. Bir diğer ifadeyle vreni temsil edecek şekilde uygun yöntemlerle seçilen ve daha az sayıdaki elemandan oluşturulan kümeye örneklem adı verilir.\n\nMaliyetten, zamandan veya işgücünden tasarruf için örneklem kullanılır.\n\n2019 yılında LGS’ye giren 1.2 milyon öğrenciden uygun yöntemle seçilen 2000 öğrencinin LGS puanı LGS puanları için örneklemdir\nAralık 2019 izleme sınavını tüm ildeki 5. sınıf öğrencilerinde uygun yöntemle seçilen 3.000 öğrenciye uygulanması, o il için izleme sınav puanının örneklemidir..\n\n\n\n\n\nimage.png\n\n\nBirim: Anakütle ya da örneklemi oluşturan ve gözlem konusu olarak alınan her bir kollektif olaya birim denir.\n\nÖrneklemi oluşturmak için seçilen her bir birim ayrıca gözlem olarak da ifade edilebilir.\n\nÖrnek\nSeçim döneminde, * 18 yaşından büyük oy verme hakkına sahip her birey anakütleyi. * Araştırma şirketlerinin seçim anketini uyguladıkları bireyler bir örneklemi * Oy verme hakkına sahip her bir kişi bir bireyi gösterir.\nVeri\n\nBelirli amaçlarla toplanan benzer sayılara veri denir.\nGözlemler sonucunda elde edilen sayısal bilgilere veri denir.\nBir sonuca varabilmek için gerekli olan ilk bilgi de veridir.\nAnlam çıkartmak ya da sonuca varmak için kullanılan nicelik, olay ve kayıtlara denir.\n\nÖrnek (Öğrenci - Veri)\nBir sınıftaki öğrencilerin, yaşı, cinsiyeti, göz rengi, boyu, kilosu bir veriyi oluşturur.\nDeğişken\n\nBirimin sahip olduğu ve diğer birimlerden ayırt edilmesini sağlayan özelliklere değişken denir.\nBir ya da birden fazla değişkenler verileri oluşturur.\n\nÖrnek (Öğrenci - Veri)\nYukarıdaki veriye ait her bir özelliğe değişken denir. Yani yaş, cinsiyet, göz rengi, boy ve kilonun her biri bir değişkendir.\nŞık\n\nDeğişkenlerin alabileceği değerlere şık denir.\n\nÖrnek (Öğrenci - Veri)\nYukarıdaki örnekte, Cinsiyet değişkeninin alabileceği “Erkek” ve “Kadın” değerleri değişkenin şıklarıdır.\nDeğişken Tanımlamaları ve Türleri\n\nŞıkları sayılarla ifade edilebilen değişkenlere nicel (kantitatif) değişken, kelimelerle ifade edilen değişkenlere nitel (kalitatif - kategorik) değişken denir.\nÖrnekler - Nicel (kantitatif) değişken\n\nAkademik Başarı puanı\nAğırlık ölçüsü\nTutum Puanı\nBir ailenin sahip olduğu çocuk sayısı\nKitap sayısı\nGelir miktarı miktarı miktarı Örnekler - Nitel (kalitatif) değişken\nCinsiyet\nYerleşim birimi\nÖğrenim görülen bölüm\n\nKantitatif değişkenlerin şıkları eğer tamsayılarla ifade edilebiliyorsa kesikli değişken, ondalık sayılarla ifade edilebiliyorsa sürekli değişken adını alır.r.\nBağımsız değişken: Başka bir değişkene bağlı olmadan değerler alabilen değişkendir.\nBağımlı değişken : Başka bir değişkene bağlı olarak değerler olabilen değişkendir. Bağımlı ve bağımsız değişken sınıflandırması, gerçekte farklı değişken türlerinin ayrımından ziyade, bir araştırmada değişkenlerin nasıl kullanıldığıyla ilişkilidir. Kısaca, araştırmada değişkenliği araştırılan ve sonuç olan bağımlı değişken; sonucu etkileyen veya etkileyecek olan bağımsı değişkendir.\n\n\n\n\nimage.png\n\n\nDeğişken Türleri Örnek Çalışma Soruları  Aşağıdaki değişkenlerin türlerini belirleyiniz. (Kategori - kesikli- sürekli)\n\nYeni Yüzyıl Üniversitesi’nde okuyan Öğrencilerin evlerinden, fakültelerine kadar olan km cinsinden mesafeler\nBir fakültedeki öğretim üyelerinin cinsiyeti\n2019 yılında İstanbul’a düşen yağış miktarı\nSon 50 yılda meydana 7 ya da daha fazla büyüklükte deprem sayısı\nVerilen narkozun hastayı dakika cinsinden etkileme süresi\nBir madeni paranın tura gelene kadar yapılacak atış sayısı\n\nDeğişken Türleri Örnek Çalışma Soruları - Cevaplar \n\nSürekli\nKategorik\nSürekli\nKesikli\nKategorik\nSürekli\nKesikli\n\n\n\nDeğişken Ölçüm Düzeyleri\nDört tane değişken ölçüm düzeyi bulunmaktadır.\n\nSınıflayıcı (Nominal) Ölçek\nSıralayıcı (Ordinal) Ölçek\nEşit aralıklı (Interval) Ölçek\nOran (Ratio) Ölçek\n\nSınıflayıcı (Nominal) Ölçek * Gözlemler sayısal bir değer almaz. * Büyüklük - küçüklük derecesi göstermez. Örnekler * Kullanılan cep telefonu markası, * Cinsiyet, * En sevilen dizi, * Kullanılan şampuan\nSıralayıcı (Ordinal) Ölçek * Gözlemler büyüklük - küçüklük derecesine göre sıralanır. * Ancak büyüklük ve küçüklüğün derecesi hakkında bilgi yoktur. Örnekler * Askeri unvan, * Akademik unvan, * Bir derste alınan bütün notların büyüklüğüne göre sıra numarası verilmesi, * Atletizm, yüzme yarış dereceleri\nEşit aralıklı (Interval) Ölçek * Değerler arasında büyüklük küçüklük ilişkisi vardır. * Her birimin arasındaki fark birbirine eşittir. * Gerçek bir sıfır noktası (yokluğu belirten değer) yoktur. Örnekler * Celcius, fahrenheit gibi sıcaklık ölçekleri, * Hicri - miladi takvim.\nOran (Ratio) Ölçek * Değerler arasında büyüklük küçüklük ilişkisi vardır. * Gerçek bir sıfır noktası (yokluğu belirten değer) vardır. Örnekler * Boy * Kilo * Yaş * Havadaki oksijen miktarı\nDeğişken Ölçüm Düzeyleri Örnek Çalışma Soruları  Aşağıdaki değişkenlerin ölçüm düzeylerini belirleyiniz.\n\nYeni Yüzyıl Üniversitesi’nde okuyan Öğrencilerin evlerinden, fakültelerine kadar olan km cinsinden mesafeler\nBir fakültedeki öğretim üyelerinin cinsiyeti\n2019 yılında İstanbul’a düşen yağış miktarı\nSon 50 yılda meydana 7 ya da daha fazla büyüklükte deprem sayısı\nVerilen narkozun hastayı dakika cinsinden etkileme süresi\nBir madeni paranın tura gelene kadar yapılacak atış sayısı\n\nDeğişken Ölçüm Düzeyleri - Cevaplar \n\nOran\nSınıflayıcı\nOran\nOran\nSınıflayıcı\nOran\nOran\n\nÇalışma Sorusu (Homework) \n\n\n\nimage.png"
  },
  {
    "objectID": "1_SPSS.html#verilerin-spss-programı-için-işlenmesi",
    "href": "1_SPSS.html#verilerin-spss-programı-için-işlenmesi",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "Verilerin SPSS Programı İçin İşlenmesi",
    "text": "Verilerin SPSS Programı İçin İşlenmesi\nVerilerin işlenmesiyle, veriler 4 şekilde kullanılabilir.\nHam veri: Veriler ölçüldüğü şekliyle üzerinde herhangi bir değişiklik yapılmadan tutulması.  Basit veri: Verilerin küçükten büyüğe sıralanmasıyla elde edilen seridir. Frekans serisi: İncelenen değişkenin her bir şıkkının kümeler halinde ayrılarak, her şıkkınn kaç kez tekrarlandığının belirlenmesidir. Şıkkın tekrar sayısına frekans, bunun tablolaştırılmış haline frekans tablosu denir. Sınıflandırılmış (Gruplandırılmış) Seri: Bir değişkenin çok fazla şıkkı varsa, şıkların birleştirilmesiyle oluşturulan tablodur.\nÖrnek  Bir önceki hafta bölüm sonu örneğindeki 7 gözlemden oluşan “Yaş” değişkenini ele alalım. \nDeğişkenin basit veri haline getirilmesi  \nVerisetini frekans haline getirelim  \nVeri setini 18-20 yaş arası birinci grup, 21-23 yaş arası da ikinci grup olacak şekilde ayıralım .\nBirikimli frekans nedir? Frekans serilerinde ve sınıflandırılmış serilerde, * belirli bir değere eşit ve ya daha küçük değer alan birimlerin sayısını göstermek için artan birikimli frekanslar; * belirli bir değere eşit ya da daha büyük değer alan birimlerin sayısını göstermek için azalan birikimli frekanslar kullanılır.\nÖrnek  Frekans serisi şeklinde verilmiş yaş verisi için artan ve azalan birikimli frekansları bulalım.  \nOransal Frekanslar - Birikimli Oransal Frekanslar * Değişkenin aldığı değerlerin ve ya sınıfların frekanslarının, toplam frekansa oranlamasıylaa elde edilen frekanslara oransal frekanslar denir. * Yukarıdaki mantığa benzer şekilde oransal frekanslar da artan ya da azalan oransal frekanslar haline getirilebilir.\nFrekans serisi halinde verilmiş yaş verisi için artan ve azalan birikimli oransal frekansları bulalım.  \n\nVerilerin Sunulması (Grafikler)\nGrafik nedir? * Grafikler veriyi keşfetmek için kullanılan ve veriden elde edilen sonuçları görsel olarak sunmak için kullanılan yöntemler bütünüdür. * Grafikler, çok sayıda ve karmaşık gibi gözüken sayısal değerleri basit bir şekilde görsel olarak algılanmasını sağlayan yöntemlerdir. * Grafik seçimi, çalışmanın amacına, verinin ve değişkenin türüne uygun olarak seçilmelidir.\nGrafik ne işe yarar? * Veri yapısının belirlenmesinde, * Aşırı ya da aykırı değer tespitinde, * Bir değişkenin farklı ölçüm seviyelerine (şıklara) göre nasıl değiştiğini görsel olarak belirlemek  için kullanılabilir.\nÇizgi Grafiği * Çizgi grafiği, bir değişkenin zaman içindeki değişimini belirlemek için uygun bir grafik türüdür. * Çizgi grafiğinde verinin zaman boyutu genellikle x (yatay) ekseninde yer alırken, değişimi izlenen değişken y (dikey) ekseninde yer alır.\nÖrnek\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nSütun Grafiği * Sütun grafiği, kategorik bir değişkenin dağılımını ya da frekans\u0019n\u0019 yatay ya da dikey sütunlar aracılğıyla gösteren grafiklerdir. * Özellikle birden fazla birimin belli bir özelliğini incelemekte ya da tek bir birimin yıllara göre değişimini gözlemlemekte yararlıdır.\nÇizgi grafiğinde yer alan verinin sütun grafiği ile gösterimi \n\n\n\nimage.png\n\n\nHistogram * Histogram bir veri kümesinin istatistiksel dağılımının görselleştirilmesi için kullanılır. * Genellikle sürekli değişkenlerin görselleştirilmesinde tercih edilir. * Histogram veriyi sınıflı hale getirerek görselleştiren bir yöntemdir. * Genellikle seri eşit aralıklı olacak şekilde sınıfandırılır. * Verinin nasıl dağıldığını gösterir.\nÖrnek\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nÖrnek\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nPasta Grafiği * Pasta grafiği, bir bütünün yüzdelerle ifade edilmesi gerektiğinde kullanılan grafiklerdir.\nÖrnek\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nSaçılım Grafiği * Saçılım grafiği, iki sürekli değişkenin birbiriyle nasıl bi ilişki içinde olduğunun görülmesini sağlar.\nÖrnek\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\nSPSS Paket Programı Nedir ?\nSPSS, “Statistical Package for the Social Sciences” kelimelerinin baş harflerinin birleştirilmesi ile oluşturulan ve Türkçe karşılığı “Sosyal Bilimler için İstatistik Paketi” olan günümüzde başta sağlık bilimleri olmak üzere pek çok alanda kullanılan bir istatistiksel analiz programıdır.  SPSS temel olarak araştırma şirketleri, eğitim araştırmaları ve pazarlama gibi alanlarda kullanılır.\nSPSS’nin Özellikleri\nAşağıda SPSS’in bazı önemli özelliklerini bulabilirsiniz: * SPSS’deki tüm veriler SAV formatında saklanır. Bu, verilerin işlenmesi, analiz edilmesi ve çıkarılması sürecini kolaylaştırır. * SPSS, görev açısından kritik verilerinizden açık bir şekilde veri almanıza yardımcı olur. Bu, SPSS’nin bazı özelliklerinin yanı sıra trend analizi, varsayımlar ve tahmine dayalı modeller aracılığıyla yapılır. * SPSS, kullanıcılara doğru sonuçları analiz etmeleri için derin istatistiksel yetenekler sunar. * Veri yönetim sistemini ve düzenleme araçlarını kolayca edinmeye yardımcı olur. * SPSS, işlevleri daha görsel olarak tasarlamanıza, oluşturmanıza, raporlamanıza ve sunmanıza yardımcı olan bir araçtır. * SPSS’nin öğrenilmesi, kullanılması ve uygulanması kolaydır.\nSPSS yazılımı istatistiksel veri analizine ek olarak veri yönetimi işlevleri de sağlar. Kullanıcının seçim yapmasına, veri oluşturmasına, bir dosya yürütmesine vb. izin verir. SPSS’nin bir başka özelliği de veri dokümantasyonudur. Temel olarak bu işlev, veri dosyasıyla birlikte bir meta veri sözlüğünü depolar.\nSPSS Programı Ne İçin Kullanılır?\nSPSS programı, nicel analiz yapmak ve bir işaretle ve tıkla istatistik paketini tamamlamak için kullanılır.\nSPSS’de çeşitli istatistiksel yöntemler kullanılabilir:\n\nSPSS metodolojileri de dahil olmak üzere tanımlayıcı istatistikler, çok yararlı olan frekansların, çapraz tabloların ve tanımlayıcı ilişkilerin istatistikleridir.\nVaryans analizi (ANOVA), ortalamalar, korelasyon, parametrik olmayan testler vb. gibi teknikleri içeren iki boyutlu istatistikler sağlar.\nKüme analizi, faktör analizi vb. gibi metodolojiler de dahil olmak üzere grupları tanımlamak için çeşitli verileri tahmin etmek.\nDoğrusal regresyon gibi sayısal bir sonucu tahmin etmek.\n\nÖzetle diyebiliriz ki, adından da anlaşılacağı gibi SPSS istatistik programı sadece istatistiksel işlemleri gerçekleştirmek için kullanılır.\nSPSS’nin Ana İşlevleri\n\nİstatistik programı SPSS istatistik programı birçok temel istatistik işlevi sağlar, bunlardan bazıları frekanslar, çapraz tablolama, iki boyutlu istatistikler, sayma, toplama, tekrar etme, veri istifleme, veri yeniden yapılandırma, ağırlıklandırma vb.’dir.\nModelleyici yazılımı SPSS modelleyici yazılımı ile araştırmacılar, gelişmiş istatistiksel prosedürleri kullanarak tahmine dayalı modeller oluşturabilir ve doğrulayabilir.\nAnketler için metin analizi yazılımı Bu, gerçek plana ilişkin içgörü sağlayan güvenilir geri bildirim analizi sağlar. SPSS Text Analytics for Surveys, anket yöneticilerinin açık uçlu anket sorularına verilen yanıtlardan değerli bilgiler elde etmesine yardımcı olur.\nGörselleştirme tasarımcısı Araştırmacılar, bu görsel tasarımcı verilerinin, yoğunluk çizelgeleri ve radyal kutu çizelgeleri gibi çok çeşitli görsel efektler oluşturmayı kolaylaştırdığını bulur.\n\nSPSS yazılımı genel olarak aşağıdaki özellikleri taşımaktadır.\n\nWorksheet aracılığı ile veri girişi\nBaşka paket programlardan veri aktarılması\nVeri analizi modülleri aracılığı ile veri işleme\n\nFrekans ve çapraz tabloların hazırlanması\nGrafiklerin çizilmesi\nBelirtici istatistiklerin hesaplanması\nKontenjans tablolarında kikare analizi\nParametrik ve parametrik olmayan testler\nRegresyon ve korelasyon analizi (basit doğrusal, çoklu)\nÇok değişkenli analiz\nZaman serileri analizi\nUyum analizi\n\n\nSPSS’de ise yukarıdaki özelliklere ek olarak; Yaşam analizi, Güvenirlik ve soru analizi, Proses analizi, Homojenite Analizi, CHAID analizi yer almaktadır.\n\n\nSPSS Kurulumu\n\n\nSPSS Statistics paket programı IBM tarafından lisanslanan bir programdır.\n\n\nÇalışmalarımızı yürütebilmek adına SPSS programını deneme (trial) sürümü üzerinden gerçekleştireceğiz. Bu deneme sürümünü 1 ay süreyle kurum mailleriniz üzerinizden açacağınız hesabınızla tam fonksiyonlu olarak kullanabilirsiniz.\n\n\nSPSS geriye dönük olarak uyumludur, eski sürüm SPSS dosyaları ile sorunsuz şekilde çalışmaktadır.\n\n\nIBM SPSS resmi websitesi üzerinden deneme sürümünü işletim sisteminize göre indirilebilirsiniz.\n\n www.ibm.com/spss\n\n\n\n\nimage.png\n\n\nIBM SPSS’in 30 günlük ücretsiz bir deneme sürümü seçeneği mevcuttur. Bu deneme sürümünü kullanmaya başlamak için bir IBM hesabı oluşturmanız gerekmektedir.\n\n\n\nimage.png\n\n\n\n\nSPSS Kurulumu\n1. ADIM İndirdiğiniz kurulum dosyasına tıklayarak kuruluma başlayabilirsiniz.\n2. ADIM “Next” butonuna tıklayarak ilerleyiniz.\n\n\n\nimage.png\n\n\n3. ADIM “I accept the terms in the license agreement” seçeneğini işaretleyiniz ve “Next” butonuna tıklayarak ilerleyiniz\n. \n4. ADIM “Next” butonuna tıklayarak ilerleyiniz. )\n5. ADIM “Install” butonuna tıklayarak ilerleyiniz.\n\n\n\nimage.png\n\n\n6. ADIM “Start IBM SPSS Statistics now” seçeneğini işaretleyiniz ve “Finish” butonuna tıklayarak ilerleyiniz.\n\n\n\nimage.png\n\n\nDaha sonra deneme sürümü üzerinden programı kullanabilirsiniz."
  },
  {
    "objectID": "1_SPSS.html#spsse-giriş-ve-tanımlamalar",
    "href": "1_SPSS.html#spsse-giriş-ve-tanımlamalar",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "SPSS’e Giriş ve Tanımlamalar",
    "text": "SPSS’e Giriş ve Tanımlamalar\nKullanacağımız veriseti ise mtcars dosyası olacaktır. Bu verisetinin içeriğini oluşturan değişkenler aşağıdaki gibidir.\nDataset Adı * mtcars\nDataset Tanımı * Veriler 1974 Motor Trend ABD dergisinden alınmıştır ve 32 otomobil modeli (1973-74 modelleri) için yakıt tüketimini ve özelliklerini içermektedir.\nDeğişkenler * mpg: Miles/(US) gallon * cyl: Number of cylinder * disp: Displacement * hp: Gross horsepo * drat: Rear axle ratio * wt: Weight (1000 lbs) * qse: 1/4 mie time * vs: Engine (0 = V-shaped, 1 = straight * am: Transmission (0 = automatic, 1=manual) * gear: Number of forward gears * carb: Number of carburetors\nVeri Kaynağı: Henderson and Velleman (1981), Building multiple regression models interactively. Biometrics, 37, 39.\nSPSS programını kullanmaya başlamadan önce, temel işlevleri gerçekleştirmek için kullanmanız gereken ana pencereleri ve syntax editor (sözdizimi düzenleyicisi) arayüzünü tanıyalım.\n\nSPSS Ana ekran\n\nSPSS, MS Exceldeki gibi grid yapısına sahiptir.* Sütunlar değişkenleri, satırlar değişkenlere ait kayıtları (değerleri) göstermektedir.\n\n r\nHer SPSS dosyasında iki alt seçenek vardır. * Data view: verilerin girildiği, SPSS dosyası açıldığındaotomatik olarak kısım \n\n\n\nimage.png\n\n\n\nVariable view: Değişken özelliklerinin seçildiği kısım\n\n\n\nimage.png\n\n\nİkinci pencere ise Variable View olarak adlandırılır; değişkenlerinizin çeşitli bileşenlerini burada görüntüleyebilirsiniz; ancak en önemli bileşenler Ad, Etiket, Değerler ve Ölçektir (Name, Label, Values and Measure). * SPSS değişken adları için aşağıdaki nitelikler geçerlidir: * En fazla 64 karakter uzunluğunda olabilirler.e\n\nSPSS değişken adlarında büyük/küçük harfe duyarlı değildir\nİlk karakter bir harf olmak zorundadır.\nKarakterler arasında boşluklara izin verilmez , alt çizgi kullanılır..\n\n\n\n\nSyntax Editor (Sözdizimi Düzenleyicisi)\nSPSS Dialog Box üzerinden yapamayacağımız bazı analizler vardır, bu nedenle SPSS Syntax Editor alanını öğrenmek faydalı olabilir. Başlamak için temel Syntax Editor terminolojisinin üzerinden geçelim:\n\n\n\nimage.png\n\n\n\nCommand: bir eylemi başlatmak için SPSS’e verdiğiniz talimatları belirtir (ör. REGRESSION).\nSubcommand: komuta verdiğiniz ek özellikler, genellikle bir anahtar kelimeyle başlar ve eğik çizgiyle başlar, kendine ait spesifikasyonları gösterir (örn. /METHOD=ENTER)\nKeyword: komutu, alt komutları ve diğer özellikleri (örn., TO, ALL) tanımlar.\n\n\n\n\nimage.png\n\n\nYardım (Help) menüsüne giderek Command Syntax Reference aracılığıyla SPSS’deki tüm Syntax örneklerini görebiliriz.\n\n\nViewer (Output) Window (Çıktı Penceresi)\nSyntax kodlarını yapıştırdıktan veya analiz sonucunda Seçimi Çalıştır(Run) düğmesine tıkladıktan veya menü sistemi aracılığıyla analizinizi doğru bir şekilde belirleyerek Tamam’a tıkladıktan sonra, SPSS Görüntüleyici adı verilen veya Çıktı (Output) penceresi olarak da bilinen yeni bir açılır pencere görülecektir. Analizinizin tüm sonuçlarının saklanacağı yer burasıdır.\n\n\n\nimage.png\n\n\n\n\nVariable View Tanımlamaları\n\nName: Değişken ismi\nType: Değişken tipi (sayısal, kesir kısmı virgülle ayrılmış, kesir kısmı noktayla ayrılmış, bilimsel (üslü sayı şeklinde) Tarih, Dolar cinsinden vs.)\n\nBuradaki diğer veri tipleri ise; comma, dot, scientific notation, date, dollar, custom currency, string, restricted numeric’tir. Kısaca comma binlik gösterimleri virgülle ayırmaktadır. dot ise yüzelik ayırmayı virgülle, bindelik ayırmayı ise nokta kullanarak yapmaktadır. scientific notayion üslü ifade kullanımlarında işe yaramaktadır. date tarih kullanıldığında seçilir. dollar para birimi girişi yapılacağı zaman, custom currency ise özel para birimi girişi yapılacağı zaman seçilmektedir. string ise analizde sayısal bir veri olarak kullanılmayacak şekilde olan örneğin harf içeren veriler için seçilmektedir. restricted numeric ise bilimsel veriler için kullanılmaktadır. Gelen değerin önüne sıfır koymaktadır.\n\nWidth: Girilecek değerin hane sayısını gösterir.\nDecimals: Kesir kısmının hane sayısını gösterir.\nLabel: Değişken için açıklayıcı bilgi yazılır.\nValue: Özellikle kategorik değişken değerlerinin anlamlarını yazmak için kullanılır (Transmission: 0 = automatic, 1 = manua))\nMissing: İşleme alınmasını istemediğimiz eksik değerler\nAllign: Girmiş olduğumuz değerlerin data views kısmında sağa yaslı, ortalı ya da sola yaslı olarak görülme seçenekleri\nMeasure: Ölçek özelliği.\n\nScale: yaş, ağırlık gibi eşit oranlı verilerdir.\nOrdinal: Ölçekler sonucunda elde edilen verilerdir. Tutum, tatmin vb.\nNominal: Kategorik ya da sınıflama olarak adlandırılan verilerdir. Eğitim seviyesi, gelir düzeyi vb.\n\nRole: Bu kısım input olarak bırakılır çoğunlukla. inputlar bağımsız değişkenler iken, “target” lar bağımlı değişkenlerdir. “both” ise hem bağımlı hem bağımsız değişkenleri göstermektedir. “none”ın bağımlı ya da bağımsız değişken rolü bulunmamaktadır.\n\n\n\nimage.png\n\n\n\n\n\nExcel – SPSS Arası Veri Aktarma\nExcel’den SPSS’e veri yükleme işlemi adımları aşağıdaki gibidir. Diğer veri tipleri içinde aynı adımlar izlenir. 1. Excel Dosyasını Hazırlayın: Verilerinizi Excel’de düzenleyin ve gerekli olan tüm değişkenleri ve değerleri içeren bir çalışma sayfası oluşturun. 1. Verileri Kaydedin: Verilerinizi Excel’de kaydedin. SPSS, .xls, .xlsx veya .sav gibi birçok dosya türünü destekler. 1. SPSS’i Açın: SPSS yazılımını açın ve yeni bir veri seti oluşturmak için “File” (Dosya) menüsünden “New” (Yeni) seçeneğini seçin. 1. Veriyi Yükleme: “File” (Dosya) menüsünden “Import Data” seçeneğini seçin ve “Excel” butonuna basın. Bilgisayarınızdan dosyanızı bulup açın.\n\n\n\nimage.png\n\n\n\nVeri Aktarma Penceresini Doldurun: Excel dosyasını açtıktan sonra, “Import Wizard” (İçe Aktarma Sihirbazı) adı verilen bir pencere açılacaktır. Bu pencerede, Excel dosyasından SPSS’e aktarmak istediğiniz sayfayı (sheet) ve veri türünü seçebilirsiniz.\nDeğişken Türlerini Belirtin: İlgili sayfayı seçtikten sonra, her bir sütunun hangi türde bir değişkeni temsil ettiğini belirtmelisiniz. SPSS, her bir değişkenin tipini (numeric, string, date vb.) otomatik olarak tanımlamaya çalışır, ancak gerektiğinde değişken türünü düzeltebilirsiniz.\nDeğişken İsimlerini ve Etiketlerini Belirtin: Her bir değişkenin adını ve isteğe bağlı olarak etiketlerini belirtin. Bu adımlar, Değişken Görünümü’nde tanımladığınız değişken özelliklerini ayarlamak için önemlidir.\nVeriyi SPSS’e Aktarın: Tüm ayarları yaptıktan sonra, “Finish” (Tamamla) veya “OK” düğmesine tıklayarak veriyi SPSS’e aktarın.\n\nDosyaları kaydetme işlemi için ise File menüsü üzerinden Save seçeneği seçilir.\n\n\nDeğişken Kategorilerini Tanımlama\nVarible View sayfasında kategorik olan değişkenlerimizi değer vererek atayabiliriz. Örnek olarak SES (Sosyo Ekonomik Statü) değişkeni için aşağıdaki kategorize etme işlemlerini yapalım.\nLow (Düşük) = 1 nolu kategori olsun.\nMiddle (Orta) = 2 nolu kategori olsun.\nHigh (Yüksek) = 3 nolu kategori olsun.\n\n\n\nimage.png\n\n\nVarible View sayfasında ilgili değişken için Values sütununu seçelim.\n\n\n\nimage.png\n\n\nBurada Value kısmı sayısal değeri, Label kısmı ise verinin etiketini belirtir. Değişken sayısını \\(+\\) seçeneğine tıklayarak artırabilirsniz.\nÖrneğimizde verdiğimiz değerleri girelim ve OK’e basarak işlemi tamamlayalım..\n\n\n\nimage.png\n\n\nArtık Data View kısmında tanımlağımız değerleri görebiliriz.\n\n\n\nimage.png"
  },
  {
    "objectID": "1_SPSS.html#spss-menüleri",
    "href": "1_SPSS.html#spss-menüleri",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "SPSS MENÜLERİ",
    "text": "SPSS MENÜLERİ\nSPSS; File, Edit, View, Data, Transform, Analyze, Graphs, Utilities, Window, Help isimli on menüden oluşmaktadır.Temel menüler aşağıda görülmektedir.\n\n\n\nimage.png\n\n\n\nFILE MENÜSÜ\nDosya işlemlerinin yürütüldüğü bir menüdür. Bu menü aracılığıyla;\n\nYeni dosyalar açmak\nKayıtlı dosyaları kullanıma açmak\nYeni oluşturulan yada değişiklik yapılan dosya içeriklerini aynı isim yada farklı bir isimle diskete kaydetmek\nDosyalar hakkında bilgiler almak, dosya içeriklerini yazıcıdan dökmek vb işlemleri yapmak mümkündür.\n\nFile menüsü alt seçenekleri aşağıda görülmektedir ve işlevleri kısaca açıklanmıştır.\n\n\n\nimage.png\n\n\nNew: Yeni veri (data), SPSS Syntax (komut dosyası) ve SPSS Output (çıktı) dosyalarından birini açmak için kullanılır.\nData seçeneği tıklandığında veri giriş ekranı görüntüye gelir. Bu ekrana veri girişi yapılır.\n\n\n\nimage.png\n\n\nOpen: Var olan kayıtlı dosyaları kullanıma açmak için yararlanılır. Open seçeneği tıklandığında Data, SPSS Sytax, SPSS output dosya türlerinden birisi açılabilir. * Data seçeneği tıklandığında .sav uzantılı mevcut dosyalar görüntülenir ve bu listeden açılması istenen dosya seçilir.  Open Syntax seçeneği SPSS komut satırını içeren ve ASCII formatta yazılmış dosya açar. * Open output seçeneği SPSS çıktılarının ASCII formattaki bir dosyasını açar.\nImport Database: Bu seçenek veritabanı altyapılarını kullanır.\n\n\n\nimage.png\n\n\nSave : Aktif penceredeki dökümanı veya grafik penceresini bir dosyaya kaydeder.\nSave as: Aktif pencerede yer alan dökümanı yeni dosya ismi ile kaydeder.\nDisplay Data File Information: Disk üzerinde kayıtlı bulunan ve SPSS formatında kayıt edilmiş veri dosyaları hakkında bilgi verir.\nPrint: Aktif pencerede yer alan bilgileri yazıcıdan döker. Printer Preview: SPSS çıktılarını ve diğer pencere içeriklerinin yazıcıdan alınmasında yazıcı ayarları özelliklerini kullanarak yazıcı ayarlarının yapılmasını sağlar.\nStop Processor: Uygulanan bir yöntemin işlemlerini durdurmak veya kesmek için yararlanılır.\nExit: SPSS uygulamasından çıkılmasını ve SPSS’in kapatılmasını sağlar.\n\n\nHIZLI MENÜLER\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nVariables seçeneği verisetinde yer alan değişkenlerin detaylarını gösterir.\n\n\n\nimage.png\n\n\n10- Find and Replace (Bul ve Değiştir)\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n13- Split File (Gruplandır)\n\n\n\nimage.png\n\n\n14- Weight Cases (Ağırlık Değiştir)\n\n\n\nimage.png\n\n\n15- Select Cases (Örneklem Seçimi)\n\n\n\nimage.png\n\n\n\n\n\nimage.png"
  },
  {
    "objectID": "1_SPSS.html#edit-menüsü",
    "href": "1_SPSS.html#edit-menüsü",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "EDIT MENÜSÜ",
    "text": "EDIT MENÜSÜ\n\n\n\nimage.png\n\n\n\nUndo: Undo komutu, son yapılan işlemin iptal edilmesini sağlar.\nRedo: Undo komutu ile geri alınan bir işlevin tekrar gerçekleştirilmesini sağlar.\nCut: Aktif pencerede seçilen bölümün kesilip panoya alınmasını sağlar.\nCopy: Aktif pencerede seçilen bölümün kopyalanıp panoya alınmasını sağlar.\nPaste: Daha önce kesilip ya da kopyalanıp panoya alınmış olan bölümün, seçilen alana yapıştırılmasını sağlar.\nPaste Variable: Değişken sayfasında Copy komutu ile kopyalanan bir değişkeni, seçilecek olan bir veya daha fazla değişken satırına yapıştırmak için kullanılır.\nClear: Seçilen hücre satır veya sütunun silinmesini/boşaltılmasını sağlar.\nFind: Aktif pencerede, belirli bir metnin ya da değerin bulunmasını sağlar.\nOptions: SPSS’in varsayılan özelliklerinin kullanıcı tarafından değiştirilmesinin sağlandığı seçenektir."
  },
  {
    "objectID": "1_SPSS.html#view-menüsü",
    "href": "1_SPSS.html#view-menüsü",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "VIEW MENÜSÜ",
    "text": "VIEW MENÜSÜ\n\n\n\nimage.png\n\n\nSPSS penceresinin bilgisayar ekranındaki görüntüsü ile ilgili değişiklikler yapılmasını sağlayan seçeneklerin bulunduğu menüdür.\nStatus Bar: Durum çubuğunun pencere üzerinde bulunup bulunmayacağı belirler.\nToolbars: Araç çubuğunun pencere üzerinde bulunup bulunmayacağı belirler.\nValue Labels: Veri sayfasında (Data View) kodlanmış olraka görülen verilerin etiketlerinin görüntülenmesini sağlanır.\nGrid Lines: Veri sayfasındaki çizgilerin (Grid Lines) görüntülenip görüntülenmeyeceği bu menüden belirlenir.\nFonts: Verilerin girildiği Data View, değişkenlerin tanımlandığı Variable View ve çıktı ekranı olan Output sayfalarındaki karekterlerin yazı tipi, stili ve boyutunu belirlemek için kullanılır."
  },
  {
    "objectID": "1_SPSS.html#data-menüsü",
    "href": "1_SPSS.html#data-menüsü",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "DATA MENÜSÜ",
    "text": "DATA MENÜSÜ\n\n\n\nimage.png\n\n\nDefine Variable Properties(Değişken Özelliklerini Tanımlama)\nDeğişken özelliklerini tanımlamak için kullanılır.\nDefine Dates\nZaman değişkeni içeren dosyalarda bu değişkeni tanımlamak için kullanılır.\nDefine Multiple Response Sets\nÇoklu seçime izin verilen test bölümlerinde bu bölümleri bir set olarak tanımlamak için kullanılır. Seçenekler; * Multipledichotomyset: Her soruya verilen her geçerli cevap için yeni bir değişken oluşturulur. * Multiplecategoryset: Seçilen tüm geçerli cevapları bir grup olarak alarak yeni bir değişken oluşturur.\nIdentify Duplicate Cases\nTekrarlanan satırları (örnekleri) bulmak için kullanılır.\nSort Cases\nVerilerin sıralamasını değiştirir. * Descending: Büyükten küçüğe * Ascending: Küçükten büyüğe\nTranspose\nBir SPSS veri dosyasında her satır bir birime ve her sütun bir değişkene karşılık gelmektedir. Bu düzenin ters olduğu dosyalarda, veriyi doğru formata getirmek için bu alt menü kullanılabilir. Verilerin yer aldığı sütunların satırlara, satırların ise sütunlara dönüşmesini sağlar.\nSort Cases\nSort Cases alt menüsü veri dosyasında kayıtlı olan birimlerin seçilen bir veya daha fazla değişkene göre küçükten büyüğe ya da büyükten küçüğe doğru sıralanmasını sağlar.\nSplit File\nSplit File alt menüsü bir ya da daha fazla grup değişkenine göre, veri dosyasını gruplara ayırır. Böylece analizlerin her grup için ayrı ayrı yapılmasını sağlar.\nSelect Cases\nFarklı değerler alan değişken(ler)in istenilen değerlerinin analize katılması için kullanılır. (Cinsiyeti bayan olanlar üzerinde analiz yapmak istenmesi gibi)\nWeight Cases\nFrekanslı serilerde veri sayfasına girilmiş değerlerin ilgili değişkene ait ağırlıkları temsil ettiğini tanımlamak için kullanılır.(bir sınıftaki notları ve bu notları alan öğrenci sayısıları veri sayfasıa girilirse öğrenci sayısı Weigt Cases komutu ile mutlaka tanıtılmalıdır.)\nInsert Cases\nData View sayfasında istenilen yere satır eklemek için kullanılır. Etkin olan hücrenin bulunduğu satırdan bir öncesine yeni bir satır ekler.\nInsert Variable\nData View veya Variable View sayfasında istenilen yere yeni bir değişken eklemek için kullanılır.\nGo To Case\nData View sayfasında istenilen satırdaki verilerin olduğu satıra gitmek için kullanılır.\nMerge File\nİki ayrı dosyada ortak değişken ismi ile belirtilen verileri çalışılan dosyada birleştirmek ya da iki ayrı dosyada farklı değişkenlerle ifade edilen verileri tek bir dosyada toplamak için kullanılır. Merge Files alt menüsünde Add Cases ve Add Variables olmak üzere iki seçeneği vardır.\nIdentify Duplicated Cases\nHerhangi bir değişkene ilişkin veriler içerisinden tekrarlanan verileri tespit etmek ve bu verileri yeni bir değişkende bazı değerler ile ifade etmek için kullanılır."
  },
  {
    "objectID": "1_SPSS.html#transform-menüsü",
    "href": "1_SPSS.html#transform-menüsü",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "TRANSFORM MENÜSÜ",
    "text": "TRANSFORM MENÜSÜ\n\n\n\nimage.png\n\n\nCompute\nCompute alt menüsünde, nümerik ve string değişkenler için hesaplamalar yapılarak tüm birimler için yeni değişkenler oluturulabilir ya da varolan bir değişkenin değerleri değiştirilebilir. Mantıksal koşullar altında verinin alt grupları için hesaplamalar yapılabilir. Aritmetik fonksiyonlar, istatistiksel fonksiyonlar, dağılım fonksiyonları ve string fonksiyonları ile 70’in üzerinde farklı fonksiyon oluşturulabilir.\n\n\n\nimage.png\n\n\nCount\nBir veya daha fazla değişkene ait veriler arasından kullanıcının belirleyeceği bir değer(ler)e eşit olanları yeni bir değişkende tespit etmek için kullanılır.\nRecode\nRecode alt menüsündeki Into Same Variables alt menüsü, bir değişkenin belirlenen aralıktaki değerlerinin yeni kod değerlerine dönüştürülmesini ve bu kod değerlerinin aynı değişken üzerine yazdırılmasını sağlar. Into Different Variables alt menüsü, bir değişkenin belirlenen aralıktaki değerlerinin yeni kod değerlerine dönüştürülmesini ve bu kod değerlerinin farklı bir değişken olarak yazdırılmasını sağlar.\nAutomatic Recode\nAutomatic Recode ile yazı (string) ile tanımlanan değerler 1, 2, 3, … Şeklinde sırayla kodlanır.\nRank Cases\nGözlem değerlerine büyüklüklerine göre sıra numarası verilir.\nCategorize Variables\nCategorize Variablesile metrik değişkenler sınıflı seri haline getirilebilir.\nReplace Missing Values\nHerhangi bir değişkene ilişkin sütunda yer alan veriler bazı birimler için eksik ya da cevapsız ise hücreleri değişkene ait verilerin ortalaması ile veya verileri kullanıcının belirleyeceği daha farklı bir fonksiyonla işleyerek doldurmak için kullanılır.\nEn çok data özelliklerinden biri de Aggregate seçeneğidir. Bir grubu özet olarak birleştirilmiş veri halinde toplar.\n\n\n\nimage.png\n\n\nAggregate: Fonksiyonları\n\n\n\nimage.png"
  },
  {
    "objectID": "1_SPSS.html#analyze-menüsü",
    "href": "1_SPSS.html#analyze-menüsü",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "ANALYZE MENÜSÜ",
    "text": "ANALYZE MENÜSÜ\nVeri analizinde yararlanılan istatistiksel analiz yöntemlerini içermektedir. * Verilerin özet tablolarının çıkarılması * Belirtici istatistiklerin hesaplanması * Parametrik ve nonparametrik yöntemlerle hipotezlerin test edilmesi ve çok değişkenli hipotezlerin test edilmesine yönelik yöntemler yer almaktadır.\nAnalyze menüsü seçenekleri aşağıdaki gibidir. En çok kullanılan işlevleri kısaca açıklanmıştır.\n\n\n\nimage.png\n\n\nReports\nRaporlama işlevlerini yerine getirir. * OLAP Cubes: OLAP küpü, çok boyutlu bir veri dizisidir. Çevrimiçi analitik işleme, içgörü aramak için verileri analiz eden bilgisayar tabanlı bir tekniktir. * Case Summaries: Veri sayfasında yer alan değişkenlerin değerlerinin listelenerek görüntülenmesini sağlar. * Report Summarise in Rows: Sıralara ilişkin (birimler) özet istatistikler hesaplar. * Report Summarise in Columns: Değişkenlerle ilgili özet istatistikler hesaplar.\nDescriptive Statistics\nVerilerin frekans ve çapraz tablolarının oluşturulması, belirtici istatistiklerin hesaplanması, grafiklerin çizilmesi ve raporlama işlevlerini yerine getiren seçenekler sunar.\n\nFrequences: Verilerin frekans tablosunu hazırlar,aynı zamanda belirtici istatistikleri, dağılım ölçülerini hesaplar ve çubuk ya da histogram grafiklerini çizer.\nDescriptives: Verilerin belirtici istatistiklerini ve asimetrik dağılım istatistikleri olan çarpıklık (kurtosis, eğiklik) ve basıklık (skewnes) ölçülerini hesaplar.\nExplore: Tüm birimlerin ya da her bir gruptaki birimlerin belirtici istatistiklerini hesaplar, yayılım grafiklerini çizer. Bir değişkenin diğer bir anahtar değişkene göre istatistiklerini hesaplar.\nCrosstabs: İki ya da daha fazla değişkenin ikili çapraz tablolarını düzenler. Bu seçenekle hazırlanan tablolarda testler yapılır ve özet istatistikler hesaplanır. Sayısal değişkenler uygun kodlamalar ile az sayıda gruba bölünerek çapraz tablolar düzenlenebilir.\n\nCompare Means\nGruplara göre verilerin belirtici istatistiklerini hesaplayan, bağımlı ve bağımsız örneklerde iki ya da daha fazla ortalama arasındaki farkları test eden yöntemleri içermektedir. Alt menüleri ve işlevleri aşağıdaki gibidir.\n\nMeans: Değişkenlerin tek başına ya da diğer bağımsız değişkenlere göre alt grupların istatistiklerini hesaplar. Örneğin; X1 öğrencilerin boy uzunluğu, X2 cinsiyeti, X3 sınıflarını göstersin. Cins ve sınıflara göre boy uzunluğu ortalamalarını bulmak için Means seçeneği kullanılır.\nOne sample T Test: Tek örneklem t testi yapar.\nIndependent T Test: Bağımsız iki örneklem t testi yapar.\nPaired Samples T Test: Bağımlı iki örneklem t testi yapar.\nOne–Way Anova: Bağımsız k- örneklem t testi yapar.\n\nGeneral Linear Model\nGenel doğrusal modellerin (GLM) ve genel doğrusal etkileşimli modellerin (GLIM) analizlerini yapar. Verilere uyan tam ve kullanıcı tanımlı modellerin varyans analizlerini yapar, varyans bileşenlerini hesaplar. Polinomial karşılaştırmalar yapar. Ayrıca kareler ortalamasının hesaplanmasında Tek (Unique), Aşamalı (Hierarchique) ve Deneysel (Experimental) yöntemlerin uygulanmasını sağlar.\nCorrelate\nAralıklı ya da oransal ölçekle değerleri saptanmış iki ve daha fazla değişken arasındaki ilişkinin, yönünü , büyüklüğünü ve önemliliğini belirlemeye yarar. Bu seçenek ile kısmi korelasyon analizi de yapılmaktadır. En az bir değişkene göre birimlerin birbirleriyle olan benzerlik uzaklıkları (similarity) ya da farklılıklarını gösteren uzaklıklar (dissimilarity) hesaplanır. Çeşitli uzaklık ve benzerlik ölçülerine göre birimlerin ya da değişkenlerin benzerlik /farklılık matrisleri hesaplanır.\nRegression\nDeğişik regresyon analizi yöntemlerinin (doğrusal, lojistik, probabilistik, doğrusal olmayan, ağırlıklı ve iki aşamalı en küçük kareler regresyon yöntemleri) verilere uygulanmasını sağlar.\nClassify\nVerilere kümeleme ve ayırma analizi uygular. Kümeleme analizi olguları ya da değişkenleri olabildiğince birbirleriyle homojen yapıda alt gruplara ayırmayı sağlar. Ayırma analizi ise grupları önceden belirli birimleri rasyonel biçimde birbirlerinden ayırmaya yarayan fonksiyonlar türetmeyi ve bu fonksiyon aracılığı ile verilerin sınıflandırılmasını sağlar. Bu seçenek ile k-means yöntemine ve Aşamalı (hierarchical) bağlantı yöntemlerine göre verilerin kümelenmesi yapılır. Ayırma analizinde ise doğrusal ve karesel yöntemlerle analiz yapılır.\nData Reduction\nVeri setine faktör analizi, uyum (correspondance) analizi ve optimal scalalara dönüştürme işlemini yapar. Factor isimli alt menüsü vardır.\nScale\nİsimsel fakat kodlanmış, sıralı ya da aralıklı ölçekle elde edilmiş verileregüvenilirlik ve çok boyutlu analizi uygular.\nNonparametric Tests\nTek örneklem, bağımlı/bağımsız iki ve k örneklem verilerine parametrik olmayan test yöntemlerinin uygulanmasını sağlar.\nSurvival\nYaşamsal verilerin yaşam tablosu, Kaplan–Meier ve Cox orantısal riskler regresyon analizi modelleriyle analiz edilmesini sağlar."
  },
  {
    "objectID": "1_SPSS.html#utilities-menüsü",
    "href": "1_SPSS.html#utilities-menüsü",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "UTILITIES MENÜSÜ",
    "text": "UTILITIES MENÜSÜ\nBu komut grubu pratik olarak kullanılabilecek bir çok komut bulundurur.\n\nYazı biçim ve büyüklüklerin seçimi.\nVeri dosyası hakkında bilgiler.\nVeri işleme pencerelerinin görünümü.\nÇıktı sayfalarında yer alması istenilen başlıklar girilebilir.\nYer alan komutların işlevleri hakkında bilgi alınabilir.\n\n\n\n\nimage.png"
  },
  {
    "objectID": "1_SPSS.html#windows-menüsü",
    "href": "1_SPSS.html#windows-menüsü",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "WINDOWS MENÜSÜ",
    "text": "WINDOWS MENÜSÜ\nSPSS ile çalışırken ekrandaki görüntülerin pencerelerde görünüş biçimlerini ayarlamaya yarayan seçenekleri içerir."
  },
  {
    "objectID": "1_SPSS.html#helps-menüsü",
    "href": "1_SPSS.html#helps-menüsü",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "HELPS MENÜSÜ",
    "text": "HELPS MENÜSÜ\nSPSS ile çalışırken SPSS komutları hakkında yardım almayı sağlayan seçenekler sunmaktadır. SPSS geniş bir yardım metnine sahiptir."
  },
  {
    "objectID": "1_SPSS.html#histogram-grafiği-çizimi",
    "href": "1_SPSS.html#histogram-grafiği-çizimi",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "HISTOGRAM GRAFİĞİ ÇİZİMİ",
    "text": "HISTOGRAM GRAFİĞİ ÇİZİMİ\nHistogram, gruplandırılmış değişkenin her sınıftaki frekanslarını diğer sınıfların frekanslarına göre orantılı büyüklükte dikdörtgenlerle (bar) ya da uygun geometrik şekillerle gösteren grafiktir. Histogram, eşit aralıklı ve sürekli k grupta sınıflanmış değişkenin grafik ile gösteriminde kullanılır.\nMenü yoluyla:\nSPSS’de Histogram grafiği çizmek için Graph &gt; Histogram seçeneği tıklanır.\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\nÇıktıda variable alanına değişken taşınır.* Grafik üzerinde verilere uyan normal eğri çizilmesi isteniyorsa Display normal curve seçeneği işaretlenir.\nGrafiğe başlıklar eklemek, eksen adları yazmak için Titles seçeneği tıklanır.\nGörüntülenen işlem penceresine uygun girişler yapılır. Continue tklanır.\n\n\n\n\nimage.png"
  },
  {
    "objectID": "1_SPSS.html#çizgi-grafiği-çizimi",
    "href": "1_SPSS.html#çizgi-grafiği-çizimi",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "ÇİZGİ GRAFİĞİ ÇİZİMİ",
    "text": "ÇİZGİ GRAFİĞİ ÇİZİMİ\nMenü yoluyla:\nSPSS’de çizgi (line) grafiği çizmek için Graph &gt; Line seçeneği tıklanır.\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nSonuç olarak çıkan line grafiği\n\n\n\nimage.png\n\n\n\nÇoklu Çizgi Grafiği\nMenü yoluyla:\nSPSS’de çizgi (line) grafiği çizmek için Graph &gt; Line seçeneği tıklanır.\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nSonuç olarak çıkan line grafiği\n\n\n\nimage.png"
  },
  {
    "objectID": "1_SPSS.html#pie-grafiği-çizimi",
    "href": "1_SPSS.html#pie-grafiği-çizimi",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "PIE GRAFİĞİ ÇİZİMİ",
    "text": "PIE GRAFİĞİ ÇİZİMİ\nDaire grafiği k sınıftaki frekansların dağılımını daire içinde açısal yoğunluk biçiminde gösteren grafiktir. Her sınıf veya kategori daire içinde temsil edilme derecelerine göre dilimlere ayrılarak gösterilir. Daire grafiği birçok yayında kullanılan bir grafik türüdür.\n\nSPSS’de daire grafiği çizmek için Graph &gt; Pie seçeneği tıklanır.\nGörüntülenen ekrandan hangi değişkenleri ayrı mı yoksa grup olarak mı seçeceğinize karar verip ilerlenir. İşlem penceresine gerekli girişler yapıldıktan sonra OK tıklanır.\n\n\n\n\nimage.png"
  },
  {
    "objectID": "1_SPSS.html#boxplot-grafiği-çizimi",
    "href": "1_SPSS.html#boxplot-grafiği-çizimi",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "BOXPLOT GRAFİĞİ ÇİZİMİ",
    "text": "BOXPLOT GRAFİĞİ ÇİZİMİ\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\n\n\n\nimage.png"
  },
  {
    "objectID": "1_SPSS.html#scatter-grafiği-çizimi",
    "href": "1_SPSS.html#scatter-grafiği-çizimi",
    "title": "HAFTA 7 - SPSS PAKET PROGRAMI İLE TEMEL İSTATİSTİK",
    "section": "SCATTER GRAFİĞİ ÇİZİMİ",
    "text": "SCATTER GRAFİĞİ ÇİZİMİ\nhs0.sav verisinde reading (read) ve writing(write) skorlarını Scatterplot ile gösterelim.\nİşlem adımları:\n\n\n\nimage.png\n\n\n\n\n\nimage.png"
  },
  {
    "objectID": "latex-lecture2-tr.html",
    "href": "latex-lecture2-tr.html",
    "title": "LaTeX içeriğini derlemek",
    "section": "",
    "text": "LaTeX içeriği derlenmesi gerektiği için, dosyaları kendi bilgisayarınızda derlemek istiyorsanız, bilgisayarınıza LaTeX yazılımı kurmanız gerekmektedir.\n\nWindows için MiKTeX kurmanız gerekmektedir.\nMac için MacTeX kurmanız gerekmektedir.\nLinux için pdflatex kurmanız gerekmektedir.\n\nKurulumdan sonra, gerekli LaTeX paketlerini yüklemeniz gerekmektedir. Kısacası, LaTeX’i kendi bilgisayarınızda yerel olarak kurmak ve kullanmak zahmetli olabilir."
  },
  {
    "objectID": "latex-lecture2-tr.html#latex-kurulumu",
    "href": "latex-lecture2-tr.html#latex-kurulumu",
    "title": "LaTeX içeriğini derlemek",
    "section": "",
    "text": "LaTeX içeriği derlenmesi gerektiği için, dosyaları kendi bilgisayarınızda derlemek istiyorsanız, bilgisayarınıza LaTeX yazılımı kurmanız gerekmektedir.\n\nWindows için MiKTeX kurmanız gerekmektedir.\nMac için MacTeX kurmanız gerekmektedir.\nLinux için pdflatex kurmanız gerekmektedir.\n\nKurulumdan sonra, gerekli LaTeX paketlerini yüklemeniz gerekmektedir. Kısacası, LaTeX’i kendi bilgisayarınızda yerel olarak kurmak ve kullanmak zahmetli olabilir."
  },
  {
    "objectID": "latex-lecture2-tr.html#overleaf",
    "href": "latex-lecture2-tr.html#overleaf",
    "title": "LaTeX içeriğini derlemek",
    "section": "Overleaf",
    "text": "Overleaf\nOverleaf, LaTeX ve tüm gerekli paketlerin yüklü olduğu bir çevrimiçi ortam sağlar, bu yüzden hiçbir şey yüklemenize gerek yoktur.\nBir hesap oluşturmak için, lütfen Overleaf Kayıt sayfasına gidin."
  },
  {
    "objectID": "latex-lecture2-tr.html#overleaf-ortamında-farklı-döküman-türleri-oluşturmak",
    "href": "latex-lecture2-tr.html#overleaf-ortamında-farklı-döküman-türleri-oluşturmak",
    "title": "LaTeX içeriğini derlemek",
    "section": "Overleaf ortamında farklı döküman türleri oluşturmak",
    "text": "Overleaf ortamında farklı döküman türleri oluşturmak\nOverleaf platformu, makale, tez, sunum, poster, CV/Resume gibi çok farklı türde döküman oluşturmak için kullanılabilir. Bunun için çok çeşitli hazır şablonlar Overleaf sitesinde bulunabilir. “Templates” linki ziyaret edilerek, farklı türde şablonlar arayıp, deneyebilirsiniz.\n\nSırasıyla aşağıdaki döküman türlerine göre örnekler yapalım.\n\nCV\nPoster\nSunum (Beamer)\nMakale\nTez (YTÜ Şablonu ile)"
  },
  {
    "objectID": "latex-lecture2-tr.html#cv-hazırlama",
    "href": "latex-lecture2-tr.html#cv-hazırlama",
    "title": "LaTeX içeriğini derlemek",
    "section": "CV hazırlama",
    "text": "CV hazırlama\nResume/CV şablonları linkini tıkladıktan sonra örnek bir CV şablonu seçip, kendi bilgileriniz ile doldurup derleme yaparak PDF halinde CV oluşturabilirsiniz. AltaCV şablonu için tıklayınız."
  },
  {
    "objectID": "latex-lecture2-tr.html#poster-hazırlama",
    "href": "latex-lecture2-tr.html#poster-hazırlama",
    "title": "LaTeX içeriğini derlemek",
    "section": "Poster hazırlama",
    "text": "Poster hazırlama\nPoster şablonları ile dikey veya yatay formatta, poster boyutunda PDF dökümanları hazırlayabilirsiniz."
  },
  {
    "objectID": "latex-lecture2-tr.html#beamer-ile-sunum-hazırlama",
    "href": "latex-lecture2-tr.html#beamer-ile-sunum-hazırlama",
    "title": "LaTeX içeriğini derlemek",
    "section": "(Beamer ile) sunum hazırlama",
    "text": "(Beamer ile) sunum hazırlama\nBeamer, harika görünen sunumlar oluşturmak için güçlü ve esnek bir LaTeX kütüphanesidir. Bir Beamer slayt gösterisi yapmanın temel adımları: başlık sayfası oluşturma, logo ekleme, önemli noktaları vurgulama, içindekiler tablosu oluşturma ve slayt gösterisine efektler ekleme şeklindedir.\nAşağıda minimal bir beamer sunum örneği verilmiştir:\n\\documentclass{beamer}\n%Information to be included in the title page:\n\\title{Sample title}\n\\author{Anonymous}\n\\institute{Overleaf}\n\\date{2021}\n\n\\begin{document}\n\n\\frame{\\titlepage}\n\n\\begin{frame}\n\\frametitle{Sample frame title}\nThis is some text in the first frame. This is some text in the first frame. This is some text in the first frame.\n\\end{frame}\n\n\\end{document}\nBu latex kodunun derlenmesi ile iki slayt içeren aşağıdaki sunum dosyası oluşacaktır:\n\n\nBeamer: sunum başlık slaytı\nBaşlık (title) slaytına, başlık, alt başlık, yazar adı, kurum adı, konferans adı ve logo gibi bilgiler ekleneibilir\n\\title[About Beamer] %optional\n{About the Beamer class in presentation making}\n\n\\subtitle{A short story}\n\n\\author[Arthur, Doe] % (optional, for multiple authors)\n{A.~B.~Arthur\\inst{1} \\and J.~Doe\\inst{2}}\n\n\\institute[VFU] % (optional)\n{\n  \\inst{1}%\n  Faculty of Physics\\\\\n  Very Famous University\n  \\and\n  \\inst{2}%\n  Faculty of Chemistry\\\\\n  Very Famous University\n}\n\n\\date[VLC 2021] % (optional)\n{Very Large Conference, April 2021}\n\n\\logo{\\includegraphics[height=1cm]{overleaf-logo}}\nÇıktı bu şekilde elde edilecektir:\n\n\n\nBeamer: önemli kelime ve cümlelerin işaretlenmesi\n\\begin{frame}\n\\frametitle{Sample frame title}\n\nIn this slide, some important text will be\n\\alert{highlighted} because it's important.\nPlease, don't abuse it.\n\n\\begin{block}{Remark}\nSample text\n\\end{block}\n\n\\begin{alertblock}{Important theorem}\nSample text in red box\n\\end{alertblock}\n\n\\begin{examples}\nSample text in green box. The title of the block is ``Examples\".\n\\end{examples}\n\\end{frame}\nÇıktısı aşağıdaki gibi görünecektir:\n\n\n\nBeamer: temalar\nOverleaf beamer sayfasında beamer temalarını liste halinde görebilirsiniz.\nBeamer ile hazırlanmış sunum şablonlarından birini Overleaf Templates sayfasından seçip, değiştirip, derleyip PDF halinde sunum dosyası hazırlayınız."
  },
  {
    "objectID": "latex-lecture2-tr.html#ytu-tez-şablonu",
    "href": "latex-lecture2-tr.html#ytu-tez-şablonu",
    "title": "LaTeX içeriğini derlemek",
    "section": "YTU Tez Şablonu",
    "text": "YTU Tez Şablonu\nLütfen Tez Yazım Kuralları sayfasını ziyaret edin ve ardından “Latex-Tez Şablonu” başlığındaki zip dosyasını indirin.\nİndirme sonunda klasörünüzde *YTU_Thesis_Latex_Template__08_05_2024.zip* dosyasına sahip olmalısınız."
  },
  {
    "objectID": "latex-lecture2-tr.html#latexin-gücü",
    "href": "latex-lecture2-tr.html#latexin-gücü",
    "title": "LaTeX içeriğini derlemek",
    "section": "LaTeX’in gücü",
    "text": "LaTeX’in gücü\nLaTeX’in gücünü görelim, main.tex dosyasında aşağıdaki satırı:\n\\usepackage[tr, phd]{ytuthesis}\nşu şekilde güncelleyin:\n\\usepackage[eng, phd]{ytuthesis}\nBelgeyi kaydeder kaydetmez (Ctrl + s), tüm tez belgesi derlenecek ve tezin dili İngilizce olacaktır. Değişiklikleri sağ bölmede (derlenmiş PDF dosyası) gözlemleyin."
  },
  {
    "objectID": "latex-lecture2-tr.html#döküman-yapısı",
    "href": "latex-lecture2-tr.html#döküman-yapısı",
    "title": "LaTeX içeriğini derlemek",
    "section": "Döküman yapısı",
    "text": "Döküman yapısı\nmain.tex dosyasının başında, preamble kısmının oldukça kısa olduğunu göreceksiniz: (yorum satırları kaldırılmıştır)\n\\documentclass[a4paper,12pt,oneside,openany]{book}\n\n\\usepackage[tr, phd]{ytuthesis}\n\n\\addbibresource{references.bib} \nBurada, YTU Tez stil dosyası olan ytuthesis.sty dosyası kullanılıyor. Bu dosya, YTU Tez stil kurallarını (kenar boşlukları, yazı tipi türleri, yazı tipi boyutları, satır aralığı, şekillerden sonra boşluklar vb.) içerir. Bu dosyayı ne yaptığınızı bilmiyorsanız değiştirmeyiniz.\nVe references.bib dosyası referansları içerir. Bu aslında bir düz yazı dosyasıdır, Overleaf’te açın ve içeriğini ve stilini gözlemleyin.\nVe işte \\begin{document} - \\end{document kısmı:\n\\begin{document}\n\n\\input {frontPages.tex}\n\n\\input {thesisChapters/1-chapter.tex}\n\\input {thesisChapters/2-chapter.tex}\n\\input {thesisChapters/3-chapter.tex}\n\\input {thesisChapters/4-chapter.tex}\n\n\\newpage\n\\addcontentsline{toc}{chapter}{\\bibName}\n\\singlespacing\n\\printbibliography[title={\\bibName}]\n\n\\newpage\\appendix\n\n\\input {thesisChapters/A-appendix.tex}\n\n\\ifnum\\tmc=0\n\\newpage\n\\addcontentsline{toc}{chapter}{\\cvpub}\n\\input {publications.tex}\n\\fi\n\n\\end{document}\nHatırlanacağı üzere, LaTeX’in bir programlama dili gibi olduğunu söylemiştik. Burada, büyük belgelerle çalışırken işe yarayan dış dosyaları dahil etmek için kullanılabilecek \\input komutunu fark edebilirsiniz. Ayrıca, \\ifnum komutu bir değişkenin içeriğini kontrol eder (bu durumda tmc) ve publications.tex dosyasını koşullu olarak teze ekler."
  },
  {
    "objectID": "latex-lecture2-tr.html#değişkenler",
    "href": "latex-lecture2-tr.html#değişkenler",
    "title": "LaTeX içeriğini derlemek",
    "section": "Değişkenler",
    "text": "Değişkenler\nKüçük belgeler için, tek bir main.tex dosyası üzerinde çalışmak uygun olabilir. Ancak, daha büyük içerikler için, bölümleri ayrı dosyalar halinde tutmak, stilleri tek bir dosyada toplamak ve değişkenleri ayrı bir dosyada tutmak, yazma sürecini daha kolay yönetmenizi sağlar.\nYTU tezi durumunda, frontPages.tex dosyası belirli değişkenleri içerir ve bu dosyayı değiştirmememiz gerekir. Ancak, information.tex dosyası tezle ilgili değişkenleri içerir ve bu dosyada tez başlığı, danışman vb. değişkenleri güncellemeniz gerekmektedir.\nTez başlığını güncellemek isterseniz, lütfen information.tex dosyasını açın ve 1 ve 2 numaralı alanlarını güncelleyin ve ardından dosyayı kaydedin (Ctrl + s).\n\n\n\ntez-basligi"
  },
  {
    "objectID": "latex-lecture2-tr.html#sıra-sizde",
    "href": "latex-lecture2-tr.html#sıra-sizde",
    "title": "LaTeX içeriğini derlemek",
    "section": "Sıra sizde",
    "text": "Sıra sizde\ninformation.tex dosyasındaki bilgileri olabildiğince doldurunuz ve dosyayı kaydettikçe, derleme sonucunda oluşan PDF dosyasını sağ panelde gözlemleyiniz.\nArdından, tezin 3. bölümüne (thesisChapters/3-chapter.tex) figür eklemeyi, tablo eklemeyi ve atıf eklemeyi deneyiniz."
  },
  {
    "objectID": "2_SPSS.html",
    "href": "2_SPSS.html",
    "title": "SPSS Üzerinde Betimleyici İstatistiklerin Hesaplanması",
    "section": "",
    "text": "Belirtici istatistikler iki grupta incelenebilir. Öncelikle kullanılacak olan terimlerin neler olduğunu anlamamız gerekir."
  },
  {
    "objectID": "2_SPSS.html#yer-eğilim-ölçüleri-measures-of-location",
    "href": "2_SPSS.html#yer-eğilim-ölçüleri-measures-of-location",
    "title": "SPSS Üzerinde Betimleyici İstatistiklerin Hesaplanması",
    "section": "1. Yer (Eğilim) Ölçüleri (Measures of Location)",
    "text": "1. Yer (Eğilim) Ölçüleri (Measures of Location)\nVerilerin merkezi eğilimlerini ve verilerin belirli yüzdelerinin hangi değerlerde toplanma eğilimini gösteren tipik değerlerdir. Bu istatistikler toplum parametresini tahmine yardımcı olur. Ortalama, medyan, kartiller Yer ölçüleri ve açıklamaları aşağıda verilmiştir.\n\nOrtalama neden gerekli?\n\nElde edilen ham verinin frekans tablosu ya da sınıfandırılmış hale getirilmesi ya da düzenlenen verinin grafiksel yöntemlerle ifade edilmesi incelenen konuyla ilgili bir fikir verebilir ancak bu bilgiler kesin değerlendirmeler yapılması için yeterli değildir.\nBu yüzden tüm seriyi tek bir sayıyla ifade eden, karşılaştırılabilir ölçütlere ihtiyaç duyulmuştur.\nBu ölçütlere genel olarak merkezi eğilim ölçütleri denir.\nOrtalamalar en çok kullanılan ve en temel merkezi eğilim ölçütlerindendir\nEn çok kullanılan ortalama türleri aşağıdaki gibidir..\n\nAritmetik Ortalama (Mean, Average) * n değerin toplamının n’e (birim sayısına) bölünmesiyle bulunur. * Çan eğrisi biçiminde simetrik dağılım gösteren verileri en iyi temsil eden merkezi eğilim ölçüsüdür. * Analitik araştırmalarda en sık kullanılan istatistiktir.\nGeometrik Ortalama (Geometric Mean) * n birimin değerleri çarpımlarının n kökünün alınması ile bulunan bir istatistiktir. * n değerin logaritmaları toplamının n’e bölünmesi ile bulunan logaritmik ortalamanın antilogaritması alınarak da hesaplanabilir. * Aritmetik ya da geometrik olarak düzenli artan ya da azalan dizilerin merkezi eğilimini belirtmekte kullanılır.\n\n\nSPSS’de Betimleyici İstatistiklerin Hesaplanması\nBu örnekte kullanacağımız veri hs0.sav SPSS veri dosyası kullanılacaktır.\nSPSS programı üzerinde Analyze menüsü üzerinden işlemler yapılır.\nAnalyze &gt; Descriptive Statistics &gt; Descriptives seçenekleri tıklanır.\n\n\n\nimage.png\n\n\nBelirtici istatistikleri hesaplanacak olan veriler Variables alanına taşınır.\n\n\n\nimage.png\n\n\nHangi istatistiklerin hesaplanacağını belirlemek için Options butonu tıklanır. SPSS’de hesaplanabilecek belirtici istatistikler ve dağılım istatistikleri aşağıdaki şekilde belirtilmiştir.\nSeçimler yapıldıktan sonra Continue tıklanır ve ana ekrana dönülür.\n\n\n\nimage.png\n\n\nDaha sonra OK tıklanır ve sonuçlar Output pencesinde karşımıza çıkar. Bu çıktıda ortalama, standart sapma, standart hata, varyans, min, max, range istatistikleri, kurtosis, skewnees istatistikleri ile standart hata yer almaktadır.\n\n\n\nimage.png\n\n\nDescriptive statistics tablosunda ilk sütun değişkenleri gösterir. N ise toplam birim sayısını gösterir."
  },
  {
    "objectID": "2_SPSS.html#dağılım-ölçüleri",
    "href": "2_SPSS.html#dağılım-ölçüleri",
    "title": "SPSS Üzerinde Betimleyici İstatistiklerin Hesaplanması",
    "section": "2. Dağılım Ölçüleri",
    "text": "2. Dağılım Ölçüleri\nVerileri dağılım biçimini, ortalama etrafında değişimini, yayılmalarını ve serpilmelerini belirlemeye yarayan ölçülerdir. Değişim ölçüleri ve açıklamaları aşağıda verilmiştir.\nDeğişim Aralığı (Range, DA) * Bir dizide en büyük değer (Xmax) ile en küçük değer (Xmin) arasındaki farktır.\nVaryans (Variance) * Bir dizideki değerlerin ortalamadan olan farkları kareleri toplamının (n-1) sayısına bölünmesiyle bulunan bir dağılım ölçüsüdür. * Kare farklarının ortalaması diye de isimlendirilir.\nStandart Sapma (Standart Deviation) * Varyansın karekökü alınarak bulunan bir standart dağılım ölçüsüdür. * Birimi değişkenin ölçü birimine eşittir.\nStandart Hata (Standart Error of Mean) * Standart sapmanın birim sayısının kare köküne bölünmesiyle bulunan bir dağılım ölçüsüdür. * Ölçü birimi değişkenin ölçü birimi ile aynıdır.\nEnbüyük Değer (Maximum, Xmax) * Bir dizideki gözlenen en büyük değerli gözlemdir. * Xmax biçiminde gösterilir.\nEnküçük Değer (Minimum, Xmin) * Bir dizideki gözlenen en küçük değerli gözlemdir. * Xmin biçiminde gösterilir.\nDeğişim Katsayısı (Coefficient of Variation) * Bir dizinin standart sapmasının ortalamasına bölünmesi ve 100 ile çarpılması ile bulunan bir dağılım ölçüsüdür. * Ölçü birimleri birbirinden farklı iki ya da daha fazla değişkenin dağılım yoğunluklarını karşılaştırmak amacıyla yararlanılan bir ölçüdür. * Birimi yoktur.\nÇarpıklık (Skewness) * Bir dağılımın normal dağılıma göre simetrik ya da çarpık (asimetrik) olup olmadığını belirten bir ölçüdür. \\(α_3\\) gösterilir. * Simetrik (normal) dağılımda \\(α_3\\) ’ün değeri 0’dır. * \\(α_3\\) ’ün önemliliği, dağılımın simetrik olup olmadığı, normal dağılım yaklaşımıyla test edilir.\nBasıklık (Kurtosis) * Bir dağılımın normal dağılıma göre basık ya da sivri sivri (tepeleşmiş) olup olmadığını belirten bir ölçüdür. * Basıklık ölçüsü normal dağılımda 3 değerini alır. * Dağılımın basıklığının önemliliği, normal dağılıma göre basık olup olmadığı normal dağılım yaklaşımıyla test edilir.\n\nDağılım Ölçülerinin Uygulaması\nMenü yoluyla:\nAnalyze &gt; Descriptive Statistics &gt; Descriptives seçenekleri tıklanır.\nDeğişkenler Variables tarafına koyulduktan sonra Options seçeneğinden ölçüler seçilir ve Continue seçeneği ile diyalog kutusu kapatılır.\n\n\n\nimage.png\n\n\nDaha sonra OK denilerek sonuçlar tablo halinde elde edilir.\n\n\n\nimage.png\n\n\n\n\nFrekans Serisi Oluşturma\nSPSS te tasnif edilmiş (frekanslı) seriyi oluşturmak için Analyze menüsünden Descriptive Statistics ve Frequencies tıklanır.\n\n\n\nimage.png\n\n\nGelen ekranda frekans dağılımı araştırılan değişken Variable(s) kısmına girilir. Biz otomobillerin modellerinin dağılımını görmek istiyoruz. Bunun için variable(s) kısmına Model değişkeni girilir. Statistics ve Charts kısmından ilgili seçenekler işaretlenip OK tıklanır.\nNot: Kullanılan değişkenler mtcars (otomobiller) verisetinin Türkçe ve İngilizce değişken isimleridir.\n\n\n\nimage.png\n\n\nSilindir Sayısının dağılımı aşağıdaki şekilde çıktı ekranında görüntülenir.\n\n\n\nimage.png\n\n\nDağılımın çubuk grafiği aşağıdaki şekilde görüntülenir.\n\n\n\nimage.png"
  },
  {
    "objectID": "2_SPSS.html#explore-keşfetme-seçeneği",
    "href": "2_SPSS.html#explore-keşfetme-seçeneği",
    "title": "SPSS Üzerinde Betimleyici İstatistiklerin Hesaplanması",
    "section": "Explore (Keşfetme) Seçeneği",
    "text": "Explore (Keşfetme) Seçeneği\nExplore prosedürü, tüm vakalarınız için veya vaka grupları için ayrı ayrı özet istatistikler ve grafiksel görüntüler üretir. Araştırma prosedürünü kullanmanın birçok nedeni vardır: * veri taraması, * aykırı değerlerin belirlenmesi, * açıklama, * varsayım kontrolü ve alt popülasyonlar (vaka grupları) arasındaki farklılıkların karakterize edilmesi.\nVeri taraması olağandışı değerlere, aşırı değerlere, verilerdeki boşluklara veya diğer özelliklere sahip olduğunuzu gösterebilir. Verileri araştırmak, veri analizi için düşündüğünüz istatistiksel tekniklerin uygun olup olmadığını belirlemenize yardımcı olabilir.\n\nExplore (Keşfetme) Seçeneği Uygulaması\nExplore (Keşfetme) Seçeneği Uygulaması için hs0.sav datası kullanılmıştır.\nSPSS’deki Explore işlevini kullanarak reading score (okuma skoru) için daha ayrıntılı özet istatistikler elde edebiliriz.\n\n\n\nimage.png\n\n\nSonuçları\n\n\n\nimage.png\n\n\nDaha detaylı bilgiler için (aşırı değerler: outliers, yüzdelikler: percentiles vb.) Statistics seçeneği seçilebilir.\n\n\n\nimage.png\n\n\nDaha detaylı grafiksel bilgiler için (histogram, steam-leaf diyagramı, boxplot) Plots seçeneği seçilebilir.\n\n\n\nimage.png\n\n\nSonuçları\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nGrafiksel Sonuçlar\nHistogram\n\n\n\nimage.png\n\n\nStem-leaf diyagramı\n\n\n\nimage.png\n\n\nBoxplot\n\n\n\nimage.png\n\n\n\n\nTabakalı Betimleyiciler (Stratified Descriptives) Uygulaması\nTabakalı Betimleyiciler için Split File Kullanımı\nDeğişik analizlerde kullanılmak üzere bir veri dosyasını alt gruplara böler, ayırır. Tablo içindeki değişkenleri belli değişkenlere göre gruplayıp her grubun ayrı ayrı istatistik değerlendirmesini yapabiliriz.\nMenü yoluyla:\nData &gt; Split File\n\n\n\nimage.png\n\n\nSes (Sosyo Ekonomik Statü) değişkeni üzerinde veri bölümlemesini yapalım. Bu değişkenin 3 alt kategorisi (düşük, orta ve yüksek) vardır. Veriyi artık yapacağımız bütün işlemlerde bu 3 alt gruba ayrılmış olarak yapacağız.\n\n\n\nimage.png\n\n\nSes (Sosyo Ekonomik Statü) değişkenini tabakalandırdıktan diğer değişkenlerinde özet istatistiklerini alalım.\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nDaha sonra verimizi filtreleme işlemini yaptıktan sonra bir daha özet betimleyici istatistiklerine bakalım. Burada daha önce yaptığımız betimleyici istatistiklerinden farkı bu bilgileri 3 gruba ayırarak vermesidir.\n\n\n\nimage.png\n\n\nTabakalı Betimleyiciler (Stratified Descriptives) ile verimiz bölümlendirildikten sonra bütün yapacağımız analizler bu filtrelemeye göre yapılacaktır. Bu filtreyi kaldırmak için aynı menüyü açıp Analyze all cases, do not create groups seçilip OK ’e tıklanması gerekir.\n\n\n\nimage.png\n\n\n\n\nŞartlı Seçim (Conditional Select) Uygulaması\nSelect Cases\nBelirli bir özelliğe uyan birimlerin seçilmesini sağlar. Belirli bir kritere göre aynı özelliklere sahip birimleri diğerlerinden ayırarak işlemlere almayı sağlayan bir seçenektir.\nMenü yoluyla:\nData &gt; Select Case\n\n\n\nimage.png\n\n\nUygulama\nÖrnek olarak okuma skoru (reading score) için 60 geçme skoru puanı olsun ve bu skoru geçen öğrencileri filtreleyelim.\n\n\n\nimage.png\n\n\nArtık yapacağımız bütün çalışmalarda okuma skoru değişkeni için 60 ve üzeri olan değerler alınacaktır. Örnek olarak bu değişkenin betimleyici istatistiklerini inceleyelim.\n\n\n\nimage.png\n\n\nBu tip filtreleme kullanıldıktan sonra aynı menü üzerinden All Cases seçeneği kullanılıp veri üzerindeki filtre kaldırılmalıdır.\n\n\n\nimage.png\n\n\n\n\nŞartlı Seçim (Conditional Select - String) Uygulaması\nSelect Cases\nÖrnek olarak string tipinde okul tipini görmek için filtreleyelim.\nMenü yoluyla:\nData &gt; Select Case\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nArtık yapacağımız bütün çalışmalarda program tipi için sadece academic kategorisi alınacaktır. Örnek olarak bu değişkenin betimleyici istatistiklerini inceleyelim.\n)\n\n\nŞartlı Seçim (Conditional Select - Range) Uygulaması\nSelect Cases\nÖrnek olarak ilk 40 veriyi range seçeneğini kullanarak filtreleyelim.\nMenü yoluyla:\nData &gt; Select Case\n![image.png](2_SPSS_files/figure-html/25a4ef37-2ebb-482b-b1e9-1333944c363c-1-7a0824ac-9b82-47f2-b892-d87670ba1538.png\nVeriyi 1-40 aralığında filtreledikten sonra SPSS Data View kısmında aşağıdaki şekilde görünecektir.\n)\n\n\nTransform Menüsü\nVeri dosyasının ana yapısını değiştirmeden veri değerleri üzerinde ihtiyac duyulan bazı dönüştürmeleri yapar.\nVeri üzerinde kök alma, kübik hale getirme, log haline getirme ve matematiksel işlemler gibi noktalarda kullanılır.\nBu menüde en çok kullanılan seçenekler uygulamalı olarak gösterilecektir.\nCompute Variable\nBazı durumlarda mevcut değişken değerlerini çeşitli matematiksel ya da mantıksal işlemlere tabi tutularak, bunlardan yeni değişken tanımlama ve yeni değişken değerlerinin hesaplanması gerekebilir. SPSS’de bu işlemleri yapabilme seçenekleri ve imkânı vardır. Uygulanan matematiksel işlem sonucu elde edilen yeni değerler, araştırmacı tarafından tanımlanan farklı bir değişkene (Target Variable) atanır. Tanımlanan yeni değişken ve değerleri Data View sayfasında farklı bir sütunda görüntülenir. Bu işlemler için işlem algoritması aşağıdaki gibi uygulanır.\nBu seçenek veri setinde yeralan değişkenlerden belirli bir cebirsel (trigonometrik, aritmetik ve mantıksal fonksiyon) kritere göre tüm birimler için yeni değişkenler belirlemeyi sağlar. Bu seçenek tıklandığında aşağıdaki ekran görüntülenir ve ekrana girişler yapılır.\n\n\n\nimage.png\n\n\nÖrnek\nOkuma skoru (read) değişkeninin kareakökünü alalım ve karekökü alınmış değişkeni yeni bir değişken olarak tanımlayalım. Yeni değişken Data View kısmı üzerinde oluşacaktır.\nBu yeni değişkenimize new_read ismini pencerede Target Variable bölümüne yazalım.\nDaha sonra Numeric Expression kısmına yapmak istediğmiz düzenlemeye dair formülü girelim.\nBurada karekökü alma SQRT() formülü ile gerçekleştirilir.\nBu ve diğer bütün seçeneklere Function group: bölmesi üzerinden de erişebilirsiniz.\n\n\n\nimage.png\n\n\nÖrnek\nBernoulli dağılımını (dağılım parametre değeri = 0.5) kullanarak rastgele sayılar üretelim ve ismi *new_read1 olarak veritabanımıza eklensin.\n\n\n\nimage.png\n\n\nRecode Into Different Variables (Kategorik)\nRecode Into Different Variables iletişim kutusu, mevcut değişkenlerin değerlerini yeniden atamanıza veya mevcut değer aralıklarını yeni bir değişken için yeni değerlere daraltmanıza olanak tanır. Örneğin maaşları, maaş aralığı kategorilerini içeren yeni bir değişkene daraltabilirsiniz.\nSayısal ve dize (string) değişkenlerini yeniden kodlayabilirsiniz. Sayısal değişkenleri dize değişkenlerine (veya tam tersi) yeniden kodlayabilirsiniz.\nEğer birden fazla değişken seçerseniz hepsinin aynı türde olması gerekir. Sayısal ve dize (string) değişkenlerini birlikte yeniden kodlayamazsınız.\nRecode iki alt menüden oluşmaktadır. * Into Same Variables: Kayıtlı değerlerin kodlanmasını sağlar. Bir değişkenin belirlenen aralıktaki değerlerini yeni kod değerleri ile aynı isim altında veri sayfasına yazmaya yarar. * Into Different Variables: Kayıtlı değerlerin kodlanmasını sağlar. Bir değişkenin belirlenen aralıktaki değerlerini yeni kod değerleri ile farklı bir değişken ismi altında veri sayfasına yazmaya yarar.\n\n\n\nimage.png\n\n\nÖrnek\nSES (Sosyo-Ekonomik-Statü) değişkenini 3 kategoriden (1-Low, 2-Middle, 3-High) 2 kategoriye çevirme (1-Low, 2-High) işlemini gerçekleştirelim. Yeni oluşturacağımız değişkenin ismi ses_final olsun\nYeni Değişkenler İçin Yeniden Kodlanacak Değerleri Belirleme\n\nMenü yoluyla:  Transform &gt; Recode into Different Variables…\nYeniden kodlamak istediğiniz değişkenleri seçin. Birden fazla değişken seçerseniz bunların aynı türde (sayısal veya dize) olması gerekir.\nHer yeni değişken için bir çıktı (yeni) değişken adı girin ve Change’e tıklayın.\n*Old and New Values’e tıklayın.\nEski değeri ve yeni olmasını istediğiniz değeri belirtin.\nEski ve yeni değişimini yapmak için Old–&gt;New listesine yerleştirmek için Add seçeneğini tıklayın.\n\n\n\n\nimage.png\n\n\n*Old and New Values üzerinden kategori numara değişimlerini yapalım.\n1 (old value) olan kategori sınıfını 3 (new value) yapalım ve Add seçeneği ile diyalog kutusuna ekleyelim. Yani yüksek sosyo-ekonomik sınıf ile düşük sosyo-ekonomik sınıf değerlerini değiştirelim.\n3 olan kategori sınıfını da aynı işlemleri yaparak 1 yapalım ve Continue ile işlemi tamamlayalım.\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nDaha sonra yeni oluşan değişkenin alt kategorileri SPSS ana sayfasında Variable view kısmından Values seçeneği ile tanımlanır.\nAutomatic Recode\nBir değişkenin değerlerini büyüklük sırasına göre dizerek yeni bir değişkene birden başlayarak yeni değerlerle kodlayarak yazar. Yeni değişken sınıflandırıldığında orjinal değerlerde tabloda görüntülenir.\nMenü yoluyla:\n\n\n\nimage.png\n\n\nRead değişkenimizi autorecode ile yeni bir değişken haline getirelim ve yeni ismi read_autorecode olsun.\n\n\n\nimage.png\n\n\nAdd New Name tıklayarak ekleyelim ve OK ’e tıklayarak işlemi tamamlayalım. Daha sonra tanımladığımız veri Data View ksımında görünecektir.\n\n\n\nimage.png"
  },
  {
    "objectID": "2_SPSS.html#yeni-değişken-oluşturma",
    "href": "2_SPSS.html#yeni-değişken-oluşturma",
    "title": "SPSS Üzerinde Betimleyici İstatistiklerin Hesaplanması",
    "section": "Yeni Değişken Oluşturma",
    "text": "Yeni Değişken Oluşturma\n*Transform &gt; Compute Variable seçeneğini kullanarak yeni bir değişken oluşturalım.\nBu değişken reading, writing ve math skorlarının toplamından oluşsun ve ismini total olarak belirleyelim.\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nRecode Into Different Variables (Range kullanarak)\nBu uygulamayı daha önce oluşturduğumuz total değişkeni üzerinden işleme sokalım.\nÖrnek Total değişkeni için aşağıdaki aralıkları kullanarak değişken tanımlamalarını yapınız ve değişken kategorilerini atayalım. * (0,80] arası 0 * (80,110] arası 1 * (110,140] arası 2 * (140, 170] arası 3 * (170, 300] arası\n4\nDeğişken kategorilerini SPSS anasayfasında Variable View kısmında Values sütununda atanması gereklidir.\n\n\n\nimage.png"
  },
  {
    "objectID": "2_SPSS.html#çapraz-tablolarin-oluşturulmasi",
    "href": "2_SPSS.html#çapraz-tablolarin-oluşturulmasi",
    "title": "SPSS Üzerinde Betimleyici İstatistiklerin Hesaplanması",
    "section": "ÇAPRAZ TABLOLARIN OLUŞTURULMASI",
    "text": "ÇAPRAZ TABLOLARIN OLUŞTURULMASI\nVeri setlerinde yer alan değişkenlerin frekans dağılım tablolarının ya da çapraz tablolarının hazırlanması, verilerin özetlenmesi bakımından önem taşımaktadır.\nÇapraz tablolar, iki değişkenin karşılıklı alt seçeneklerini birlikte gösteren tabloladır. \\(r*c\\) biçimindeki (r=sıra sayısı ve c=sütun sayısı) çapraz tabloların veri sayfasına girilmesinde tablonun sıra ve sütun sayısı dikkate alınarak giriş yapılır. İki değişkenin alt sçeneklerine aynı anda sahip olan birim sayıları, çapraz tablonun göze frekanslarını oluşturur. Çapraz tablolar daha çok az sayıda seçenek içeren kategorik değişkenler için ya da sınıflara bölünerek kodlanmış ve k sayıda sınıfa indirgenmiş aralıklı/orantılı ölçekli verilerin gösteriminde yararlanılır.\nHer ikisi de nitel türden ya da nicel türden fakat sınıflama veya sıralama düzeyinde ölçülmüş (yani gruplandırılmış frekans verisi), birisi nitel türden diğeri nicel türden fakat sınıflama veya sıralama düzeyinde ölçülmüş (yani gruplandırılmış frekans verisi) olan değişkenlere ait verileri düzenlemede ve bu tür değişkenlerle ilgili uygun olan istatistiksel analizleri gerçekleştirmede çapraz tablolara ihtiyaç duyulmaktadır.\n\nSPSS’de Çapraz Tablo Oluşturulması\n\nSPSS veri sayfasında sütunlara uygun girişler yapılır.\nAnalyze &gt; Descriptive statistics &gt; Crosstabs seçenekleri tıklanır.\n\n\n\nimage.png\n\n\nAçılan bu ekranda değişkenler listesinde yer alan değişkenlerden birisi satır değişkenine (Row(s)), diğeri sütun değişkenine (Column(s)) aktarma butonu yardımı ile aktarılır. OK butonuna basarak çapraz tablo oluşturulur.\n\n\n\nimage.png\n\n\nElde edilen çıktıdaki tablo bilgileri yanında bazı katsayı ve ölçülerin görüntülenmesi isteniyorsa işlem penceresinde Statistics seçeneği tıklanır. Bu pencerede çıktıda yer alması istenilen istatistikler ve katsayılar işaretlenir. Continue tıklanır.\n\nÇapraz Tablo Çıktısı\n\n\n\nimage.png\n\n\nYukarıdaki çapraz tablo sonuçlarını incelediğimizde:\n\nOtomatik vitese ve bir adet karbüratöre sahip 3 otomobil modeli vardır.\nManuel vitese ve bir adet karbüratöre sahip 4 otomobil modeli vardır.\n4 karbütöre ve otomatik şanzımana sahip 7 otomobil modeli vardır.\n1 karbüratöre sahip toplam 7 adet (3+4) otomobil modeli vardır.\nMauel vitese sahip toplam 13 adet (4+4+0+3+1+1) otomobil modeli vardır.\nToplam (total) olarak 32 adet otomobil vardır.\n\nÇapraz Tablo Çıktısı (satır, sütun ve toplam yüzdeliklerle)\nMenü yoluyla\n\n\n\nimage.png\n\n\n\n\n\nimage.png\n\n\nYukarıdaki çapraz tablo sonuçlarını incelediğimizde:\n\nOtomatik vitese ve bir adet karbüratöre sahip 3 otomobil modeli vardır ve yüzdesi 15.8’ dir.\nManuel vitese ve bir adet karbüratöre sahip 4 otomobil modeli vardır ve yüzdesi 30.8’ dir.\nHem bir adet karbüratöre sahip hem de otomatik vites olanların içinde karbüratör yüzdesi 42.9’ dur.\nHem bir adet karbüratöre sahip hem de manuel vites olanların içinde karbüratör yüzdesi 7.1’ dir.\n1 karbüratöre sahip toplam 7 adet (3+4) otomobil modeli vardır ve toplam karbüratör sınıfları arasındaki yüzdesi 21.9’ dur.\n2 karbüratöre sahip toplam 10 adet (6+4) otomobil modeli vardır ve toplam karbüratör sınıfları arasındaki yüzdesi 31.3’ tür."
  },
  {
    "objectID": "fef1002-python.html",
    "href": "fef1002-python.html",
    "title": "Python",
    "section": "",
    "text": "This is HTML version of the lecture notes. If you’d like to run the sample Python codes please visit this LINK and open file fef1002-python.ipynb"
  },
  {
    "objectID": "fef1002-python.html#what-is-python",
    "href": "fef1002-python.html#what-is-python",
    "title": "Python",
    "section": "What is Python?",
    "text": "What is Python?\n\nPython is a programming language that was first developed by Guido Van Rossum in Amsterdam in the early 1990s.\n\nPython is an object-oriented, interpreted, and high-level programming language that stands out in software development and data analysis.\n\nIts standard library, development tools, and many other libraries can be downloaded for free as open source code.\n\nDue to its advanced libraries for data science, data analysis, and artificial intelligence, it is one of the most used programming languages by people who want to advance in these fields.\n\nIt has many development environments such as Jupyter, PyCharm, and Spyder."
  },
  {
    "objectID": "fef1002-python.html#how-python-works",
    "href": "fef1002-python.html#how-python-works",
    "title": "Python",
    "section": "How Python Works",
    "text": "How Python Works\n\nThe bytecode compiler takes source code (Python commands) as input. It then produces Python bytecode (.pyc file) that can be read by the machine as output.\nThe virtual machine takes Python bytecode (.pyc) and any relevant library modules as input, executes the virtual machine instructions represented by the bytecode, converting it into executable file format.\nIn Python, the import statement is used to add/import a library module to the current source file."
  },
  {
    "objectID": "fef1002-python.html#installing-and-using-jupyter-notebook-through-anaconda",
    "href": "fef1002-python.html#installing-and-using-jupyter-notebook-through-anaconda",
    "title": "Python",
    "section": "Installing and Using Jupyter Notebook through Anaconda",
    "text": "Installing and Using Jupyter Notebook through Anaconda\nWhat is Anaconda?\nAnaconda is a popular open-source distribution for data science and machine learning projects. Anaconda makes it easy to process, analyze and visualize data using Python and R programming languages. It contains many packages and tools and also simplifies managing virtual environments. Anaconda Navigator allows users to manage these packages and tools through a graphical interface.\n\nDownloading Anaconda:\n\nOpen a web browser and go to the Anaconda Download Page\nDownload the appropriate version of Anaconda for your operating system (Windows, macOS, or Linux)\n\nInstalling Anaconda:\n\nRun the downloaded Anaconda installation file\nFollow the necessary steps using default settings during installation\n\nOpening Anaconda Navigator:\n\nAfter installation is complete, open Anaconda Navigator (You can access it from the Start Menu in Windows or Applications folder in macOS)\n\nStarting Jupyter Notebook:\n\nOnce Anaconda Navigator opens, find the “Jupyter Notebook” card on the main screen\nClick the “Launch” button. This will start Jupyter Notebook in your default web browser\n\nCreating a New Notebook:\n\nWhen Jupyter Notebook opens, it will open in your file system’s root directory by default\nClick the “New” button in the top right corner and select “Python 3” from the dropdown menu. This creates a new Python 3 Notebook\n\nUsing Notebook Cells:\n\nYou can use cells to write code in the newly created Notebook\nPress Shift + Enter to run a cell after writing code"
  },
  {
    "objectID": "fef1002-python.html#python-basics",
    "href": "fef1002-python.html#python-basics",
    "title": "Python",
    "section": "Python Basics",
    "text": "Python Basics\nSome Jupyter Notebook shortcuts are given in the table below:\n\n\n\nShortcuts\nAction\n\n\n\n\na\nAdds a cell above\n\n\nb\nAdds a cell below\n\n\ndd\nDeletes the cell\n\n\nenter\nEnters cell editing mode\n\n\nshift + enter\nRuns the cell\n\n\nesc\nMakes cell inactive\n\n\ny\nConverts to code snippet\n\n\nm\nConverts to markdown snippet\n\n\nshift + j\nSelect current and next cell\n\n\nshift + m\nMerge selected cells\n\n\nshift + minus\nSplit cell\n\n\n\n\nComments\nComments are expressions that are not considered or interpreted by the Python interpreter. Comments are generally used for the following operations: - Adding a reminder - Making an explanation about the program or code - Making an unused code line passive - Such comment lines help others better understand the code\nNote: These are expressions that are not considered and interpreted by the Python interpreter. The # symbol is used for single-line comments. For multiple comment lines, comments are written between triple single quotes or triple double quotes blocks.\n\n\nPython Block Structure\nIn Python (and other programming languages), codes are expressed in certain subsets (blocks). This structure is created with indentation in Python. In Python, codes that are vertically aligned are in the same block structure. It is recommended to use a tab (4 spaces) to easily distinguish code blocks. If an IDE (integrated development environment) is used, these indentations will be set automatically. Loops, functions, and conditional statements are created using code blocks.\n\nAge=int(input(\"Age= \"))\nName=input(\"Name= \")\nif (Age&lt;=18):\n    print(\"You are in the if block!!\")\n    print(\"You are in the if block!!\")\nprint(\"You are not in the if block!!\")\n\nIn the program above, a block was created by creating an indent under the if statement. The result of the logical expression “age&gt;=18” causes all codes in the block to be skipped or executed. When writing code in Python, attention must be paid to indentation. Since indentation determines the block structure, it can cause the program to run incorrectly or not run at all."
  },
  {
    "objectID": "fef1002-python.html#variables",
    "href": "fef1002-python.html#variables",
    "title": "Python",
    "section": "Variables",
    "text": "Variables\n\nWhen writing code, it may be necessary to get data from users or other sources. For example, if we want to find the sum of two numbers, we need to get two numbers as input from the user. These inputs (values) must be stored in memory to perform operations. A certain space must be allocated in memory to store these inputs. When a variable is defined, the interpreter allocates space in memory depending on the data type and determines what type of data can be stored in the allocated section.\nVariables represent this space allocated in memory for a string, number, or different type of data. Values of different data types can be assigned to variables. Integer, decimal number, array, or string type values can be stored in variables through value assignment.\n\nThe same variable can take values of different data types. A number can be assigned to the same variable first, then a text, then a value of another type. When a value is assigned to a variable, the data type is automatically defined.\nPython will give an error if an unassigned and/or undefined variable is used, if variables are not used according to their data types.\nThere is no need to explicitly declare variables’ data types. The same variable can take values of different data types. A number can be assigned to the same variable first, then a text, then a value of another type. When a value is assigned to a variable, the data type is automatically defined.\nVariables can be assigned side by side with commas between them. Their values should also be written in the same order.\nAnother method to assign values to variables is to write variable-value pairs with semicolons “;” between them.\n\n\n#number1 is 5 now\nnumber1=5\nprint('The variable contains: ', number1)\nnumber1=10\nprint('Current value of variable is: ', number1)\nnumber1='Murat'\nprint ('Current value of variable is: ', number1)\nnumber1=10.5\nprint ('Current value of variable is: ', number1)\n\n\nname, lastname,age='Ali', 'CAN', 34\nprint(\"First Name= \", name)\nprint(\"Laste Name= \", lastname,)\nprint(\"Age= \", age)\n\n\ns1=3; s2=5;t=s1+s2\nprint(\"1.Number=\", s1)\nprint(\"2.Number=\", s2)\nprint(\"Total=\", t)\n\n\nVariable Naming Rules\n\nCase sensitivity exists\nReserved words like “False, True, None, continue, break, class, and, as, else, elif” cannot be used as variables\nThe first character of variables must be alphabetic or _. The rest can only continue with alphabetic, alphanumeric, or again _. Other characters cannot be used\nVariable names can be any length\nTurkish characters (ç, ğ, ı, ö, ş, and ü) are allowed in variable naming. However, since some versions don’t allow this, it should be avoided\n\n\nnumber1=1\nNumber1=2\nprint(number1)\nprint(Number1)\n\"\"\"number1 with capital N is differenet variable than all small letter\"\"\""
  },
  {
    "objectID": "fef1002-python.html#python-functions",
    "href": "fef1002-python.html#python-functions",
    "title": "Python",
    "section": "Python Functions",
    "text": "Python Functions\n\nprint():\n\nA function used to show the results of operations to the user, print certain messages to the screen, and print certain information with a specific format.\nformat() method: A method used in the print() command for formatting operations such as alignment and printing to desired locations on the screen when outputting values.\n\nprint(\"{} likes {}!\".format(\"John\", \"soccer\"))\nprint(\"{} is a {} at age of {}.\".format(\"Jane\", \"girl\", \"8\"))\n\n\ninput():\n\nA function used to get input from the keyboard. In Python, the input() function has a more functional structure than in other programming languages. With the input() function, information can be given to the user about the data to be entered without needing the print() function.\n\na=input(\"Provide a number: \")\nb=input(\"Provide another number: \")\nprint(\"Total of two numbers: \",a+b)\n\nc=int(a) #c=int(input(\"c= \"))\nd=int(b) #d=int(input(\"d= \"))\nprint(\"Total of two numbers: \",c+d)\n\n\nStandard Mathematical Functions\n\nThe math.py file contains functions in the standard mathematics module. Access to the entire math module is provided using the import math expression. However, when calling the relevant function, the module name must also be specified. Module names must be used by joining them with . to function names. This structure is called a combined (module name. function name) structure.\n\n\n\n\n\n\n\n\nFunction Name\nDescription\nExample Usage and Output\n\n\n\n\nsqrt()\nFinds the square root of the desired value.\nmath.sqrt(16) -&gt; 4\n\n\nexp()\nRaises e (Euler’s constant) to the desired power.\nmath.exp(2) -&gt; 7.389056\n\n\nlog()\nOur log(x,y) function takes two parameters. First parameter x represents the number whose logarithm is to be taken; second parameter y represents the base number.\nmath.log(2,2) -&gt; 1.0\n\n\nlog10()\nThe only difference from log(x,y) function is that the base is fixed as 10.\nmath.log10(10) -&gt; 1.0\n\n\ncos()\ncos(x) gives the cosine value of x degrees.\nmath.cos(45) -&gt; 0.5253\n\n\npow()\npow(x,y) function raises number x to the y power.\nmath.pow(2,2) -&gt; 4\n\n\ndegrees()\ndegrees(x) function converts angle x from radians to degrees.\nmath.degrees(45) -&gt; 2578.310078088\n\n\nradians()\nradians(x) function converts angle x from degrees to radians.\nmath.radians(45) -&gt; 0.78539816333\n\n\nfabs()\nfabs(x) function performs the operation of taking the absolute value of x.\nmath.fabs(-5) -&gt; 5.0\n\n\n\n\nimport math\nx=625\ny = math.sqrt(x)\nprint(math.log10(100),y, sep=\"\\n\")"
  },
  {
    "objectID": "fef1002-python.html#data-types",
    "href": "fef1002-python.html#data-types",
    "title": "Python",
    "section": "Data Types",
    "text": "Data Types\nFrequently used data types in Python programming language are given in the table below:\n\n\n\n\n\n\n\n\nData Type\nClass\nDescription\n\n\n\n\nInteger\nint\nInteger number.  3, 5, 369963\n\n\nFloat\nfloat\nReal number.  10.45\n\n\nComplex\ncomplex\nComplex numbers used in the form A+Bj.  4+5j\n\n\nString\nstr\nUsed to represent character strings/String (text).  “Hello” or ‘Hello’\n\n\nBoolean\nbool\nTakes only True or False values.  int(True)=1 while int(False)=0\n\n\nList\nlist\nCan contain different data types.  mylist=[‘Pine’, 24, ‘Engineer’, True]\n\n\nTuple\ntuple\nCan contain different data types.  tuple1=(‘Pine’, 24, ‘Engineer’, True)\n\n\nDictionary\ndict\nCan contain different data types.  dict={‘name’:‘Pine’, ‘age’:24, ‘job’:‘Engineer’, ‘militaryStatus’: ‘True’}\n\n\n\ntype() function: Although Python automatically assigns data types, it may be necessary to check and change a variable’s data type according to its intended use. The type() command is used to learn the data type of a variable.\n\nnumber1=5\nnumber2=5.0\nnumber3=10.556\ntext1=\"1\"\nnumber4=4+5j\nDid_Pass_Class=True\n\nprint(\"1st variable's data type: \", type(number1))\nprint(\"2nd variable's data type: \", type(number2))\nprint(\"3rd variable's data type: \", type(number3))\nprint(\"4th variable's data type: \", type(text1))\nprint(\"5th variable's data type: \", type(number4))\nprint(\"6th variable's data type: \", type(Did_Pass_Class))\n\nt=type(1&lt;5)\nprint(t)\n\nprint('Complex number imaginary part=', number4.imag) #Complex number imaginary part\nprint('Complex number real part=', number4.real) #Complex number real part\n\nConverting Data Types: When performing operations on values, it may be necessary to convert a string containing only numbers to a numerical data type, or sometimes do the opposite. There are some functions for this. The basic functions used to convert data types are: - int() : Converts data type to integer. - float() : Converts data type to float. - str() : Converts data type to string.\nWhen a number of type integer is multiplied by a number of type float, Python automatically determines this data type as the result will be float.\n\n#explicit conversion\np=5.9 \np2=int(p) # with positive numbers, converts to nearest SMALLER number, with negative numbers it does the opposite\nprint(p,type(p))\nprint(p2,type(p2))\nn= -1.7 \nn2=int(n)\nprint(n2,type(n2))\n#implicit conversion\np2=p+p2\nprint(p2,type(p2))\n\na=7;b=9\nprint(a,b)\na,b=b,a #Swap process\nprint(a,b)"
  },
  {
    "objectID": "fef1002-python.html#advanced-data-structures-list-tuple-dictionary",
    "href": "fef1002-python.html#advanced-data-structures-list-tuple-dictionary",
    "title": "Python",
    "section": "Advanced Data Structures (List, Tuple, Dictionary)",
    "text": "Advanced Data Structures (List, Tuple, Dictionary)\n1. List:\nLists are ordered and modifiable data structures. Different data types can be stored in the same list.\nFeatures: - Elements can be added, removed, or modified. - The order of elements in lists is important and can be accessed by indexes. List indexes start at 0 (zero). - Different types of data (numbers, strings, other lists, etc.) can exist in the same list.\n\nmy_list = [3,4,'TBT','Hello',6,\"Apple\",3.14,True]\n#common operations\nprint(len(my_list)) #returns number of elements in the list\nprint(my_list.count(True)) #returns how many times the given value appears in the list\nmy_list.append(4) #element 4 is added to the list\nprint(len(my_list), my_list.index('Hello'), my_list.count(4) ,sep=\"\\n\") #prints requested items line by line\nmy_list.remove(\"Apple\") #\"Apple\" element is removed from the list\nprint(my_list)\nprint(my_list[0]) #access the first element of the list\nprint(my_list[-1]) #access the last element of the list\nprint(my_list[1:5]) #sliced access from element with index 1 to element with index 5 (5 not included)\nmy_list.reverse() #recreates and saves elements in reverse order\nnew_list = [ 11, 3, -4, 9 , 3.14, 2]\nnew_list.sort()  #sorts elements of list consisting of same type elements from smallest to largest (won't error with int-float!)\nprint(my_list, new_list, sep=\"\\n\") \nNEW_LIST = [\"Apple\",\"Pear\",\"Banana\",\"Cherry\"]\nNEW_LIST.sort(reverse = True) # Sorts from largest to smallest\nprint(NEW_LIST)\n\n2. Tuple:\nTuples are ordered but immutable data structures. They are similar to lists but their elements cannot be changed.\nFeatures: - Elements cannot be changed, added, or removed. - Elements are ordered and can be accessed by indexes. - Can contain different data types.\nNote: They are similar to lists, but the difference is that they are immutable. This means that after a tuple is created, its items cannot be changed. However, if the items themselves are mutable, they can be changed. For example, a tuple can contain lists, and the contents of these lists can be modified.\n\nmy_tuple  = (3,4,'TBT','Hello',6,\"Apple\",3.14,True,4,6,False,4)\n#common operations\nprint(len(my_tuple)) #returns number of elements in the tuple\nprint(my_tuple.index(\"Apple\")) #returns at which index the given value is found in the tuple\nprint(my_tuple.count('TBT')) #returns how many times the given value appears in the tuple\nprint(my_tuple[0]) #access the first element of the tuple\nprint(my_tuple[-1]) #access the last element of the tuple\nprint(my_tuple[1:5]) #sliced access from element with index 1 to element with index 5 (5 not included)\nnew_tuple = ([1, 2], [3, 4])\n# Element of the list inside the tuple can be changed directly\nnew_tuple[0][0] = 5\nprint(new_tuple)\n\n3. Dictionary:\nDictionaries are mutable data structures consisting of key-value pairs. Each key is unique.\nFeatures:\n\nElements can be added, removed, or modified.\nElements are accessed by keys, not indexes.\nKeys and values can be of different data types.\n\n\nmy_dict = {\n    'name': 'John',\n    'age': 24,\n    'occupation': 'Engineer'\n}\n#common operations\nmy_dict[\"email\"] = \"john@example.com\"  #Adding/Modifying\nprint(my_dict.keys()) #Listing Keys\nprint(my_dict.values()) #Listing Values\ndel my_dict[\"age\"]  #Removing\nprint(my_dict[\"name\"]) #Accessing\nprint(my_dict.items())  #Listing Key-Value Pairs"
  },
  {
    "objectID": "fef1002-pythonB.html",
    "href": "fef1002-pythonB.html",
    "title": "Python - part 2",
    "section": "",
    "text": "This is HTML version of the lecture notes. If you’d like to run the sample Python codes please visit this LINK and open file fef1002-pythonB.ipynb"
  },
  {
    "objectID": "fef1002-pythonB.html#conditional-statements",
    "href": "fef1002-pythonB.html#conditional-statements",
    "title": "Python - part 2",
    "section": "Conditional Statements",
    "text": "Conditional Statements\n1. if/else statement:\nThe if statement, which means IF, is used to control conditions based on a specific criterion as the name suggests. The if/else statement works together with the if statement and covers all cases where the if conditions are not met.\n\n\nprint(\"Division operation will be performed:\")\ndividend=int(input(\"Enter the first number for operation:\"))\ndivisor=int(input(\"Enter the second number for operation:\"))\nif divisor!=0:\n    print(dividend,\"/\",divisor,\"=\", dividend/divisor)\nelse:\n    print(\"Division by zero is not possible!\")\n\n2. if/elif/else statement: In Python, multi-way conditional statements can be used with both nested if statements and the if/elif/else statement. The elif statement is short for else if. While simple if/else statements have two different conditions, multi-way decision statements perform operations based on more conditions being met.\n\nvalue = int(input(\"Enter an integer between 0 - 2: \"))\nif value &lt; 0:\n    print(\"too small\")\nelif value == 0:\n    print(\"zero\")\nelif value == 1:\n    print(\"one\")\nelif value == 2:\n    print(\"two\")\nelse:\n    print(\"too big\")\nprint(\"Completed!\")"
  },
  {
    "objectID": "fef1002-pythonB.html#loops",
    "href": "fef1002-pythonB.html#loops",
    "title": "Python - part 2",
    "section": "Loops",
    "text": "Loops\n1. for Loop: These are loops used for repeating operations a specific number of times. It repeats between start and end values according to the increment amount.\n\n#range (start value, end value, increment/decrement value) \nrange(0,30,1) # range(30)\nrange(1,11,2)\nrange(5)\nrange(2,7)\nrange(20,10,-2)\nr= range(0,20,2)\nprint(11 in r)\nprint(10 in r)\nprint(r.index(10))\n#writes integers from 1 to 9\n# 1 2 3 4 5 6 7 8 9\nfor i in range(1,10): \n    print(i, end=\" \")    \nprint(\"Finished!\")\n\n2. while Loop: The while statement determines whether the relevant code lines should be executed. It repeatedly executes the code block as long as the condition is true. When the condition becomes false, the loop ends.\n\n#A while loop that displays how many times it has looped until N/n character is entered from outside\ncounter = 0\nentry= \"Y\"\nwhile entry!= \"N\" and entry!= \"n\":\n    entry= input(\"Enter 'Y' to continue – 'N' to exit: \")\n    if entry == \"Y\" or entry == \"y\":\n        counter += 1\n    elif entry != \"N\" and entry != \"n\":\n        print(\"Not a valid entry code! Please enter a valid code.\") \nprint(\"Number of valid entries=\",counter)\n\n\nLoop Exit Commands\nThe While loop executes the relevant code lines as long as the condition is met. Similarly, the for loop performs the relevant operations within the range. However, it’s possible to exit the loop structure for certain values, in other words, to make changes in the loop operation.\nFor this, break and continue commands can be used.\nWhen the break statement is used, the relevant code lines are skipped without execution, while when the continue statement is used, the loop starts over to process the next new value.\n\n# A while loop that adds positive numbers entered until a negative number is entered from outside\nnumber = 0\ntotal = 0\nprint(\"Enter a number, negative number ends the loop:\")\nwhile number &gt;= 0:\n    number= int(input())\n    if number &lt; 0:\n        break    # Exiting the loop\n    total += number\nprint(\"Total=\", total)\n\n\n#Program that prints odd numbers from 1 to 10\nn=0\nwhile n&lt;=10:\n#   print(n)\n    n=n+1\n    if n%2==0:\n        continue\n    print(n) #using print(n,end=' ') will print side by side"
  },
  {
    "objectID": "fef1002-pythonB.html#python-libraries",
    "href": "fef1002-pythonB.html#python-libraries",
    "title": "Python - part 2",
    "section": "Python Libraries",
    "text": "Python Libraries\nCommonly used libraries in Python:\n\nNumPy:\n\nDescription: A fundamental library for scientific computing. Enables working with multi-dimensional arrays and matrices.\nUsage Area: Mathematical operations, linear algebra, Fourier transforms.\n\nPandas:\n\nDescription: Provides powerful tools for data analysis and manipulation.\nUsage Area: Data cleaning, data transformation, working with data frames.\n\nMatplotlib:\n\nDescription: Enables creating graphs and visualizations.\nUsage Area: Graph plotting, data visualization, histograms.\n\nSciPy:\n\nDescription: Offers a wide range of functions for scientific and technical computing.\nUsage Area: Statistical analysis, optimization, signal processing.\n\nscikit-learn:\n\nDescription: A library for machine learning algorithms.\nUsage Area: Classification, regression, clustering, model evaluation.\n\nTensorFlow:\n\nDescription: A library developed by Google, used for machine learning and deep learning.\nUsage Area: Creating, training, and evaluating deep learning models.\n\nKeras:\n\nDescription: A high-level neural network library. Works on backends like TensorFlow and Theano.\nUsage Area: Rapid prototyping of deep learning models.\n\nRequests:\n\nDescription: A simple and user-friendly library for making HTTP requests.\nUsage Area: API calls, fetching data from websites.\n\nBeautifulSoup:\n\nDescription: Used for parsing HTML and XML files.\nUsage Area: Web scraping, data mining.\n\nFlask:\n\nDescription: A lightweight web application framework.\nUsage Area: Web application development, creating RESTful APIs.\n\nDjango:\n\nDescription: A full-featured web application framework.\nUsage Area: Developing complex web applications, rapid prototyping.\n\nPygame:\n\nDescription: A library used for developing 2D games.\nUsage Area: Game development, interactive applications.\n\nOpenCV:\n\nDescription: A library used for image processing and computer vision tasks.\nUsage Area: Image analysis, object detection, face recognition.\n\nNLTK (Natural Language Toolkit):\n\nDescription: A library providing extensive tools for natural language processing (NLP).\nUsage Area: Text analysis, language modeling, part-of-speech tagging.\n\n\nThe choice of library depends on the specific task at hand."
  },
  {
    "objectID": "fef1002-pythonB.html#scientific-computing-in-python-numpy",
    "href": "fef1002-pythonB.html#scientific-computing-in-python-numpy",
    "title": "Python - part 2",
    "section": "Scientific computing in Python: Numpy",
    "text": "Scientific computing in Python: Numpy\nNumPy is a library used in Python that can perform complex mathematical operations, process very large arrays and matrices, and is used in data mining and data analysis. It has similar features to Python lists. The main difference is that numpy arrays must consist of elements of the same type while lists can contain elements of different types. Additionally, numpy arrays are much faster than Python lists and can perform matrix operations.\nNumPy package is imported with import numpy as np. With this definition, the numpy package will now be represented by the name np within the program.\n\nimport numpy as np\n\nCreating Numpy Arrays\nVarious arrays can be created using the numpy methods given below. Numpy arrays can be used to create one-dimensional (vector), two-dimensional (matrix), and multi-dimensional arrays.\nNumPy array/matrix creation methods\n\n\n\n\n\n\n\n\nNumPy methods\nDescription\nExample Usage\n\n\n\n\nnp.array()\nConverts list to NumPy array.\nnp.array([1, 3, 5, 7])print(d)# [1, 3, 5, 7]\n\n\nnp.arange(n)\nCreates an array of numbers from 0 to n (not including n).\nnp.arange(5)print(d)# [0 1 2 3 4]\n\n\nnp.arange(4, 20, 2)\nCreates an array of consecutive numbers in the specified range (4-20) with increment amount (2).\nnp.arange(4, 20, 2)print(d)# [4 6 8 10 12 14 16 18]\n\n\nnp.linspace(0, 5, n)\nCreates an array of n equally spaced numbers in the specified range (0-5).\nnp.linspace(0, 5, 10)print(d)# [0. 0.555 1.11 1.667 2.22 2.778 3.33 3.89 4.44 5.]\n\n\nnp.logspace(0, 2, n)\nCreates an array of n logarithmic numbers as powers of 10 in the specified range (0-2).\nnp.logspace(0, 2, 5)print(d)# [1. 3.16227766 10. 31.6227766 100.]\n\n\nnp.zeros((n,m), dtype=int)\nCreates an array/matrix of zeros (0) with desired dimensions (n rows, m columns) and type.\ne = np.zeros((2,3))print(d)# [[0. 0. 0.] [0. 0. 0.]]\n\n\nnp.ones((n,m), dtype=int)\nCreates an array/matrix of ones (1) with desired dimensions (n rows, m columns) and type.\nd = np.ones((2,3), dtype=int)print(d)# [[1 1 1] [1 1 1]]\n\n\nnp.full((n,m), a)\nCreates an array/matrix filled with value a of desired dimensions (n rows, m columns).\nd = np.full((2,3),6)print(d)# [[6 6 6] [6 6 6]]\n\n\nnp.repeat(a, (n))\nCreates an array of n elements with repeating numbers (a).\ne = np.repeat(3,4)print(e)# [3 3 3 3]\n\n\nnp.eye(n, dtype=int)\nCreates an n*n identity matrix.\nd = np.eye(3, dtype=int)print(d)# [[1 0 0] [0 1 0] [0 0 1]]\n\n\nnp.trace(d)\nReturns the trace (sum of diagonals) of a matrix.\nprint(np.trace(d))# 3\n\n\nnp.random.rand(n)\nCreates an array of n random (floating-point) numbers between 0-1.\nd = np.random.rand(5)print(d)# [0.12 0.27 0.32 0.41 0.54]\n\n\nnp.random.rand(n,m)\nCreates an array/matrix of random (floating-point) numbers between 0-1 with n rows, m columns.\nd = np.random.rand((2,3))print(d)# [[0.54 0.5 0.67] [0.12 0.42 0.99]]\n\n\nnp.random.randint(a,size=n)\nCreates an n-dimensional array of positive integers up to a.\nd=np.random.randint(25,size=3])print(d)# [9, 15, 7]\n\n\nnp.random.randint(a,b, [n,m])\nCreates an n row, m column matrix ([n,m] dimensional matrix) of integers between (a-b).\nd=np.random.randint(1,9,[2,3])print(d)# [[5 7 6] [7 7 6]]\n\n\n\n\n# Data types must be the same, otherwise they are converted to a single type\nX = np.array([50, 25, 350, 400, 450, 100, 550])\nprint(X)\n\nV=np.array([\"ali\", 3, 4])\nprint(V)  # integer expressions are also converted to strings\n\n\nArray elements in Numpy can be accessed with index numbers, just like list elements. The dimension of Numpy arrays is expressed with axes and ranks. These axes in NumPy arrays are expressed with the “axis” parameter. In a 2-dimensional (matrix) array, columns are “axis=0”, rows are “axis=1”, and in a 3-dimensional (3D) array, height (degree) is “axis=0”, columns are “axis=1”, and rows are “axis=2”.\nFor those who confuse array dimensions: in 3-dimensional array definition, three “[[[…]]]” square brackets are used, in 2-dimensional array two “[[..]]” square brackets, in one-dimensional array one “[.]” square bracket is used.\nndarray is an n-dimensional array, and different properties of an ndarray type array can be learned using the methods given in the table below.\n\n\n\n\n\n\n\n\n\nNumPy methods\nDescription\nExample Usage\n\n\n\n\nndarray.dtype\nReturns the type of the array.\na=np.arange(6)print(a.dtype)# int32\n\n\nndarray.ndim\nReturns the dimension of the array.\nprint(a.ndim)# 1\n\n\nndarray.shape\nShows the dimensional shape of the array.\nb=np.zeros((3,7))print(b.shape)# (3,7)\n\n\nndarray.size\nReturns the number of elements (n x m) in the array.\nprint(b.size)# 21\n\n\nndarray.reshape(n, m) or ndarray.resize((n,m))\nConverts a one-dimensional array into an n row, m column matrix. That is, reshapes the array.\nd = np.arange(6)A = d.reshape(2,3)print(A)# [[0 1 2] [3 4 5]]\n\n\nA.ravel() or A.flat\nConverts matrix A to a one-dimensional array.\nd = A.ravel()#d=[0 1 2 3 4 5]\n\n\nA.T or A.transpose()\nTakes the transpose of matrix A. That is, swaps its rows and columns.\nc = A.Tprint(c)# [[0 3] [1 4] [2 5]]\n\n\nnp.mean()\nReturns the average of array elements.\nd = np.array([1,2,3,4])Avg =d.mean()print(Avg)# 2.5\n\n\nnp.sum()\nAdds all elements of the array.\nT = d.sum()print(T)# 10\n\n\nnp.prod()\nMultiplies all elements of the array.\nT = d.prod()print(T)# 24\n\n\nnp.cumsum(axis= )\nPerforms cumulative addition operation on elements (rows for axis=1) in the given axis.\nd = np.array([[1,2,3],[4,5,6]])t = d.cumsum(axis=1)print(t)# [[ 1 3 6] [ 4 9 15]]\n\n\nnp.cumprod(axis=)\nPerforms cumulative multiplication operation on elements (rows for axis=1) in the given axis.\nc = d.cumprod(axis=1)print(c)# [[ 1 2 6] [ 4 20 120]]\n\n\nndarray.max(axis= )\nReturns the element with the largest value in the given axis.\nd.max(axis=1)# [3,6]# returns the largest value in each row of matrix d.\n\n\nndarray.min(axis= )\nReturns the element with the smallest value in the given axis.\nd.min(axis=1)#[1,4]# returns the smallest value in each row of matrix d.\n\n\nndarray.argmax(axis=)\nReturns the index number of the element with the largest value in the given axis.\nd.argmax(axis=1)#[2,2] # returns the index number of the largest value in each row of matrix d.\n\n\nndarray.argmin(axis=)\nReturns the index number of the element with the smallest value in the given axis.\nd.argmin(axis=1)#[2,2]# returns the index number of the largest value in each row of matrix d.\n\n\nnp.add()\nAdds two arrays / matrices.\nT = np.add(d,t)print(T)#[[ 2 5 9] [ 8 14 21]]\n\n\nnp.copy()\nCopies all elements of the array to another array.\nC = np.copy(T)print(C)#[[ 2 5 9] [ 8 14 21]]\n\n\nnp.sort()\nSorts the elements of the array.\nS=np.array([[20, 40, 4.56], [5, 77, 0.17]])print(np.sort(S), np.sort(S.T), sep=“” )\n\n\n\n\n# - Selecting array elements\ny = np.random.randint(100, size=(3, 5))\n# Selecting any row of the array\n# 1st row\nfirst_row = y[0]\nprint(\"First row\", first_row)\n\n# 1st column\nfirst_column = y[:,0]\nprint(\"First column\", first_column)\n\n# 1st and 2nd column\nfirst_and_second_column = y[:,0:2]\nprint(\"First and second column: \\n\", first_and_second_column)\n\n\nt = np.arange(30)\nprint(t)\nprint(t[3:])\nprint(t[:3])\nprint(t[1:6])\nprint(t[1::6])\nprint(t[::-2])\nprint(t[4::-2])"
  },
  {
    "objectID": "fef1002-pythonB.html#data-analysis-in-python-pandas",
    "href": "fef1002-pythonB.html#data-analysis-in-python-pandas",
    "title": "Python - part 2",
    "section": "Data Analysis in Python: Pandas",
    "text": "Data Analysis in Python: Pandas\nPandas is a Python library designed for data analysis and manipulation, built on top of NumPy. It works with two fundamental data structures: Series and DataFrame. Series are used for holding and processing data in single-dimensional arrays, while DataFrames are used for multi-column tabular data.\nThe Pandas package is imported with import pandas as pd. With this definition, the pandas package will now be represented by the name pd within the program.\n\nimport pandas as pd\n\nSeries: These are one-dimensional array-like objects that can store data of any type and can be labeled. Each element in a Series gets an index value. The index value of the first element in the Series is zero.\n\n# filtering can be done within series\nseries = pd.Series([10,15,20,25,30,35])\nprint(series[series&gt;20]) #printing numbers greater than 20\n\nprint(series.unique()) #unique values in the series\nprint(series.value_counts()) #prints how many times each value repeats in the series\n\ngrades = {\"Mathematics\":70,\"Data_Analysis\":90,\"Operations_Research\":96,\"Statistics\":60}\ngrades = pd.Series(grades)\nprint(grades*1.05)  #5% increase added to grades\nprint(np.sqrt(grades)) #square root of grades taken\n\nDataFrame: These are objects that represent Series in multiple dimensions. It’s an electronic spreadsheet structure containing row index labels, column names, and cell values. DataFrames are similar to Excel sheets. Each column in a DataFrame can contain values of different data types.\n\nstudents_dict = {\n    \"school_no\": pd.Series([101,110,606],\n               index = [\"Ayse\",\"Fatma\", \"Betul\"]),\n    \"average\":pd.Series([90,95,85],\n               index=[\"Ayse\",\"Fatma\", \"Betul\"]),\n    \"department\":pd.Series([\"Business\",\"Economics\",\"Mathematics\"],\n               index=[\"Ayse\",\"Fatma\", \"Betul\"]),\n    \"birth_year\":pd.Series([2000,1999,1998],\n               index=[\"Ayse\",\"Fatma\", \"Betul\"]),\n    }\ntable = pd.DataFrame(students_dict)\nprint(table)\nprint(table[table[\"average\"] &lt; 95])\n\n\nData Import\nFor a machine learning application, you may need to work with very large datasets containing many rows and columns. Data can be obtained from a database, an Excel file, or a text file. The Pandas library provides ease of use by converting datasets in different file formats into DataFrame structures.\n\n#CSV = pd.read_csv()\n#JSON = pd.read_json()\n#HTML = pd.read_html()\n#MS EXCEL = pd.read_excel()\n#SQL = pd.read_sql()\n\ndata = pd.read_csv('files/vgsales.csv', encoding=\"utf-8\")\nprint(data.head())  # Shows first few rows of the data\nprint(data.info())  # Shows general information about the data\nprint(data.describe())  # Shows statistical summary of the data\n\n\n\nData Manipulation\n\ndata.isnull()  #is there null in the data (cell by cell)?\ndata.isna()\ndata.isnull().any(axis=0)  # are there any nulls?\ndata.isnull().sum() #how many empty (missing data) are there in columns?\n\n#deleting missing data\ndata.dropna(axis=0, how=\"any\", inplace=True) #delete rows with empty cells and modify data dataframe\ndata2=data.dropna(axis=\"index\", how=\"any\") #when we perform the operation without assigning to data2 dataframe, it doesn't change data dataframe, only shows the operation\nprint(data.isna().any())\nprint(data.shape)\n\n\ndata = pd.read_csv('files/vgsales.csv', encoding=\"utf-8\")\nprint(data.isna().any())\nprint(data.shape)\n\"\"\"let's run these again so that the changed data dataFrame returns to its initial state\"\"\"\n\n\n#filling missing data \nnumeric_columns = data.select_dtypes(include=['number'])\ndata.fillna(numeric_columns.mean(),inplace=True)  #will only fill numeric ones\ndata.fillna(\"unknown publisher\", inplace=True) #since only publisher column has missing data now, we filled it this way\n\n\n#Getting Columns and Rows from Data Table \ndata.head() #first 5 rows of dataset by index\ndata.head(3) #first 3 rows of dataset\ndata.tail() #last 5 rows of dataset by index\ndata.tail(2) #last 2 rows of dataset\ndata[200:301] #rows between 200-301\ndata.sample(3) #random 3 samples\ndata.sample(frac=0.05) #Brings random 5% from dataset\ndata[\"Name\"] #only name column\ndata[\"Publisher\"].head() #first 5 rows of publisher column\ndata.Publisher #only publisher column but it's not always good to get it this way because column names might have spaces causing errors\ndata[[\"Name\",\"Publisher\"]]\ndata[[\"Name\",\"Year\"]].head(7)\ndata[data.Year &gt;= 2010].head(5)\ndata[(data.Year &gt;= 2002)&(data.Year &lt;=2018)].head(20)\n\ntype(data) #dataFrame\ntype(data.Publisher) #series\ntype(data[[\"Name\",\"Publisher\"]])  #dataFrame\n\n\n# Creating subset from dataset\ndata.iloc[:5] #first 5 records of dataframe\ndata.iloc[:5,:3] #first 3 columns of first 5 records of dataframe\ndata.iloc[3,1] #cell at index 3 record's index 1 column\ndata.iloc[100:110,3:5] #genre and year of games between 100-110\ndata.iloc[:,3:5] #genre and year of all games\n\n\ndata[(data[\"Global_Sales\"]&gt;10)][\"Publisher\"] #publishers of records with Global_Sales greater than 10 million\ndata[(data[\"Global_Sales\"]&gt;10)][\"Publisher\"].count() #how many games total meet the condition\ndata[(data[\"Global_Sales\"]&gt;10)][\"Publisher\"].value_counts() #how many games each publisher made in the list meeting the condition\ndata[(data[\"Global_Sales\"]&gt;10)][\"Publisher\"].sum() #concatenated elements in the list meeting the condition\ndata[(data[\"Global_Sales\"]&gt;10)][\"Publisher\"].value_counts(normalize=True) #percentage distributions\ndata[(data[\"Genre\"]==\"Sports\" ) & (data[\"Global_Sales\"]&gt;3)][\"Publisher\"] #publishers of sports games that sold more than 3 million\ndata[(data[\"Publisher\"]==\"Electronic Arts\" ) & (data[\"Global_Sales\"]&gt;3)][\"Genre\"].value_counts()\n\n\n#Data analysis\nprint(data[\"Global_Sales\"].sum())  #sum of Global_Sales column\nprint(data[\"Global_Sales\"].mean())  #mean of Global_Sales column"
  },
  {
    "objectID": "fef1002-pythonB.html#data-visualization-in-python-matplotlib",
    "href": "fef1002-pythonB.html#data-visualization-in-python-matplotlib",
    "title": "Python - part 2",
    "section": "Data Visualization in Python: Matplotlib",
    "text": "Data Visualization in Python: Matplotlib\nMatplotlib is a drawing library designed for data visualization and graphics, developed based on NumPy. The Pylab library under Matplotlib bears considerable similarity to Matlab graphing commands.\nMatplotlib package is imported with import matplotlib.pyplot as plt. With this definition, the matplotlib package will now be represented by the name plt within the program.\n\nimport matplotlib.pyplot as plt\n\n#to show graphs below in jupyter without opening a new page\n%matplotlib inline\n\n\nBasic Usage\n\n# A simple line graph example containing x and y data points\nx = np.arange(6)\ny = x**2\n\n# Creating the graph\nplt.plot(x, y)\n\n# Showing the graph\nplt.show()"
  },
  {
    "objectID": "fef1002-pythonB.html#graph-size-and-resolution",
    "href": "fef1002-pythonB.html#graph-size-and-resolution",
    "title": "Python - part 2",
    "section": "Graph Size and Resolution",
    "text": "Graph Size and Resolution\nOutput quality can be controlled by adjusting the graph’s size and resolution.\n\n# Adjusting graph size and resolution\nplt.figure(figsize=(10, 5), dpi=100)\nplt.plot(x, y)\nplt.title('Graph Size and Resolution')   # Adding title\nplt.show()"
  },
  {
    "objectID": "fef1002-pythonB.html#graph-types",
    "href": "fef1002-pythonB.html#graph-types",
    "title": "Python - part 2",
    "section": "Graph Types",
    "text": "Graph Types\n1. Line Graph: Line graphs are mostly used to show changes in data over time.\n\n#Drawing line graph\nyears=np.arange(2018,2022)\ngpa=[3.2, 2.9, 3.5, 3.8]\nplt.plot(years, gpa)\nplt.ylabel(\"GPA\")\nplt.xlabel(\"Years\")\nplt.show()\n\n\n\n\n\n\n\n\n\nyears=[2018, 2019, 2020, 2021]\ngpa=[3.2, 2.9, 3.5, 3.8]\ngpa2=[2.7, 2.2, 1.8, 3.1]\nplt.plot(years, gpa, label=\"student1\")\nplt.plot(years, gpa2, label=\"student2\")\nplt.legend(loc=\"lower left\")\nplt.ylabel(\"GPA\")\nplt.xlabel(\"Years\")\nplt.axis([2018,2021,0,4])\nplt.show()\n\n\n\n\n\n\n\n\n\n#Graph formatting\nplt.plot(years, gpa2, \"o\", label=\"student2\") # using any of \" o * p s ^ \" will show markers instead of lines\nplt.plot(years, gpa2, \"o-\", label=\"student2\") # connects the markers\nplt.plot(years, gpa, \":b^\", label=\"student1\") # marks points with blue triangles and connects with dots\n\n\n\n\n\n\n\n\n2. Pie Chart: Pie charts are used to show proportions of categorical data.\n\n#Drawing pie chart\nshares={\"A\":20, \"B\":10, \"C\":40, \"D\":30}\nprint(shares.keys())\nprint(shares.values())\nplt.pie(shares.values(), explode=[0,0,0.1,0], labels=shares.keys(), shadow=True, autopct=\"%1.1f%%\")\nplt.show()\n\ndict_keys(['A', 'B', 'C', 'D'])\ndict_values([20, 10, 40, 30])\n\n\n\n\n\n\n\n\n\n3. Bar Graph: Bar graphs are used for comparing categorical data.\n\n#Drawing bar graph\npeople=[\"Ahmed\", \"Michael\", \"Python\", \"Jupyter\"]\nsalaries=[2.5, 1.1, 3.9, 1.8]\nplt.bar(people, salaries)\nplt.title(\"Salary Graph\")\nplt.show()\n\n\n\n\n\n\n\n\n\ndata=np.random.random(size=100)*100\ndata\nx_axis=np.arange(100)\nplt.bar(x_axis, data)\nplt.show()\n\n\n\n\n\n\n\n\n\ndata=np.random.random(size=10)*100\ndata\nheight=np.arange(10)\nplt.barh(data, height)\nplt.show()\n\n\n\n\n\n\n\n\n4. Scatter Plot: Scatter plots are used to see if there is a correlation between values on the axes.\n\n#Drawing scatter plot\nages=[3.5, 2.5, 1.5, 5, 4, 1, 2, 3, 4.5, 2]\nwords=[45, 30, 10, 100, 80, 3, 35, 55, 67, 15]\nscatter=plt.scatter(ages, words, c=ages, s=np.array(words)*10)\nplt.colorbar(scatter)\nplt.show()\n\n\n\n\n\n\n\n\n5. Histogram: Histograms are used to show data distribution.\n\n#Histogram\nhist_data=np.random.normal(size=1000)\nhist_data\nplt.hist(hist_data, bins=50)\nplt.show()\n\n\n\n\n\n\n\n\n\nReferences\n\nPython Official Documentation\nFundamentals of Programming with Python\nVan Rossum, Guido. “Python Programming Language.” Python Software Foundation, 2023.\nSorhun, E. “Machine Learning with Python.” 2021.\nÇobanoğlu, Bülent. “Python for Everyone.” Pusula, 2020.\nMcKinney, Wes. “Python for Data Analysis.” O’Reilly Media, 2017.\nGowrishankar, S., & Veena, A. “Introduction to Python programming.” Chapman and Hall/CRC, 2018.\nMitchell, Ryan. “Web Scraping with Python.” O’Reilly Media, 2015.\nKaggle Dataset"
  },
  {
    "objectID": "latex-lecture1-en.html",
    "href": "latex-lecture1-en.html",
    "title": "What is LaTeX?",
    "section": "",
    "text": "LaTeX (more formally shown as $ $) is a document preparation system and markup language that is widely used for typesetting scientific, technical, and mathematical documents. It is based on the TeX typesetting system developed by Donald Knuth and is particularly suited for creating complex, structured documents such as theses, dissertations, research papers, and books. LaTeX allows users to focus on the content of their document, rather than its layout, by providing a set of markup commands that can be used to define the structure and formatting of the text. This results in professional-quality output with precise control over typography, spacing, and layout, making it a popular choice among academics, researchers, and publishers."
  },
  {
    "objectID": "latex-lecture1-en.html#word-vs-latex",
    "href": "latex-lecture1-en.html#word-vs-latex",
    "title": "What is LaTeX?",
    "section": "Word vs Latex",
    "text": "Word vs Latex\nMicrosoft Word is a WYSIWYG editor (what you see is what you get). If you want to make text bold and red, you select the text and then click on “Bold” icon and then select red color from “Font Color” menu. Finally, you see the results on your screen. Or, if you want to add an image to your text you can drag and drop the image to your document. And then you can move around the image on the page.\n\n\nThis is very practical and efficient for small documents but becomes an disadvantage for documents like thesis, books, research papers, etc.\nLaTeX has very different approach. You describe how the content should look or placed and then LaTeX will compile the document accordingly. You write your Latex code first:\n\nThen you compile it, after which you get a PDF output:"
  },
  {
    "objectID": "latex-lecture1-en.html#word-vs-latex-memes",
    "href": "latex-lecture1-en.html#word-vs-latex-memes",
    "title": "What is LaTeX?",
    "section": "Word-vs-Latex memes",
    "text": "Word-vs-Latex memes\nLatex might be complex for small and simple documents but for longer and more professional documents, Latex is much simpler.\n\nimage source\nIn Word, when you add a picture, layout of your whole document might mess up.\n\nimage source"
  },
  {
    "objectID": "latex-lecture1-en.html#the-preamble-of-a-document",
    "href": "latex-lecture1-en.html#the-preamble-of-a-document",
    "title": "What is LaTeX?",
    "section": "The preamble of a document",
    "text": "The preamble of a document\nThe preamble part of a latex Document contains the following information:\n\nDocument type (article, report, book, etc.)\nPackages to use/include\nInformation to be used in the document (title, author name, date, etc.)\nMacros\n\nHere’s sample document which contains simple preamble part.\n\\documentclass[12pt, letterpaper]{article}\n\\title{My first LaTeX document}\n\\author{Hubert Farnsworth\\thanks{Funded by the Overleaf team.}}\n\\date{August 2022}\n\\begin{document}\n\\maketitle\nWe have now added a title, author and date to our first \\LaTeX{} document!\n\\end{document}\nThis document is rendered as follows (Open this document in Overleaf):"
  },
  {
    "objectID": "latex-lecture1-en.html#adding-comments",
    "href": "latex-lecture1-en.html#adding-comments",
    "title": "What is LaTeX?",
    "section": "Adding comments",
    "text": "Adding comments\nLaTeX is a form of “program code”, so you can include comments within your document. A LaTeX comment is a section of text that will not be typeset or affect the document in any way—often used to add “to do” notes; include explanatory notes; provide in-line explanations of tricky macros or comment-out lines/sections of LaTeX code when debugging.\nTo make a comment in LaTeX, simply write a % symbol at the beginning of the line, as shown in the following code which uses the example above:\n\\documentclass[12pt, letterpaper]{article}\n\\title{My first LaTeX document}\n\\author{Hubert Farnsworth\\thanks{Funded by the Overleaf team.}}\n\\date{August 2022}\n\\begin{document}\n\\maketitle\nWe have now added a title, author and date to our first \\LaTeX{} document!\n\n% This line here is a comment. It will not be typeset in the document.\n\\end{document}"
  },
  {
    "objectID": "latex-lecture1-en.html#bold-italics-and-underlining",
    "href": "latex-lecture1-en.html#bold-italics-and-underlining",
    "title": "What is LaTeX?",
    "section": "Bold, italics and underlining",
    "text": "Bold, italics and underlining\nNext, we will now look at some text formatting commands:\n\nBold: bold text in LaTeX is typeset using the command.\nItalics: italicised text is produced using the command.\n\nUnderline\n\n: to underline text use the command.\n\nThe next example demonstrates these commands:\nSome of the \\textbf{greatest}\ndiscoveries in \\underline{science} \nwere made by \\textbf{\\textit{accident}}.\nThis Latex will be rendered as:\nSome of the \\(\\textbf{greatest}\\) discoveries in \\(\\underline{science}\\) were made by \\(\\textbf{\\textit{accident}}\\)\n\nAnother very useful command is \\emph{argument}, whose effect on its argument depends on the context. Inside normal text, the emphasized text is italicized, but this behaviour is reversed if used inside an italicized text"
  },
  {
    "objectID": "latex-lecture1-en.html#adding-images",
    "href": "latex-lecture1-en.html#adding-images",
    "title": "What is LaTeX?",
    "section": "Adding images",
    "text": "Adding images\nIn Overleaf editor, there are multiple ways to include an image:\n\nUse the Insert Figure button, located on the editor toolbar, to insert an image into Visual Editor or Code Editor\nCopy and paste an image into Visual Editor or Code Editor.\nUse Code Editor to write LaTeX code that inserts a graphic.\n\nOptions 1 and 2 automatically generate the LaTeX code required to insert images, in Option 3, the image needs to be uploaded to Overleaf project.\nBelow is an example:\n\\documentclass{article}\n\\usepackage{graphicx} %LaTeX package to import graphics\n\\graphicspath{{images/}} %configuring the graphicx package\n \n\\begin{document}\nThe universe is immense and it seems to be homogeneous, \non a large scale, everywhere we look.\n\n% The \\includegraphcs command is \n% provided (implemented) by the \n% graphicx package\n\\includegraphics{universe}  \n \nThere's a picture of a galaxy above.\n\\end{document}\nWhich renders as follows (Open this example in Overleaf)\n\n\nFigure captions, labels and references\nImages can be captioned, labelled and referenced by means of the figure environment, as shown below:\n\\documentclass{article}\n\\usepackage{graphicx}\n\\graphicspath{{images/}}\n \n\\begin{document}\n\n\\begin{figure}[h]\n    \\centering\n    \\includegraphics[width=0.75\\textwidth]{mesh}\n    \\caption{A nice plot.}\n    \\label{fig:mesh1}\n\\end{figure}\n \nAs you can see in figure \\ref{fig:mesh1}, the function grows near the origin. This example is on page \\pageref{fig:mesh1}.\n\n\\end{document}\nWhich renders as:\n\nHere are the explanations of each command:\n\n\\includegraphics[width=0.75\\textwidth]{mesh}: This form of \\includegraphics instructs LaTeX to set the figure’s width to 75% of the text width—whose value is stored in the command.\n\\caption{A nice plot.}: As its name suggests, this command sets the figure caption which can be placed above or below the figure. If you create a list of figures this caption will be used in that list.\n\\label{fig:mesh1}: To reference this image within your document you give it a label using the command. The label is used to generate a number for the image and, combined with the next command, will allow you to reference it.\n\\ref{fig:mesh1}: This code will be substituted by the number corresponding to the referenced figure."
  },
  {
    "objectID": "latex-lecture1-en.html#lists-in-latex",
    "href": "latex-lecture1-en.html#lists-in-latex",
    "title": "What is LaTeX?",
    "section": "Lists in Latex",
    "text": "Lists in Latex\nYou can use \\begin{environment-name} and \\end{environment-name} environments to list unordered/bullet lists (itemize) or ordered lists (enumerate)\n\nUnordered lists\n\\documentclass{article}\n\\begin{document}\n\\begin{itemize}\n  \\item The individual entries are indicated with a black dot, a so-called bullet.\n  \\item The text in the entries may be of any length.\n\\end{itemize}\n\\end{document}\n\n\nOrdered lists\n\\begin{enumerate}\n  \\item This is the first entry in our list.\n  \\item The list numbers increase with each entry we add.\n\\end{enumerate}\nThe lists above will render as:\n\nOR"
  },
  {
    "objectID": "latex-lecture1-en.html#adding-math",
    "href": "latex-lecture1-en.html#adding-math",
    "title": "What is LaTeX?",
    "section": "Adding math",
    "text": "Adding math\nOne of the main advantages of LaTeX is the ease with which mathematical expressions can be written. LaTeX provides two writing modes for typesetting mathematics:\n\ninline math mode used for writing formulas that are part of a paragraph\ndisplay math mode used to write expressions that are not part of a text or paragraph and are typeset on separate lines\n\n\nInline math mode\n\\documentclass[12pt, letterpaper]{article}\n\\begin{document}\nIn physics, the mass-energy equivalence is stated \nby the equation $E=mc^2$, discovered in 1905 by Albert Einstein.\n\\end{document}\nWill render as:\nIn physics, the mass-energy equivalence is stated by the equation \\(E=mc^2\\), discovered in 1905 by Albert Einstein.\n\n\nDisplay math mode\n\\begin{equation}\nE=mc^2\n\\end{equation}\nWill render as formulas in separate lines:\n\\[\\begin{equation}\nE=mc^2\n\\end{equation}\\]\nPlease refer to more complete examples for more detail."
  },
  {
    "objectID": "latex-lecture1-en.html#basic-document-structure",
    "href": "latex-lecture1-en.html#basic-document-structure",
    "title": "What is LaTeX?",
    "section": "Basic document structure",
    "text": "Basic document structure\nEspecially scientific documents have sections like Abstract and then rest of the document might be divided up into sections/chapters. It’s trivial to define those structures in Latex\n\nAbstracts\nThe Latex code below:\n\\documentclass{article}\n\\begin{document}\n\\begin{abstract}\nThis is a simple paragraph at the beginning of the \ndocument. A brief introduction about the main subject.\n\\end{abstract}\n\\end{document}\nWill render as:\n\n\n\nParagraphs and new lines\n\nIn Latex “an empty line” means new paragraph, whereas in Word just pressing Enter will start a new paragraph\n\nIf you need to break a line you can use \\\\ or \\newline command. Please check Paragraphs and new lines section at Overleaf for more details.\n\n\nChapters and sections\nYou can use the following commands to define structure. The Latex will figure out numbering, font-size and margin for each structure\n\n\\part{part}\n\\chapter{chapter}\n\\section{section}\n\\subsection{subsection}\n\\subsubsection{subsubsection}"
  },
  {
    "objectID": "latex-lecture1-en.html#creating-tables",
    "href": "latex-lecture1-en.html#creating-tables",
    "title": "What is LaTeX?",
    "section": "Creating tables",
    "text": "Creating tables\nIn Latex, creating tables might be more tedious compared to Word. First we need to define and describe tabular environment and also we need to define the columns with &.\nThe following latex code\n\\begin{center}\n\\begin{tabular}{c c c}\n cell1 & cell2 & cell3 \\\\ \n cell4 & cell5 & cell6 \\\\  \n cell7 & cell8 & cell9    \n\\end{tabular}\n\\end{center}\nWill render as:\n\n\nYou don’t need to prepare the tables manually, please use online TablesGenerator where you can copy and paste Excel tables and generate Latex code\n\nPlease refer to adding borders and captions, labels and references sections at Overleaf"
  },
  {
    "objectID": "latex-lecture1-en.html#adding-table-of-contents",
    "href": "latex-lecture1-en.html#adding-table-of-contents",
    "title": "What is LaTeX?",
    "section": "Adding table of contents",
    "text": "Adding table of contents\nIf you add \\tableofcontents command in your document, you’ll automatically add table of contents with section titles and page numbers.\nHere’s an example:"
  },
  {
    "objectID": "latex-lecture1-en.html#overview",
    "href": "latex-lecture1-en.html#overview",
    "title": "What is LaTeX?",
    "section": "Overview",
    "text": "Overview\nHere’s a sample Latex code which showcases several features (Open in Overleaf)\n\\documentclass{article}\n\\usepackage{amsmath} % For math symbols\n\\usepackage{mhchem} % For chemistry symbols\n\\usepackage{graphicx} % For including images\n\\usepackage{epigraph} \n\\usepackage{subcaption}\n\\usepackage{hyperref}\n\\hypersetup{colorlinks=true,\n    linkcolor=blue,\n    urlcolor=blue}\n    \n\\title{Introduction to LaTeX}\n\\author{Your Name}\n\\date{\\today}\n\n\\begin{document}\n\\maketitle\n\n\\section{Introduction}\nLaTeX is a powerful typesetting system used for various kinds of documents.\n\n\\section{Mathematics}\nHere is an inline equation: $ E = mc^2 $.\n\nHere is a displayed equation:\n\\begin{equation}\n \\int_{0}^{\\infty} x^2 \\, dx\\label{eq:integral}\n\\end{equation}\n\n\\section{Chemistry}\nHere is a chemical formula: \\ce{H2O}.\n\nHere is a chemical reaction: \\ce{CO2 + C -&gt; 2 CO}\n  \n\n\\section{Literature}\n\nHere's some fancy way to make quotes.\n\n\\epigraph{All human things are subject to decay, and when fate summons, Monarchs must obey}{\\textit{Mac Flecknoe \\\\ John Dryden}}\n\n\\section{Adding tables}\n\nPlease use \\url{https://tablesgenerator.com/latex_tables} to generate tables\n\n\\begin{table}[ht]\n\\centering\n\n  \\begin{tabular}{c|c|c}\n  A & B & C \\\\\n  \\hline\n  1 & 2 & 3 \\\\\n\n  4 & 5 & 6 \\\\\n  \\hline\n  \\end{tabular}\n  \\caption{A simple table.}\n  \\label{tab:simple}\n  \\end{table}\n  \n\\section{Adding images}\n\n\\begin{figure}[ht]\n\n\\begin{subfigure}{0.5\\textwidth}\n\\includegraphics[width=0.9\\linewidth, height=6cm]{universe} \n\\caption{Caption1}\n\\label{fig:subim1}\n\\end{subfigure}\n\\begin{subfigure}{0.5\\textwidth}\n\\includegraphics[width=0.9\\linewidth, height=6cm]{mesh}\n\\caption{Caption 2}\n\\label{fig:subim2}\n\\end{subfigure}\n\n\\caption{Caption for this figure with two images}\n\\label{fig:image2}\n\\end{figure}\n\nFinally, according to \\cite{sample}, LaTeX is widely used in academia and Formula \\eqref{eq:integral} is simple integral and Table \\ref{tab:simple} is a very simple table. Figure \\ref{fig:subim1} contains a universe.\n\n\\bibliographystyle{plain}\n\\bibliography{sample}\n\n\\end{document}\n\nThis code is rendered as PDF as follows:"
  },
  {
    "objectID": "week5-excel-part2.html",
    "href": "week5-excel-part2.html",
    "title": "Excel - Part2",
    "section": "",
    "text": "This module will cover the following concepts:\n\nSorting, Filtering, Conditional Formatting\nWriting Functions in Excel\n\n\n\n\n\nSorting data is an integral part of data analysis. You might want to organize a name list in alphabetical order, compile a product stock levels list from highest to lowest, or sort rows by colors or icons. Sorting data helps you better see and understand your data, find and organize the data you want, and ultimately make much more effective decisions.\n\n\n\nSelect a cell in the column you want to sort.\nIn the Data tab, in the Sort and Filter group, do one of the following:\nFor quick ascending order sorting, click the A to Z command (Sort A to Z) which sorts in Excel from A to Z or from smallest to largest number.\nFor quick descending order sorting, click the Z to A command (Sort Z to A) which sorts in Excel from Z to A or from largest to smallest number.\n\n\n\n\nSelect a cell in the column you want to sort.\nIn the Data tab, in the Sort and Filter group, do one of the following:\nTo sort from smallest to largest, click the A to Z command (Sort Smallest to Largest) which sorts in Excel from smallest to largest number.\nTo sort from largest to smallest, click the Z to A command (Sort Largest to Smallest) which sorts in Excel from largest to smallest number.\n\n\n\n\n\n\n\nPlease use the sample Excel file ornek1.xlsx for the following samples.\n\nLet’s enter the following data and find all cells with the name Esra.\n\n\n\n\n\n\n\nLet’s filter those younger than 18 in the same example\n\n\n\n\n\n\n\nConditional formatting can help make patterns and trends in your data more apparent. It works with the logic of if… then…. If cell content has a specific value according to certain criteria, that cell’s formatting changes according to the selected option or any format you desire. You can change formatting elements such as cell background color, borders, fonts, and you can also display icons in the cell. In other words, it allows you to see values that are more important or special to you more easily at first glance. You can even use it for error checking; for example, in a formula that multiplies values from different cells for a subtotal, you can use formatting that will quickly show you cells that don’t return values.\n\n\n\nAs shown below, you can select one of the preset formats in cell highlighting rules or create custom formatting.\nThe formatting option includes “Greater Than”, “Less Than”, “Between”, “Equal To”, “Text Contains”, “Date” and “Duplicate Value”. For example, when “Duplicate” is clicked, an additional window appears with a dropdown box where you can select “Duplicate” or “Unique” options to format repeated values or unique values.\n\nFor example, let’s highlight those over 18 years old\n\nSimilarly, let’s highlight those under 18 years old\n\n\n\n\n\nWith this option, you can select self-explanatory preferences including top 10, top 10%, bottom 10, bottom 10%, below average, and above average in your selected range.\nLet’s highlight the data above average\n\n\nSimilarly, to highlight repeated or unique values, you just need to select other rules option.\n\n\n\n\nData bars fill cells with horizontal bar graphs according to the values in your selected range, with the largest value filling the entire cell horizontally and other values scaled proportionally in comparison.\nIf you click on Other Rules, you can apply formatting according to your own preferences or formula through a form. Additionally, you can modify the fill and border of the bars within cells to create custom formatting.\n\n\n\n\nThis option creates a scale between the largest and smallest values in your selected range and adjusts the cell fill color according to the scale between two colors you choose.\n\n\n\n\nIcon sets show different symbols next to the value in the cell indicating which range the value falls into based on a scale between the largest and smallest values in your selected range. You can create rules and assign icons according to your rules.\n\n\n\n\n\n\n\nWhen you need to enter sequential numbers like serial numbers in a table, instead of typing these numbers one by one manually, we can enter them using the auto-fill method. For this:\n\nEnter the first two sequence numbers in cells either vertically or horizontally.\nSelect these two cells, starting with the cell containing the first number.\nTake the mouse pointer to the fill handle (small dot) in the bottom right corner of the selected area (mouse pointer becomes a small plus), hold down the left mouse button and drag down or to the side.\n\nNote: You determine the rule. If the first two cells contain 2 and 4, you will create numbers increasing by 2.\n\n\n\n\nYou can perform calculations using formulas in Excel tables. When entering a formula into a cell, you need to pay attention to the following:\n\nFormulas start with = sign\nNo spaces should be given when writing formulas (except for text in quotes within the formula)\nThe number of opening parentheses should match the number of closing parentheses\nConstant numbers, cell names, and range names can be used when writing formulas\nF2 key is used to edit the formula\nDELETE key is used to delete the formula\nESC key is used to exit the formula\nFormulas can be replicated\nAddition and multiplication operations have functions. However, division and subtraction operations don’t have functions\nColon: Includes the cell range in the operation. For example, if A2:A8, all cells from A2 to A8 are included in the operation\nSemicolon; Only includes those specific cells in the operation. Does not take the range. For example, if A2;A8, only A2 and A8 are included in the operation\nIf the value in the formula is a number, it is written directly. For example; A2=50\nIf the value in the formula is a word, it is written in quotes. For example; A2=“female”\nDuring formula replication, cell fixing can be done to prevent cell changes. Press F4 key to fix a cell. Or it can be fixed by writing manually.\n\n\nSource: HANIFE BOZKURT BATMAN\nAddition Operation\n=SUM(A1:A10) Performs Addition Operation. Adds Cells from A1 to A10.\n\nMultiplication Operation\n=PRODUCT(A1:A10) Performs Multiplication Operation. Multiplies Cells from A1 to A10. \n=AVERAGE(A1:A10) Calculates Average. Finds the Average of Cells from A1 to A10.\n=MAX(A1:A10) Finds the Largest Number. Finds the Highest Number in Cells from A1 to A10.\n=MIN(A1:A10) Finds the Smallest Number. Finds the Smallest Number in Cells from A1 to A10.\n=SMALL(A1:A10;2) Returns the SMALL number in the Range. However, which small number is required must be specified in the formula. Finds the 2nd smallest number from A1 to A10.\n=LARGE(A1:A10;3) Returns the LARGE number in the Range. However, which large number is required must be specified in the formula. Finds the 3rd largest number from A1 to A10.\n=ROW(A1) Returns the Row Number of the Cell.\n=COLUMN(A1) Returns the Column Number of the Cell.\n=LOWER(A1) Converts Text in Cell to Lowercase.\n=UPPER(A1) Converts Text in Cell to Uppercase.\n=PROPER(A1) Capitalizes the First Letters of Text in Cell.\n=CONCATENATE(A1;A2) Writes Values from Two Cells Side by Side, Combines Them.\n=TEXT(A1;“000”) Converts the Value in Cell to Text, Adds Zeros at the Beginning.\n=TEXT(A1;“DDDD”) If the Value in Cell is a Date, Returns the Day of the Week.\n=LEN(A1) Returns the Number of Characters in Cell Value.\n=INT(A1) Removes Everything After the Decimal Point in Cell’s Decimal Number. Converts to Integer.\n=ROUND(A1;1) Rounds the Decimal Places After the Decimal Point According to the Digit Value in the Formula.\n=ROUNDUP(A1;0) Rounds Up the Decimal Places After the Decimal Point to the Next Number.\n=ROUNDDOWN(A1;0) Rounds Down the Decimal Places After the Decimal Point to the Previous Number.\n=QUOTIENT(B2;C2) Is Division Operation. B2: Represents Numerator C2: Represents Denominator. Gives Quotient. Doesn’t Show Remainder.\n=MOD(B2;C2) B2: Represents Dividend, C2: Represents Divisor. Gives Remainder. Doesn’t Show Quotient.\n=COUNTBLANK(B2:B8) Returns Number of Empty Cells. Finds How Many Empty Cells There Are from B2 to B8.\n=COUNTA(B2:B8) Returns Number of Non-Empty Cells. Finds How Many Non-Empty Cells There Are from B2 to B8.\n=COUNT(B2:B8) Returns Number of Cells Containing Numbers. Finds How Many Cells Contain Numbers from B2 to B8.\n=COUNTIF(B2:B12;“Female”) Finds How Many of the Searched Value Exist. Finds How Many Cells Contain “Female” from B2 to B12.\n\nYou can use ornek2a.xlsx file for the following examples\n\n\nCOUNTIFS(B2:B12;“Female”;C2:C12;“&gt;18”) Finds How Many Match Multiple Search Criteria. Finds How Many Cells Contain “Female” Value from B2 to B12 AND Are Greater Than 18 from C2 to C12.\n\n=SUMIF(B2:B12;“Female”;C2:C12) Finds the Sum of the Range That Matches the Search Value. Finds the Sum of the Range from C2 to C12 Corresponding to Cells Containing “Female” from B2 to B12.\n\n=SUMIFS(C2:C12;A2:A12;“Sevgi”;B2:B12;“Female”) Finds the Sum of the Range That Matches Multiple Search Values. This formula sums the ages of those named Sevgi and who are Female.\n\n=AVERAGEIF(B2:B12;“Female”;C2:C12) Calculates the Average of Values Corresponding to Cells That Match the Search Criteria. Finds “Female” Values from B2 to B12 And Calculates the Average of Their Corresponding Values from C2 to C12.\n=AVERAGEIFS(C2:C12;A2:A12;“Sevgi”;B2:B12;“Female”) Calculates the Average of Values Corresponding to Cells That Match Multiple Search Criteria. Finds “Female” Values. Finds “Sevgi” Values. Takes Average of Ages.\n\n\n\n\nThis function allows for evaluating outcomes based on whether a condition is met or not.\nUsage format: =IF(condition;true result;false result)\ncondition can be written by comparing a cell with a number or comparing values of two cells.\ntrue result is the expression or value to be written when the condition is met.\nfalse result is the expression or value to be written when the condition is not met.\nLet’s Look at the Examples Below.\nWe assigned label 1 to True Result and 0 to False Result. After writing the first function, we can copy the same function for other cells by dragging the cells.\n\n\nWe assigned “Can Vote” to True Result and “Cannot Vote” to False Result. After writing the first function, we can copy the same function for other cells by dragging the cells.\n\n\n\n\n\nWhen you need to check multiple conditions in an IF function, you can use AND operator or OR operator. If you want all multiple conditions to be met for a positive result in the IF function, use the AND operator; if meeting just one of the conditions is sufficient, write the formula with the OR operator.\nLet’s add another column to the above table (Mental Status)\nIf age is 18 and mental status is sound, they can vote. That is, both conditions must be met.\n\nYou can use file ornek2b.xlsx for the following examples\n\n\n\nIf age is 18 or mental status is sound, they can vote. Meeting one condition is sufficient.\n\n\n\n\n\nLet’s say we have students and their grades. We want to show students who got:\n\n80 - 100 as “Very Good”\n60 - 79 as “Good”\n40 - 59 as “Average”\n20 - 39 as “Poor”\n0 - 19 as “Very Poor”\n\nLet’s examine the following function:\n=IF(B2&gt;=80;“Very Good”;IF(B2&gt;=60;“Good”;IF(B2&gt;=40;“Average”;IF(B2&gt;=20;“Poor”;“Very Poor”))))\n\nYou can use file ornek3.xlsx for the following examples"
  },
  {
    "objectID": "week5-excel-part2.html#sorting-filtering-conditional-formatting",
    "href": "week5-excel-part2.html#sorting-filtering-conditional-formatting",
    "title": "Excel - Part2",
    "section": "",
    "text": "Sorting data is an integral part of data analysis. You might want to organize a name list in alphabetical order, compile a product stock levels list from highest to lowest, or sort rows by colors or icons. Sorting data helps you better see and understand your data, find and organize the data you want, and ultimately make much more effective decisions.\n\n\n\nSelect a cell in the column you want to sort.\nIn the Data tab, in the Sort and Filter group, do one of the following:\nFor quick ascending order sorting, click the A to Z command (Sort A to Z) which sorts in Excel from A to Z or from smallest to largest number.\nFor quick descending order sorting, click the Z to A command (Sort Z to A) which sorts in Excel from Z to A or from largest to smallest number.\n\n\n\n\nSelect a cell in the column you want to sort.\nIn the Data tab, in the Sort and Filter group, do one of the following:\nTo sort from smallest to largest, click the A to Z command (Sort Smallest to Largest) which sorts in Excel from smallest to largest number.\nTo sort from largest to smallest, click the Z to A command (Sort Largest to Smallest) which sorts in Excel from largest to smallest number.\n\n\n\n\n\n\n\nPlease use the sample Excel file ornek1.xlsx for the following samples.\n\nLet’s enter the following data and find all cells with the name Esra.\n\n\n\n\n\n\n\nLet’s filter those younger than 18 in the same example\n\n\n\n\n\n\n\nConditional formatting can help make patterns and trends in your data more apparent. It works with the logic of if… then…. If cell content has a specific value according to certain criteria, that cell’s formatting changes according to the selected option or any format you desire. You can change formatting elements such as cell background color, borders, fonts, and you can also display icons in the cell. In other words, it allows you to see values that are more important or special to you more easily at first glance. You can even use it for error checking; for example, in a formula that multiplies values from different cells for a subtotal, you can use formatting that will quickly show you cells that don’t return values.\n\n\n\nAs shown below, you can select one of the preset formats in cell highlighting rules or create custom formatting.\nThe formatting option includes “Greater Than”, “Less Than”, “Between”, “Equal To”, “Text Contains”, “Date” and “Duplicate Value”. For example, when “Duplicate” is clicked, an additional window appears with a dropdown box where you can select “Duplicate” or “Unique” options to format repeated values or unique values.\n\nFor example, let’s highlight those over 18 years old\n\nSimilarly, let’s highlight those under 18 years old\n\n\n\n\n\nWith this option, you can select self-explanatory preferences including top 10, top 10%, bottom 10, bottom 10%, below average, and above average in your selected range.\nLet’s highlight the data above average\n\n\nSimilarly, to highlight repeated or unique values, you just need to select other rules option.\n\n\n\n\nData bars fill cells with horizontal bar graphs according to the values in your selected range, with the largest value filling the entire cell horizontally and other values scaled proportionally in comparison.\nIf you click on Other Rules, you can apply formatting according to your own preferences or formula through a form. Additionally, you can modify the fill and border of the bars within cells to create custom formatting.\n\n\n\n\nThis option creates a scale between the largest and smallest values in your selected range and adjusts the cell fill color according to the scale between two colors you choose.\n\n\n\n\nIcon sets show different symbols next to the value in the cell indicating which range the value falls into based on a scale between the largest and smallest values in your selected range. You can create rules and assign icons according to your rules."
  },
  {
    "objectID": "week5-excel-part2.html#writing-functions-in-excel",
    "href": "week5-excel-part2.html#writing-functions-in-excel",
    "title": "Excel - Part2",
    "section": "",
    "text": "When you need to enter sequential numbers like serial numbers in a table, instead of typing these numbers one by one manually, we can enter them using the auto-fill method. For this:\n\nEnter the first two sequence numbers in cells either vertically or horizontally.\nSelect these two cells, starting with the cell containing the first number.\nTake the mouse pointer to the fill handle (small dot) in the bottom right corner of the selected area (mouse pointer becomes a small plus), hold down the left mouse button and drag down or to the side.\n\nNote: You determine the rule. If the first two cells contain 2 and 4, you will create numbers increasing by 2.\n\n\n\n\nYou can perform calculations using formulas in Excel tables. When entering a formula into a cell, you need to pay attention to the following:\n\nFormulas start with = sign\nNo spaces should be given when writing formulas (except for text in quotes within the formula)\nThe number of opening parentheses should match the number of closing parentheses\nConstant numbers, cell names, and range names can be used when writing formulas\nF2 key is used to edit the formula\nDELETE key is used to delete the formula\nESC key is used to exit the formula\nFormulas can be replicated\nAddition and multiplication operations have functions. However, division and subtraction operations don’t have functions\nColon: Includes the cell range in the operation. For example, if A2:A8, all cells from A2 to A8 are included in the operation\nSemicolon; Only includes those specific cells in the operation. Does not take the range. For example, if A2;A8, only A2 and A8 are included in the operation\nIf the value in the formula is a number, it is written directly. For example; A2=50\nIf the value in the formula is a word, it is written in quotes. For example; A2=“female”\nDuring formula replication, cell fixing can be done to prevent cell changes. Press F4 key to fix a cell. Or it can be fixed by writing manually.\n\n\nSource: HANIFE BOZKURT BATMAN\nAddition Operation\n=SUM(A1:A10) Performs Addition Operation. Adds Cells from A1 to A10.\n\nMultiplication Operation\n=PRODUCT(A1:A10) Performs Multiplication Operation. Multiplies Cells from A1 to A10. \n=AVERAGE(A1:A10) Calculates Average. Finds the Average of Cells from A1 to A10.\n=MAX(A1:A10) Finds the Largest Number. Finds the Highest Number in Cells from A1 to A10.\n=MIN(A1:A10) Finds the Smallest Number. Finds the Smallest Number in Cells from A1 to A10.\n=SMALL(A1:A10;2) Returns the SMALL number in the Range. However, which small number is required must be specified in the formula. Finds the 2nd smallest number from A1 to A10.\n=LARGE(A1:A10;3) Returns the LARGE number in the Range. However, which large number is required must be specified in the formula. Finds the 3rd largest number from A1 to A10.\n=ROW(A1) Returns the Row Number of the Cell.\n=COLUMN(A1) Returns the Column Number of the Cell.\n=LOWER(A1) Converts Text in Cell to Lowercase.\n=UPPER(A1) Converts Text in Cell to Uppercase.\n=PROPER(A1) Capitalizes the First Letters of Text in Cell.\n=CONCATENATE(A1;A2) Writes Values from Two Cells Side by Side, Combines Them.\n=TEXT(A1;“000”) Converts the Value in Cell to Text, Adds Zeros at the Beginning.\n=TEXT(A1;“DDDD”) If the Value in Cell is a Date, Returns the Day of the Week.\n=LEN(A1) Returns the Number of Characters in Cell Value.\n=INT(A1) Removes Everything After the Decimal Point in Cell’s Decimal Number. Converts to Integer.\n=ROUND(A1;1) Rounds the Decimal Places After the Decimal Point According to the Digit Value in the Formula.\n=ROUNDUP(A1;0) Rounds Up the Decimal Places After the Decimal Point to the Next Number.\n=ROUNDDOWN(A1;0) Rounds Down the Decimal Places After the Decimal Point to the Previous Number.\n=QUOTIENT(B2;C2) Is Division Operation. B2: Represents Numerator C2: Represents Denominator. Gives Quotient. Doesn’t Show Remainder.\n=MOD(B2;C2) B2: Represents Dividend, C2: Represents Divisor. Gives Remainder. Doesn’t Show Quotient.\n=COUNTBLANK(B2:B8) Returns Number of Empty Cells. Finds How Many Empty Cells There Are from B2 to B8.\n=COUNTA(B2:B8) Returns Number of Non-Empty Cells. Finds How Many Non-Empty Cells There Are from B2 to B8.\n=COUNT(B2:B8) Returns Number of Cells Containing Numbers. Finds How Many Cells Contain Numbers from B2 to B8.\n=COUNTIF(B2:B12;“Female”) Finds How Many of the Searched Value Exist. Finds How Many Cells Contain “Female” from B2 to B12.\n\nYou can use ornek2a.xlsx file for the following examples\n\n\nCOUNTIFS(B2:B12;“Female”;C2:C12;“&gt;18”) Finds How Many Match Multiple Search Criteria. Finds How Many Cells Contain “Female” Value from B2 to B12 AND Are Greater Than 18 from C2 to C12.\n\n=SUMIF(B2:B12;“Female”;C2:C12) Finds the Sum of the Range That Matches the Search Value. Finds the Sum of the Range from C2 to C12 Corresponding to Cells Containing “Female” from B2 to B12.\n\n=SUMIFS(C2:C12;A2:A12;“Sevgi”;B2:B12;“Female”) Finds the Sum of the Range That Matches Multiple Search Values. This formula sums the ages of those named Sevgi and who are Female.\n\n=AVERAGEIF(B2:B12;“Female”;C2:C12) Calculates the Average of Values Corresponding to Cells That Match the Search Criteria. Finds “Female” Values from B2 to B12 And Calculates the Average of Their Corresponding Values from C2 to C12.\n=AVERAGEIFS(C2:C12;A2:A12;“Sevgi”;B2:B12;“Female”) Calculates the Average of Values Corresponding to Cells That Match Multiple Search Criteria. Finds “Female” Values. Finds “Sevgi” Values. Takes Average of Ages.\n\n\n\n\nThis function allows for evaluating outcomes based on whether a condition is met or not.\nUsage format: =IF(condition;true result;false result)\ncondition can be written by comparing a cell with a number or comparing values of two cells.\ntrue result is the expression or value to be written when the condition is met.\nfalse result is the expression or value to be written when the condition is not met.\nLet’s Look at the Examples Below.\nWe assigned label 1 to True Result and 0 to False Result. After writing the first function, we can copy the same function for other cells by dragging the cells.\n\n\nWe assigned “Can Vote” to True Result and “Cannot Vote” to False Result. After writing the first function, we can copy the same function for other cells by dragging the cells.\n\n\n\n\n\nWhen you need to check multiple conditions in an IF function, you can use AND operator or OR operator. If you want all multiple conditions to be met for a positive result in the IF function, use the AND operator; if meeting just one of the conditions is sufficient, write the formula with the OR operator.\nLet’s add another column to the above table (Mental Status)\nIf age is 18 and mental status is sound, they can vote. That is, both conditions must be met.\n\nYou can use file ornek2b.xlsx for the following examples\n\n\n\nIf age is 18 or mental status is sound, they can vote. Meeting one condition is sufficient.\n\n\n\n\n\nLet’s say we have students and their grades. We want to show students who got:\n\n80 - 100 as “Very Good”\n60 - 79 as “Good”\n40 - 59 as “Average”\n20 - 39 as “Poor”\n0 - 19 as “Very Poor”\n\nLet’s examine the following function:\n=IF(B2&gt;=80;“Very Good”;IF(B2&gt;=60;“Good”;IF(B2&gt;=40;“Average”;IF(B2&gt;=20;“Poor”;“Very Poor”))))\n\nYou can use file ornek3.xlsx for the following examples"
  },
  {
    "objectID": "week4-excel-en.html",
    "href": "week4-excel-en.html",
    "title": "Excel",
    "section": "",
    "text": "This module will cover the following concepts:\n\nHistory of Excel\nExcel Interface and Screen Elements\nData Entry and Editing\nExcel Error Codes\nShortcuts\nSorting, Filtering, Conditional Formatting\nWriting Functions in Excel\nTables and Charts in Excel\n\n\n\nExcel is a spreadsheet program. The Excel program keeps all kinds of data in tables or lists and provides the ability to perform all the calculations and analyses you need with this data.\nNote: Excel has 1,048,576 rows, 16,384 columns, and 17,179,869,184 cells :)\nMicrosoft released the first version of Excel in 1985. Here are the versions of Excel released to date:\n\n1987 Excel 2.0 for Windows\n1990 Excel 3.0\n1992 Excel 4.0\n1993 Excel 5.0 (Office 4.2 & 4.3)\n1995 Excel for Windows 95 (version 7.0)\n1997 Excel 97 (version 8.0)\n1999 Excel 2000 (version 9.0)\n2001 Excel 2002 (version 10)\n2003 Office Excel 2003 (version 11)\n2007 Office Excel 2007 (version 12)\n2010 Excel 2010 (version 14)\n\n\n\n\nTo run Excel, type Excel in the Run Command Line and press Enter (You can use the Windows+R key combination for the Run Command Line). Below is the Excel program window.\n\nIn Excel, files are called “Workbooks”. Workbooks consist of sheets, and sheets consist of cells. When we save workbooks to our computer, the file extension is “xlsx”.\n\n(Source: https://blog.excel751.com)\nQuick Access Toolbar: This ribbon contains commands shown in tabs. The purpose here is to gather the most used commands together to make operations faster and more accessible. This ribbon can be customized according to the person’s requirements.\nTabs: These are the main headings where formulas, designs, and fonts are located. There are 10 tabs visible on the screen. These are: File, Home, Insert, Draw, Page Layout, Formulas, Data, Review, View, and Help tabs.\nApart from these, there is one more tab that you can add from Excel’s settings. This tab is called Developer. More coding is done here. You can access information about how to activate this tab and about the tab by clicking the link.\nGroups: Each tab contains commands. Commands with the same function are grouped together. Thus, multiple groups are created in each tab.\nTitle Bar: This is the area where the file name is written.\nSearch Bar: You can search for anything (command, feature, formula, template, etc.) in Excel by typing it here.\nUser Information: This is the section where the name, surname, and profile photo of the user logged in with a Microsoft Excel account are located.\nFormula Bar: The user performs operations (writing formulas, four operations, data entry, etc.) in the formula bar.\nGridlines: These are the lines created to define the areas of cells formed by row and column intersections.\nCell: This is where a row and column intersect. Data entries, formulas, etc. are made in this area. Excel has 17,179,869,184 cells.\nColumn headers are expressed with letters, and row headers with numbers. The cell that is clicked once with the mouse indicates the cell we will start working on actively and is marked with a black frame by Excel.\nRow: This is the area where row numbers are written. It starts from 1 and continues incrementing by 1. Operations such as row insertion can be performed in this area.\nColumn: This is the area where column numbers are located. It starts from A and continues according to alphabetical order. Operations such as new column insertion can be performed in this area.\nName Box: This is a section where the location of the selected cell, table name, or name of the defined area is written.\nSelect All: When this command is pressed, all cells in the Excel screen are selected.\nWorksheets: This is the area where users enter data and use formulas and features/commands when needed.\nAdd Sheet: When the user wants to switch to a new worksheet, they should click the + sign in the marked area shown in the image above.\nStatus Bar: This option displays the current cell editing mode at the bottom left of the screen. These cell editing modes are; General, Content, Cell, Formula.\nScroll Bars: These are bars used to easily scroll the page right/left or up/down in the workspace.\nPage Zoom In-Out: If you want to zoom in or out of your worksheet, you can use the buttons in this area. The zoom in/out operation performed on this page is specific to that page only. In other words, the same scale zoom in or out is not performed on other pages.\nNormal Page: This command, located in the bottom right corner of the Excel workspace, is one of Excel’s most well-known and used page layouts.\nPage Layout: When this command is clicked, the section related to Excel’s print area welcomes us. In this command, cells that can fit in the printing area are shown. The user can change this layout if desired.\nPage Break Preview: This command allows you to view Excel’s print area before printing. No changes or editing can be made here.\n\n\n\n\nData entry into an Excel cell can be started directly from the keyboard. The text will be visible both in the cell and in the formula bar. When you finish typing in the cell, you need to press the ENTER key on the keyboard for the change to be permanent. If only text is written, you can also use the arrow keys or tab key to move to other cells. However, if a formula is written, the Enter key must be used.\n\n\n\nLet’s type “hello, welcome to our lesson” as shown below and press Enter, the screen will look like this. To adjust the cell width, bring the mouse between A and B columns, and when the pointer takes the shape of (+), drag it to the right and release. We can also do thiswith a double click. We can use the same method to adjust row height.\n\n\n\n\nDifferent ways: * Double click inside the cell and make sure the cursor enters the cell. The cell content is ready to be modified * Press F2 key when the cell is selected, and with this action, the cursor enters the cell. The cell content is ready to be modified * Click on the formula bar. The cell content is ready to be modified\n\n\n\n\n\nWhen you right-click on a cell and select “Format Cells”, the Format Cells window appears. This window is useful for formatting cells into a specific format.\n\nSome options are defined below:\nGeneral: The default number format Excel applies when you type a number. Numbers formatted with General format are usually displayed exactly as you type them. However, if the cell is not wide enough to show the entire number, the General format rounds decimal numbers.\nNumber: Used for general display of numbers. You can determine the number of decimal places you want to use, whether you want to use a thousands separator, and how you want to display negative numbers.\nPercentage: Multiplies the cell value by 100 and displays the result with a percentage symbol (%). You can determine the number of decimal places you want to use.\nDate: Displays date and time serial numbers as date values according to the type and locale (location) you specify. Date formats that begin with an asterisk (*) respond to changes in regional date and time settings in Control Panel. Formats without an asterisk are not affected by Control Panel settings.\nText: Accepts cell content as text and displays it exactly as you type it, even when you type numbers.\n\n\n\n\nControls the alignment of text within the cell. Under the Orientation heading, you can give any direction to the text in the cell as desired.\n\n\n\n\nUsed to change the character style of text within the cell. The same options are available in the toolbar. (In Home-&gt;)\n\n\n\n\nThe lines around cells in the Excel worksheet are virtual. These lines are not visible when printed. To make the lines visible, you need to add “Borders” around the cells. Using the line styles under the Style heading, you can make desired changes. Also, border colors can be changed under the “Color” heading.\n\n\n\nUsed to change the background colors of cells.\n\n\n\n\nIf desired, cells can be locked to prevent data editing. Locking can also be done from Review-&gt;Protect Sheet option.\n\nNote: All of the above operations can also be done from the “Home” tab. If you click on the area marked in yellow, the formatting window will open automatically.\n\n\n\n\n\n\nWhen working in Excel, you start encountering different errors when you begin using formulas. Here are common errors in Excel:\n1. #NAME? Error: This error occurs when using an incorrectly written or undefined variable in the formula. It appears when you write the cell address or formula name incorrectly.\n\n\n\n\n2. #VALUE! Error: This error occurs when using the wrong data type in a formula. For example, you encounter this error when trying to add a number value with a text value.\n\n\n3. #DIV/0! Error: This error occurs when performing a division by zero operation in a formula. You encounter this error when you divide a number by a Zero value.\n\n\n4. #REF! Error: This is the most common error code in Excel. It gives this error when the target cell is invalid. You get a #REF! error when the targeted rows, columns, or cells have been deleted because that cell or address no longer exists.\nFor example, in the example below, the sum of Revenues is taken in cell C10. Normally, the formula written there is SUM(C5:C9). When you paste this formula into cell F4, cell copying operation takes effect as 6 rows up. However, there is no cell before row 1. In such a case, you get a #REF! error.\n\n5. #N/A Error: If no value is found in the written formula, you get a #N/A Error. This error is usually caused by space characters and incorrect spellings. The functions where #N/A errors are most commonly encountered are VLOOKUP, HLOOKUP, LOOKUP, MATCH. All of thesefunctions perform a search operation, and when they cannot find the relevant value, they return #N/A.\nFor example, let’s find what position Öykü is in the list. However, since there is no information about Öykü in the table, a #N/A erroris received.\n=MATCH(Lookup_value;Lookup_array;Match_type)\nLookup_value: The value you want to search for in the specified cell range. Can be a number, text, or cell reference\nLookup_array: The cell range where the specified value will be searched\nMatch_type: There are 3 matching options: * 1-Less than: Returns the first value that is equal to or less than the searched value. When using this match type, the looked-up cellrange must be sorted in ascending order. For example, 0,1,2,3… or A to Z * 0-Exact Match: Finds the data that exactly matches the searched value. The looked-up cell range can be in random order * -1 Greater than: Returns the first value that is equal to or greater than the searched value. When using this match type, the looked-up cell range must be sorted in ascending order. For example, 3,2,1,0… or Z to A\n\n\n\n\n6. #NUM! Error: Excel receives a #NUM! error in situations where it cannot perform calculations.\nFor example, you’ll get this error when trying to take the square root of a negative number.\n\n\n7. ####### Error Codes: Normally ### (hash) is not an error. If the cell width is not enough to show the content inside, it shows as ####. When you widen the column, the data will be visible.\n\n\n8. #NULL! Error: The #NULL Error usually gives this error when using a space character instead of Colon or semicolon characters when addressing cells for a function.\n\n\n\n\n\n\n\nCtrl+N: Opens a new excel workbook\nCtrl+X: Used for cutting\nCtrl+C: Used for copying\nCtrl+V: Used for pasting\nDelete: Deletes selected cell content\nCtrl+Z: Undoes action\nCtrl+Y: Redoes action\nCtrl+A: Select All\nCtrl+9: Hide Row\nCtrl+0: Hide Column\nCtrl+S: Save\nF12: Save As\nCtrl+F: Find\nCtrl+H: Find and Replace\nCtrl+Right arrow (→): Rightmost of row\nCtrl+Left arrow (←): Leftmost of row\nCtrl+Up arrow (↑): Top row\nCtrl+Down arrow (↓): Bottom row\nAlt+Down arrow (↓): Show other data entries\nCtrl+Home: Go to cell A1\nCtrl+Shift+Down/Up Arrow: When used by clicking on a specific data to the bottommost or topmost cell, selects all filled cells\nCtrl+Shift+Right/Left Arrow: When used by clicking on a specific data to the rightmost or leftmost cell, selects all filled cells\nShift+Space: Selects entire row\nCtrl+Space: Selects entire column\nCtrl+Page Up/Down: Switches between worksheets\nF11: Creates a column chart based on selected data (on a separate sheet)\nAlt+F1: Creates a column chart based on specific data (on the same sheet)\nCtrl+S: Saves changes in the workbook\nAlt+F4: Closes Excel\nand…\nESC: Exit from the active cell"
  },
  {
    "objectID": "week4-excel-en.html#history-of-excel",
    "href": "week4-excel-en.html#history-of-excel",
    "title": "Excel",
    "section": "",
    "text": "Excel is a spreadsheet program. The Excel program keeps all kinds of data in tables or lists and provides the ability to perform all the calculations and analyses you need with this data.\nNote: Excel has 1,048,576 rows, 16,384 columns, and 17,179,869,184 cells :)\nMicrosoft released the first version of Excel in 1985. Here are the versions of Excel released to date:\n\n1987 Excel 2.0 for Windows\n1990 Excel 3.0\n1992 Excel 4.0\n1993 Excel 5.0 (Office 4.2 & 4.3)\n1995 Excel for Windows 95 (version 7.0)\n1997 Excel 97 (version 8.0)\n1999 Excel 2000 (version 9.0)\n2001 Excel 2002 (version 10)\n2003 Office Excel 2003 (version 11)\n2007 Office Excel 2007 (version 12)\n2010 Excel 2010 (version 14)"
  },
  {
    "objectID": "week4-excel-en.html#excel-interface-and-screen-elements",
    "href": "week4-excel-en.html#excel-interface-and-screen-elements",
    "title": "Excel",
    "section": "",
    "text": "To run Excel, type Excel in the Run Command Line and press Enter (You can use the Windows+R key combination for the Run Command Line). Below is the Excel program window.\n\nIn Excel, files are called “Workbooks”. Workbooks consist of sheets, and sheets consist of cells. When we save workbooks to our computer, the file extension is “xlsx”.\n\n(Source: https://blog.excel751.com)\nQuick Access Toolbar: This ribbon contains commands shown in tabs. The purpose here is to gather the most used commands together to make operations faster and more accessible. This ribbon can be customized according to the person’s requirements.\nTabs: These are the main headings where formulas, designs, and fonts are located. There are 10 tabs visible on the screen. These are: File, Home, Insert, Draw, Page Layout, Formulas, Data, Review, View, and Help tabs.\nApart from these, there is one more tab that you can add from Excel’s settings. This tab is called Developer. More coding is done here. You can access information about how to activate this tab and about the tab by clicking the link.\nGroups: Each tab contains commands. Commands with the same function are grouped together. Thus, multiple groups are created in each tab.\nTitle Bar: This is the area where the file name is written.\nSearch Bar: You can search for anything (command, feature, formula, template, etc.) in Excel by typing it here.\nUser Information: This is the section where the name, surname, and profile photo of the user logged in with a Microsoft Excel account are located.\nFormula Bar: The user performs operations (writing formulas, four operations, data entry, etc.) in the formula bar.\nGridlines: These are the lines created to define the areas of cells formed by row and column intersections.\nCell: This is where a row and column intersect. Data entries, formulas, etc. are made in this area. Excel has 17,179,869,184 cells.\nColumn headers are expressed with letters, and row headers with numbers. The cell that is clicked once with the mouse indicates the cell we will start working on actively and is marked with a black frame by Excel.\nRow: This is the area where row numbers are written. It starts from 1 and continues incrementing by 1. Operations such as row insertion can be performed in this area.\nColumn: This is the area where column numbers are located. It starts from A and continues according to alphabetical order. Operations such as new column insertion can be performed in this area.\nName Box: This is a section where the location of the selected cell, table name, or name of the defined area is written.\nSelect All: When this command is pressed, all cells in the Excel screen are selected.\nWorksheets: This is the area where users enter data and use formulas and features/commands when needed.\nAdd Sheet: When the user wants to switch to a new worksheet, they should click the + sign in the marked area shown in the image above.\nStatus Bar: This option displays the current cell editing mode at the bottom left of the screen. These cell editing modes are; General, Content, Cell, Formula.\nScroll Bars: These are bars used to easily scroll the page right/left or up/down in the workspace.\nPage Zoom In-Out: If you want to zoom in or out of your worksheet, you can use the buttons in this area. The zoom in/out operation performed on this page is specific to that page only. In other words, the same scale zoom in or out is not performed on other pages.\nNormal Page: This command, located in the bottom right corner of the Excel workspace, is one of Excel’s most well-known and used page layouts.\nPage Layout: When this command is clicked, the section related to Excel’s print area welcomes us. In this command, cells that can fit in the printing area are shown. The user can change this layout if desired.\nPage Break Preview: This command allows you to view Excel’s print area before printing. No changes or editing can be made here.\n\n\n\n\nData entry into an Excel cell can be started directly from the keyboard. The text will be visible both in the cell and in the formula bar. When you finish typing in the cell, you need to press the ENTER key on the keyboard for the change to be permanent. If only text is written, you can also use the arrow keys or tab key to move to other cells. However, if a formula is written, the Enter key must be used.\n\n\n\nLet’s type “hello, welcome to our lesson” as shown below and press Enter, the screen will look like this. To adjust the cell width, bring the mouse between A and B columns, and when the pointer takes the shape of (+), drag it to the right and release. We can also do thiswith a double click. We can use the same method to adjust row height.\n\n\n\n\nDifferent ways: * Double click inside the cell and make sure the cursor enters the cell. The cell content is ready to be modified * Press F2 key when the cell is selected, and with this action, the cursor enters the cell. The cell content is ready to be modified * Click on the formula bar. The cell content is ready to be modified\n\n\n\n\n\nWhen you right-click on a cell and select “Format Cells”, the Format Cells window appears. This window is useful for formatting cells into a specific format.\n\nSome options are defined below:\nGeneral: The default number format Excel applies when you type a number. Numbers formatted with General format are usually displayed exactly as you type them. However, if the cell is not wide enough to show the entire number, the General format rounds decimal numbers.\nNumber: Used for general display of numbers. You can determine the number of decimal places you want to use, whether you want to use a thousands separator, and how you want to display negative numbers.\nPercentage: Multiplies the cell value by 100 and displays the result with a percentage symbol (%). You can determine the number of decimal places you want to use.\nDate: Displays date and time serial numbers as date values according to the type and locale (location) you specify. Date formats that begin with an asterisk (*) respond to changes in regional date and time settings in Control Panel. Formats without an asterisk are not affected by Control Panel settings.\nText: Accepts cell content as text and displays it exactly as you type it, even when you type numbers.\n\n\n\n\nControls the alignment of text within the cell. Under the Orientation heading, you can give any direction to the text in the cell as desired.\n\n\n\n\nUsed to change the character style of text within the cell. The same options are available in the toolbar. (In Home-&gt;)\n\n\n\n\nThe lines around cells in the Excel worksheet are virtual. These lines are not visible when printed. To make the lines visible, you need to add “Borders” around the cells. Using the line styles under the Style heading, you can make desired changes. Also, border colors can be changed under the “Color” heading.\n\n\n\nUsed to change the background colors of cells.\n\n\n\n\nIf desired, cells can be locked to prevent data editing. Locking can also be done from Review-&gt;Protect Sheet option.\n\nNote: All of the above operations can also be done from the “Home” tab. If you click on the area marked in yellow, the formatting window will open automatically."
  },
  {
    "objectID": "week4-excel-en.html#excel-error-codes",
    "href": "week4-excel-en.html#excel-error-codes",
    "title": "Excel",
    "section": "",
    "text": "When working in Excel, you start encountering different errors when you begin using formulas. Here are common errors in Excel:\n1. #NAME? Error: This error occurs when using an incorrectly written or undefined variable in the formula. It appears when you write the cell address or formula name incorrectly.\n\n\n\n\n2. #VALUE! Error: This error occurs when using the wrong data type in a formula. For example, you encounter this error when trying to add a number value with a text value.\n\n\n3. #DIV/0! Error: This error occurs when performing a division by zero operation in a formula. You encounter this error when you divide a number by a Zero value.\n\n\n4. #REF! Error: This is the most common error code in Excel. It gives this error when the target cell is invalid. You get a #REF! error when the targeted rows, columns, or cells have been deleted because that cell or address no longer exists.\nFor example, in the example below, the sum of Revenues is taken in cell C10. Normally, the formula written there is SUM(C5:C9). When you paste this formula into cell F4, cell copying operation takes effect as 6 rows up. However, there is no cell before row 1. In such a case, you get a #REF! error.\n\n5. #N/A Error: If no value is found in the written formula, you get a #N/A Error. This error is usually caused by space characters and incorrect spellings. The functions where #N/A errors are most commonly encountered are VLOOKUP, HLOOKUP, LOOKUP, MATCH. All of thesefunctions perform a search operation, and when they cannot find the relevant value, they return #N/A.\nFor example, let’s find what position Öykü is in the list. However, since there is no information about Öykü in the table, a #N/A erroris received.\n=MATCH(Lookup_value;Lookup_array;Match_type)\nLookup_value: The value you want to search for in the specified cell range. Can be a number, text, or cell reference\nLookup_array: The cell range where the specified value will be searched\nMatch_type: There are 3 matching options: * 1-Less than: Returns the first value that is equal to or less than the searched value. When using this match type, the looked-up cellrange must be sorted in ascending order. For example, 0,1,2,3… or A to Z * 0-Exact Match: Finds the data that exactly matches the searched value. The looked-up cell range can be in random order * -1 Greater than: Returns the first value that is equal to or greater than the searched value. When using this match type, the looked-up cell range must be sorted in ascending order. For example, 3,2,1,0… or Z to A\n\n\n\n\n6. #NUM! Error: Excel receives a #NUM! error in situations where it cannot perform calculations.\nFor example, you’ll get this error when trying to take the square root of a negative number.\n\n\n7. ####### Error Codes: Normally ### (hash) is not an error. If the cell width is not enough to show the content inside, it shows as ####. When you widen the column, the data will be visible.\n\n\n8. #NULL! Error: The #NULL Error usually gives this error when using a space character instead of Colon or semicolon characters when addressing cells for a function."
  },
  {
    "objectID": "week4-excel-en.html#shortcuts",
    "href": "week4-excel-en.html#shortcuts",
    "title": "Excel",
    "section": "",
    "text": "Ctrl+N: Opens a new excel workbook\nCtrl+X: Used for cutting\nCtrl+C: Used for copying\nCtrl+V: Used for pasting\nDelete: Deletes selected cell content\nCtrl+Z: Undoes action\nCtrl+Y: Redoes action\nCtrl+A: Select All\nCtrl+9: Hide Row\nCtrl+0: Hide Column\nCtrl+S: Save\nF12: Save As\nCtrl+F: Find\nCtrl+H: Find and Replace\nCtrl+Right arrow (→): Rightmost of row\nCtrl+Left arrow (←): Leftmost of row\nCtrl+Up arrow (↑): Top row\nCtrl+Down arrow (↓): Bottom row\nAlt+Down arrow (↓): Show other data entries\nCtrl+Home: Go to cell A1\nCtrl+Shift+Down/Up Arrow: When used by clicking on a specific data to the bottommost or topmost cell, selects all filled cells\nCtrl+Shift+Right/Left Arrow: When used by clicking on a specific data to the rightmost or leftmost cell, selects all filled cells\nShift+Space: Selects entire row\nCtrl+Space: Selects entire column\nCtrl+Page Up/Down: Switches between worksheets\nF11: Creates a column chart based on selected data (on a separate sheet)\nAlt+F1: Creates a column chart based on specific data (on the same sheet)\nCtrl+S: Saves changes in the workbook\nAlt+F4: Closes Excel\nand…\nESC: Exit from the active cell"
  },
  {
    "objectID": "week4-algoritms-en.html#lets-visualize-algoritms",
    "href": "week4-algoritms-en.html#lets-visualize-algoritms",
    "title": "Basic Programming - Algoritms",
    "section": "Let’s visualize algoritms",
    "text": "Let’s visualize algoritms\n\nLightbot game online\nPlay the guess the number game interactively.\nKhan Academy Binary Search\n\n\nWhat is an Algorithm?\nAn algorithm is an ordered list of steps that must be followed to solve a specific problem or perform a specific task.\n\n\nGeneral Characteristics of Algorithms\n\nPrecision: Each step must be defined clearly and precisely.\nFiniteness: The algorithm must end at a certain point and produce a result.\nSequentiality: Steps must be applied in a specific order."
  },
  {
    "objectID": "week4-algoritms-en.html#problem-solving-steps",
    "href": "week4-algoritms-en.html#problem-solving-steps",
    "title": "Basic Programming - Algoritms",
    "section": "Problem Solving Steps",
    "text": "Problem Solving Steps\n\nProblem Definition: Problem definition is the clear expression of the problem that needs to be solved. In this step, the scope and objectives of the problem are determined.\nDetermining Inputs and Outputs: In this step, the data to be used in solving the problem (inputs) and the results to be obtained (outputs) are determined. The relationship between inputs and outputs is defined.\nDeveloping Solution Methods: Multiple methods or ways can be developed to solve the problem. In this step, potential solutions are evaluated and the most appropriate one is selected.\nAlgorithm Control and Improvement: The chosen solution is written as an algorithm and this algorithm is checked and necessary improvements are made. It is ensured that the algorithm works correctly.\nCoding the Algorithm: In this step, the developed algorithm is coded using a specific programming language. During coding, each step of the algorithm is converted into programming language.\nCode Control and Improvement: Testing the written code and fixing errors are done in this step. The performance and accuracy of the code are checked and necessary improvements are made."
  },
  {
    "objectID": "week4-algoritms-en.html#algorithm-steps",
    "href": "week4-algoritms-en.html#algorithm-steps",
    "title": "Basic Programming - Algoritms",
    "section": "Algorithm Steps",
    "text": "Algorithm Steps\n\nStart\nDefine variables: number1, number2, sum\nGet values for number1 and number2\nsum = number1 + number2\nPrint sum value\nStop"
  },
  {
    "objectID": "week4-algoritms-en.html#simple-addition-operation-with-python-code",
    "href": "week4-algoritms-en.html#simple-addition-operation-with-python-code",
    "title": "Basic Programming - Algoritms",
    "section": "Simple Addition Operation with Python Code",
    "text": "Simple Addition Operation with Python Code\n\nNote: You can run the Python codes at this link\n\nGet two numbers from the user and perform addition\nnumber1 = int(input(\"Enter the first number: \"))\n\nnumber2 = int(input(\"Enter the second number: \"))\n\nsum = number1 + number2\n\nprint(sum)"
  },
  {
    "objectID": "week4-algoritms-en.html#flow-charts",
    "href": "week4-algoritms-en.html#flow-charts",
    "title": "Basic Programming - Algoritms",
    "section": "Flow Charts",
    "text": "Flow Charts\n\nWhat is a Flow Chart?\nFlow charts are diagrams that visually represent the steps of an algorithm. Flow charts make the process flow and control structure more understandable.\nFlow diagrams enable easy understanding, tracking, and control of the algorithm. Their disadvantage is that they can be very long in detailed algorithms.\nThe symbols used in flow diagrams and their meanings are shown in the image below.\n\n\nFlow Chart Symbols and Usage\n\nStart/End: Oval shapes indicate the start and end points of the algorithm.\nProcess: Rectangle shapes show process steps.\nDecision: Diamond shapes indicate conditional branching points.\nInput/Output: Parallelogram shapes show data input and output.\nArrows: Indicate flow direction.\n\n\n\n\nschema1\n\n\nThis image shows the meanings of shapes used in flow charts.\n\n\nExample Flow Chart\n\n\n\nschema2\n\n\nThis image shows a flow chart containing a decision structure."
  },
  {
    "objectID": "week4-algoritms-en.html#basic-coding-for-programming",
    "href": "week4-algoritms-en.html#basic-coding-for-programming",
    "title": "Basic Programming - Algoritms",
    "section": "Basic Coding for Programming",
    "text": "Basic Coding for Programming"
  },
  {
    "objectID": "week4-algoritms-en.html#variables-and-data-types",
    "href": "week4-algoritms-en.html#variables-and-data-types",
    "title": "Basic Programming - Algoritms",
    "section": "Variables and Data Types",
    "text": "Variables and Data Types\nVariables are areas used to store data in the program. Data types specify what kind of data the variables will store.\n\nnumber = 10 integer\nname = “Ali” string\npi = 3.14 float\nis_true = True boolean"
  },
  {
    "objectID": "week4-algoritms-en.html#basic-inputoutput-operations",
    "href": "week4-algoritms-en.html#basic-inputoutput-operations",
    "title": "Basic Programming - Algoritms",
    "section": "Basic Input/Output Operations",
    "text": "Basic Input/Output Operations\nOperations used to get data from the user and print data to the screen."
  },
  {
    "objectID": "week4-algoritms-en.html#mathematical-operations-and-operators",
    "href": "week4-algoritms-en.html#mathematical-operations-and-operators",
    "title": "Basic Programming - Algoritms",
    "section": "Mathematical Operations and Operators",
    "text": "Mathematical Operations and Operators\n\n\n\n\nPython\nR\n\n\n\n\nEquals\n==\n==\n\n\nLess Than\n&lt;\n&lt;\n\n\nGreater Than\n&gt;\n&gt;\n\n\nLess Than or Equal\n&lt;=\n&lt;=\n\n\nGreater Than or Equal\n&gt;=\n&gt;=\n\n\nNot Equal\n!=\n!=\n\n\n\n\nR Mathematical Operations\na &lt;- 5\nb &lt;- 3\n\n#Addition\n\nresult_add &lt;- a + b\nprint(result_add)\n\nOutput: 8\n\n#Subtraction\n\nresult_sub &lt;- a - b\nprint(result_sub)\n\nOutput: 2\n\n#Multiplication\n\nresult_mul &lt;- a * b\nprint(result_mul)\n\nOutput: 15\n\n#Division\n\nresult_div &lt;- a / b\nprint(result_div)\n\nOutput: 1.6666666666666667\n\n#Modulus\n\nresult_mod &lt;- a %% b\nprint(result_mod)\n\nOutput: 2\n\n#Exponentiation\n\nresult_exp &lt;- a ^ b\nprint(result_exp)\n\nOutput: 125\n\n\nPython\n\nNote: You can run the Python codes at this link\n\n#### Python Mathematical Operations\na = 5\nb = 3\n\n#Addition\nprint(a + b)\n#Subtraction\nprint(a - b)\n#Multiplication\nprint(a * b)\n#Division\nprint(a / b)\n#Modulus\nprint(a % b)"
  },
  {
    "objectID": "week4-algoritms-en.html#control-structures-if-else",
    "href": "week4-algoritms-en.html#control-structures-if-else",
    "title": "Basic Programming - Algoritms",
    "section": "Control Structures If-Else",
    "text": "Control Structures If-Else\nControl structures allow the program to follow different paths based on certain conditions.\n# Example: if-else Structure\nnumber = int(input(\"Enter a number: \"))\nif number % 2 == 0:\n    print(\"Number is even\")\nelse:\n    print(\"Number is odd\")\n# Example: if-else Structure (giving 5)\nnumber = 5\nif number % 2 == 0:\n    print(\"Number is even\")\nelse:\n    print(\"Number is odd\")\n# Example: if-else Structure (giving 6)\nnumber = 6\nif number % 2 == 0:\n    print(\"Number is even\")\nelse:\n    print(\"Number is odd\")\na = 5\nb = 10\nif (a &gt; b):\n    print(\"a is greater than b\")\nelse:\n    print(\"a is less than or equal to b\")"
  },
  {
    "objectID": "week4-algoritms-en.html#logical-operators-and-or-not",
    "href": "week4-algoritms-en.html#logical-operators-and-or-not",
    "title": "Basic Programming - Algoritms",
    "section": "Logical Operators: and, or, not",
    "text": "Logical Operators: and, or, not\nLogical operators allow multiple conditions to be evaluated together.\n# Example: Logical Operators\na = True\nb = False\nprint(a and b)\nprint(a or b)\nprint(not a)\nLogical operators allow multiple conditions to be evaluated together. True value is evaluated as 1, False value is evaluated as 0.\n# Logical operators with values 1 and 0\na = 1\nb = 0\nprint(a and b)  # Output: 0 (False)\nprint(a or b)   # Output: 1 (True)\nprint(not a)    # Output: False"
  },
  {
    "objectID": "week4-algoritms-en.html#loops-for-and-while",
    "href": "week4-algoritms-en.html#loops-for-and-while",
    "title": "Basic Programming - Algoritms",
    "section": "Loops: for and while",
    "text": "Loops: for and while\nLoops allow a specific operation to be repeated.\n# Example: for Loop\nfor i in range(5):\n    print(\"Hello World\")\n# Example: while Loop\ni = 0\nwhile i &lt; 5:\n    print(\"Hello World\") #Prints Hello World 5 times on separate lines\n    i += 1\n# for Loop\nfor i in range(1, 6):\n    print(i)\n# while Loop\ni = 1\nwhile i &lt;= 5:\n    print(i)\n    i += 1"
  }
]